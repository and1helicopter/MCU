; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --no_integer_literal_pools --list -c --asm --interleave -o.\exec\menu.o --asm_dir=.\LIST\ --list_dir=.\LIST\ --depend=.\exec\menu.d --cpu=Cortex-M4.fp --apcs=interwork -Otime --diag_suppress=9931 -I.\STARTUP -I.\PERIPH -I..\PRG1 -I.\SOURCE -IF:\Program\Keil_v5\ARM\RV31\INC -IF:\Program\Keil_v5\ARM\CMSIS\Include -IF:\Program\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=524 -DEK_PP_0815_12_03 -DSTM32F429_439xx --omf_browse=.\exec\menu.crf SOURCE\Menu.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  AlarmList PROC
;;;8      
;;;9      void AlarmList(int ErrorCode, int *ViewStr) {
000000  b4f0              PUSH     {r4-r7}
;;;10     int i;
;;;11     int CountViewStr = 0;
000002  2300              MOVS     r3,#0
;;;12     int RealViewStr  = 0;
;;;13     int MaxViewStr   = 0;
;;;14     
;;;15       if (*ViewStr < 0) {*ViewStr = 0;}
000004  680a              LDR      r2,[r1,#0]
000006  469c              MOV      r12,r3                ;12
000008  461c              MOV      r4,r3                 ;13
00000a  2a00              CMP      r2,#0
00000c  bfbc              ITT      LT
00000e  2200              MOVLT    r2,#0
000010  600a              STRLT    r2,[r1,#0]
;;;16     
;;;17       for (i = 0; i < 32; ) {
000012  2200              MOVS     r2,#0
;;;18     		if (ErrorCode & (1ul << i++)) { 
000014  2501              MOVS     r5,#1
                  |L1.22|
000016  fa05f602          LSL      r6,r5,r2
00001a  4206              TST      r6,r0
00001c  f1020201          ADD      r2,r2,#1
000020  d005              BEQ      |L1.46|
;;;19     			CountViewStr++; 
;;;20     			MaxViewStr = i;
;;;21     			if (CountViewStr == *ViewStr) {RealViewStr = i;}
000022  680e              LDR      r6,[r1,#0]
000024  1c5b              ADDS     r3,r3,#1
000026  4614              MOV      r4,r2                 ;20
000028  429e              CMP      r6,r3
00002a  bf08              IT       EQ
00002c  46a4              MOVEQ    r12,r4
                  |L1.46|
00002e  2a20              CMP      r2,#0x20              ;17
000030  dbf1              BLT      |L1.22|
;;;22     		}//if
;;;23     	}  //for
;;;24     
;;;25       if (*ViewStr > CountViewStr) {*ViewStr = CountViewStr; RealViewStr = MaxViewStr;}
000032  6808              LDR      r0,[r1,#0]
000034  4298              CMP      r0,r3
000036  bfc4              ITT      GT
000038  600b              STRGT    r3,[r1,#0]
00003a  46a4              MOVGT    r12,r4
;;;26     
;;;27       switch (RealViewStr) {
00003c  f1bc0f21          CMP      r12,#0x21
000040  f0808085          BCS.W    |L1.334|
000044  e8dff00c          TBB      [pc,r12]
000048  11171d23          DCB      0x11,0x17,0x1d,0x23
00004c  292f353b          DCB      0x29,0x2f,0x35,0x3b
000050  41474d53          DCB      0x41,0x47,0x4d,0x53
000054  595f171d          DCB      0x59,0x5f,0x17,0x1d
000058  656b7177          DCB      0x65,0x6b,0x71,0x77
00005c  83838383          DCB      0x83,0x83,0x83,0x83
000060  83838383          DCB      0x83,0x83,0x83,0x83
000064  83838383          DCB      0x83,0x83,0x83,0x83
000068  7d00              DCB      0x7d,0x00
;;;28     		case  0:	{lcdout(16,16,"ЗАЩИТЫ         }");} break;
00006a  bcf0              POP      {r4-r7}
00006c  2110              MOVS     r1,#0x10
00006e  a2d7              ADR      r2,|L1.972|
000070  4608              MOV      r0,r1
000072  f7ffbffe          B.W      lcdout
;;;29     		case 14:
;;;30     		case  1:	{lcdout(16,16,">МТЗ 1          ");} break;
000076  bcf0              POP      {r4-r7}
000078  2110              MOVS     r1,#0x10
00007a  a2d9              ADR      r2,|L1.992|
00007c  4608              MOV      r0,r1
00007e  f7ffbffe          B.W      lcdout
;;;31     		case 15:
;;;32     		case  2:	{lcdout(16,16,">МТЗ 2          ");} break;
000082  bcf0              POP      {r4-r7}
000084  2110              MOVS     r1,#0x10
000086  a2db              ADR      r2,|L1.1012|
000088  4608              MOV      r0,r1
00008a  f7ffbffe          B.W      lcdout
;;;33     		
;;;34     		case  3:	{lcdout(16,16,">Udc макс.      ");} break;
00008e  bcf0              POP      {r4-r7}
000090  2110              MOVS     r1,#0x10
000092  a2dd              ADR      r2,|L1.1032|
000094  4608              MOV      r0,r1
000096  f7ffbffe          B.W      lcdout
;;;35     		case  4:	{lcdout(16,16,">Udc мин.       ");} break;
00009a  bcf0              POP      {r4-r7}
00009c  2110              MOVS     r1,#0x10
00009e  a2df              ADR      r2,|L1.1052|
0000a0  4608              MOV      r0,r1
0000a2  f7ffbffe          B.W      lcdout
;;;36     		case  5:	{lcdout(16,16,">TIM1 BKIN      ");} break;
0000a6  bcf0              POP      {r4-r7}
0000a8  2110              MOVS     r1,#0x10
0000aa  a2e1              ADR      r2,|L1.1072|
0000ac  4608              MOV      r0,r1
0000ae  f7ffbffe          B.W      lcdout
;;;37     		case  6:	{lcdout(16,16,">TIM8 BKIN      ");} break;
0000b2  bcf0              POP      {r4-r7}
0000b4  2110              MOVS     r1,#0x10
0000b6  a2e3              ADR      r2,|L1.1092|
0000b8  4608              MOV      r0,r1
0000ba  f7ffbffe          B.W      lcdout
;;;38     		case  7:  {lcdout(16,16,">Ошибка синхрон.");} break;
0000be  bcf0              POP      {r4-r7}
0000c0  2110              MOVS     r1,#0x10
0000c2  a2e5              ADR      r2,|L1.1112|
0000c4  4608              MOV      r0,r1
0000c6  f7ffbffe          B.W      lcdout
;;;39     		case  8:  {lcdout(16,16,">Низкое Uсинхр. ");} break;
0000ca  bcf0              POP      {r4-r7}
0000cc  2110              MOVS     r1,#0x10
0000ce  a2e7              ADR      r2,|L1.1132|
0000d0  4608              MOV      r0,r1
0000d2  f7ffbffe          B.W      lcdout
;;;40     		case  9:  {lcdout(16,16,">Высокая тем-ра ");} break;
0000d6  bcf0              POP      {r4-r7}
0000d8  2110              MOVS     r1,#0x10
0000da  a2e9              ADR      r2,|L1.1152|
0000dc  4608              MOV      r0,r1
0000de  f7ffbffe          B.W      lcdout
;;;41     		case 10:  {lcdout(16,16,">Высокое Uсинхр.");} break;
0000e2  bcf0              POP      {r4-r7}
0000e4  2110              MOVS     r1,#0x10
0000e6  a2eb              ADR      r2,|L1.1172|
0000e8  4608              MOV      r0,r1
0000ea  f7ffbffe          B.W      lcdout
;;;42     		case 11:  {lcdout(16,16,">МТЗ 3          ");} break;
0000ee  bcf0              POP      {r4-r7}
0000f0  2110              MOVS     r1,#0x10
0000f2  a2ed              ADR      r2,|L1.1192|
0000f4  4608              MOV      r0,r1
0000f6  f7ffbffe          B.W      lcdout
;;;43     		case 12:  {lcdout(16,16,">МТЗ 4          ");} break;
0000fa  bcf0              POP      {r4-r7}
0000fc  2110              MOVS     r1,#0x10
0000fe  a2ef              ADR      r2,|L1.1212|
000100  4608              MOV      r0,r1
000102  f7ffbffe          B.W      lcdout
;;;44     		case 13:  {lcdout(16,16,">Защита резистор");} break;
000106  bcf0              POP      {r4-r7}
000108  2110              MOVS     r1,#0x10
00010a  a2f1              ADR      r2,|L1.1232|
00010c  4608              MOV      r0,r1
00010e  f7ffbffe          B.W      lcdout
;;;45     		case 16:  {lcdout(16,16,">Высокочаст.ток ");} break;
000112  bcf0              POP      {r4-r7}
000114  2110              MOVS     r1,#0x10
000116  a2f3              ADR      r2,|L1.1252|
000118  4608              MOV      r0,r1
00011a  f7ffbffe          B.W      lcdout
;;;46     
;;;47     		case 17:	{lcdout(16,16,">Отказ KM1      ");} break;
00011e  bcf0              POP      {r4-r7}
000120  2110              MOVS     r1,#0x10
000122  a2f5              ADR      r2,|L1.1272|
000124  4608              MOV      r0,r1
000126  f7ffbffe          B.W      lcdout
;;;48     		case 18:	{lcdout(16,16,">Неуспеш.зарядDС");} break;
00012a  bcf0              POP      {r4-r7}
00012c  2110              MOVS     r1,#0x10
00012e  a2f7              ADR      r2,|L1.1292|
000130  4608              MOV      r0,r1
000132  f7ffbffe          B.W      lcdout
;;;49     		case 19:	{lcdout(16,16,">Неуспеш.зарядАС");} break;
000136  bcf0              POP      {r4-r7}
000138  2110              MOVS     r1,#0x10
00013a  a2f9              ADR      r2,|L1.1312|
00013c  4608              MOV      r0,r1
00013e  f7ffbffe          B.W      lcdout
;;;50     		
;;;51     		case 32:	{lcdout(16,16,">Аварийный СТОП ");} break;	
000142  bcf0              POP      {r4-r7}
000144  2110              MOVS     r1,#0x10
000146  a2fb              ADR      r2,|L1.1332|
000148  4608              MOV      r0,r1
00014a  f7ffbffe          B.W      lcdout
                  |L1.334|
;;;52     	
;;;53     		default:	{lcdout(16,16,"Неизвестн.защита");} break;
00014e  bcf0              POP      {r4-r7}
000150  2110              MOVS     r1,#0x10
000152  a2fd              ADR      r2,|L1.1352|
000154  4608              MOV      r0,r1
000156  f7ffbffe          B.W      lcdout
;;;54     	} //switch
;;;55     }
;;;56     
                          ENDP

                  ViewAlarmList PROC
;;;57     void ViewAlarmList(int ErrorCode) {
00015a  b538              PUSH     {r3-r5,lr}
00015c  4605              MOV      r5,r0
;;;58     int PultKeyb = 0;
;;;59     int ViewStr = 0;
00015e  2000              MOVS     r0,#0
;;;60     
;;;61     ClearPultKeyb();
000160  f2400100          MOVW     r1,#:LOWER16: WorkPultKeyb
000164  f2c00100          MOVT     r1,#:UPPER16: WorkPultKeyb
000168  9000              STR      r0,[sp,#0]
00016a  6008              STR      r0,[r1,#0]  ; WorkPultKeyb
                  |L1.364|
;;;62     while (1) {
;;;63     	do {PultKeyb = WaitPultReady();} while (PultKeyb == 0);			/* Ожидаем завершения передачи и получения нажатых кнопок на пульте	*/
00016c  f7fffffe          BL       WaitPultReady
000170  0004              MOVS     r4,r0
000172  d0fb              BEQ      |L1.364|
;;;64     	ClearScreen();
000174  f7fffffe          BL       ClearScreen
;;;65     	
;;;66     	switch (PultKeyb & (0x7F & ~K_Shift)) {
000178  f004003f          AND      r0,r4,#0x3f
00017c  2802              CMP      r0,#2
;;;67     		case K_Up:		ViewStr--; break;
;;;68     		case K_Down:	ViewStr++; break;
00017e  bf04              ITT      EQ
000180  9800              LDREQ    r0,[sp,#0]
000182  1c40              ADDEQ    r0,r0,#1
000184  d007              BEQ      |L1.406|
000186  2803              CMP      r0,#3                 ;66
;;;69     		case K_Left:	return;
;;;70     	} /* switch (PultKeyb & 0x7F) */
;;;71     	
;;;72     	lcdout(0,16,"СПИСОК ЗАЩИТ   ");
;;;73     	AlarmList(ErrorCode, &ViewStr);
;;;74     	
;;;75     	while (PultRefresh());
;;;76     	} /* while (1) */
;;;77     }	/* void Display() */
000188  bf08              IT       EQ
00018a  bd38              POPEQ    {r3-r5,pc}
00018c  2808              CMP      r0,#8                 ;66
00018e  bf04              ITT      EQ                    ;67
000190  9800              LDREQ    r0,[sp,#0]            ;67
000192  1e40              SUBEQ    r0,r0,#1              ;67
000194  d100              BNE      |L1.408|
                  |L1.406|
000196  9000              STR      r0,[sp,#0]            ;68
                  |L1.408|
000198  a2f0              ADR      r2,|L1.1372|
00019a  2110              MOVS     r1,#0x10              ;72
00019c  2000              MOVS     r0,#0                 ;72
00019e  f7fffffe          BL       lcdout
0001a2  4669              MOV      r1,sp                 ;73
0001a4  4628              MOV      r0,r5                 ;73
0001a6  f7fffffe          BL       AlarmList
                  |L1.426|
0001aa  f7fffffe          BL       PultRefresh
0001ae  2800              CMP      r0,#0                 ;75
0001b0  d1fb              BNE      |L1.426|
0001b2  e7db              B        |L1.364|
;;;78     
                          ENDP

                  Monitor PROC
;;;82     
;;;83     void Monitor(struct EventLog_type *DispPrms) {
0001b4  e92d4ff0          PUSH     {r4-r11,lr}
;;;84     static int ViewStr = 1;	
;;;85     int i = 0;
;;;86     int Inc = 0;
0001b8  f04f0800          MOV      r8,#0
0001bc  ed2d8b02          VPUSH    {d8}                  ;83
0001c0  b083              SUB      sp,sp,#0xc            ;83
0001c2  4604              MOV      r4,r0                 ;83
;;;87     int Pause = 0;
0001c4  4647              MOV      r7,r8
;;;88     int Repeat = 0;	
;;;89     int PultKeyb = 0;
;;;90     int WorkViewStr = 0;
;;;91     
;;;92     static int AlarmStrNum = 0 ;
;;;93       
;;;94     int Memoryindex = 0; 
0001c6  4646              MOV      r6,r8
;;;95     	
;;;96     ClearPultKeyb();
0001c8  f2400100          MOVW     r1,#:LOWER16: WorkPultKeyb
0001cc  f2c00100          MOVT     r1,#:UPPER16: WorkPultKeyb
;;;97     while (1) {
;;;98     	/* Ожидаем завершения передачи и получения нажатых кнопок на пульте	*/
;;;99     	do {PultKeyb = WaitPultReady();} while (PultKeyb == 0);
;;;100    
;;;101    	switch (PultKeyb & (0x7F & ~K_Shift)) {
;;;102        case K_Plus:  {Memoryindex++; Pause = 0;}break;
;;;103        case K_Minus: {Memoryindex--; Pause = 0;}break;
;;;104    		case K_Up:		Inc = -1; break;
;;;105    		case K_Down:	Inc = +1; break;
0001d0  f04f0a01          MOV      r10,#1
;;;106    		case K_Ena:		{Metro.NeedEnable  |= 1;} break;
;;;107    		case K_Dis:		{Metro.NeedDisable |= 1; if ((PultKeyb & K_Shift) /*&& (StdPrms.Status == 5)*/) {Metro.CANCmndTx |= 0x0001;}} break;
;;;108    		case K_Left:	return;
;;;109    		case K_Enter:	{if (ViewStr == AlarmStrNum) ViewAlarmList(DispPrms->AlarmWord1); else Metro.OscilCmnd.OscilNeed = 1;} break;
;;;110    	} /* switch (PultKeyb & 0x7F) */
;;;111    
;;;112      
;;;113      
;;;114    	if (Pause == 0) {
;;;115    		Pause = 4;
;;;116    		ClearScreen();					/* Очищаем экран пульта */
;;;117    
;;;118    		ViewStr += Inc;
;;;119    
;;;120    		Inc = 0;
;;;121    		
;;;122    		if (ViewStr < 1) ViewStr = 1;
;;;123    
;;;124    		do {
;;;125    			WorkViewStr = ViewStr;
;;;126    			
;;;127    		
;;;128    			if (!(--WorkViewStr)) {lcdoutDT3(DispPrms->RTC_Date, DispPrms->RTC_Time, DispPrms->RTC_SSC); break;}
;;;129    //			if (!(--WorkViewStr)) {lcdout(0,16,"TIM1->CCR1         ");		lcdouthex8(16,TIM1->CCR1); break;}
;;;130    //			if (!(--WorkViewStr)) {lcdout(0,16,"TIM1->CCR2         ");		lcdouthex8(16,TIM1->CCR2); break;}
;;;131    //			if (!(--WorkViewStr)) {lcdout(0,16,"TIM1->CCR3         ");		lcdouthex8(16,TIM1->CCR3); break;}	
;;;132    			if (!(--WorkViewStr)) {lcdout(0,16,"Каналы           ");   lcdout(16,16,ptrSavedOscilConfig->OscilChNumName[Memoryindex]); break;}
;;;133    			if (!(--WorkViewStr)) 
;;;134          {
;;;135            lcdout(0,16,"Осцилл           ");   
;;;136            lcdouttextl(8,PrgData.OscilCmnd.OscilLenght,0,""); 
;;;137            lcdouttextl(16,PrgData.OscilCmnd.OscilHistoryCount, 0,"");
;;;138            lcdouttextl(24,PrgData.OscilCmnd.OscilRemainingCount, 0,"");         
;;;139          break;}
;;;140    
;;;141          
;;;142          
;;;143    			if (!(--WorkViewStr)) {lcdout(0,16,"Статус IGBT 1    ");   lcdouttextl(16, DispPrms->IGBTStat1[0],0,""); break;}
;;;144    			if (!(--WorkViewStr)) {lcdout(0,16,"Статус IGBT 2    ");   lcdouttextl(16, DispPrms->IGBTStat2[0],0,""); break;}
;;;145    			if (!(--WorkViewStr)) {lcdout(0,16,"Статус IGBT 3    ");   lcdoutBIN(16, DispPrms->IGBTStat3[0]); break;}
;;;146    			if (!(--WorkViewStr)) {lcdout(0,16,"Статус IGBT 4    ");   lcdoutBIN(16, DispPrms->IGBTStat4[0]); break;}
;;;147    			if (!(--WorkViewStr)) {lcdout(0,16,"Дискрет. входы 1");   lcdoutBIN(16, DispPrms->DigInput1); break;}
;;;148    //			if (!(--WorkViewStr)) {lcdout(0,22,"IGBTStatCounterL      "); lcdouttextl(22, PrgData.IGBTStatCounterL, 0, ""); break;}
;;;149    //			if (!(--WorkViewStr)) {lcdout(0,22,"IGBTStatCounterR      "); lcdouttextl(22, PrgData.IGBTStatCounterR, 0, ""); break;}
;;;150    //			if (!(--WorkViewStr)) {lcdout(0,16,"Дискрет. входы 2");   lcdoutBIN(16, DispPrms->DigInput2); break;}
;;;151    //			if (!(--WorkViewStr)) {lcdout(0,16,"Дискрет. входы 3");   lcdoutBIN(16, DispPrms->DigInput3); break;}
;;;152    //			if (!(--WorkViewStr)) {lcdout(0,16,"Дискрет. входы 4");   lcdoutBIN(16, DispPrms->DigInput4); break;}
;;;153    			if (!(--WorkViewStr)) {lcdout(0,16,"Дискрет.выходы 1");   lcdoutBIN(16, DispPrms->DigOutPut1); break;}
;;;154    //			if (!(--WorkViewStr)) {lcdout(0,16,"Дискрет.выходы 2");   lcdoutBIN(16, DispPrms->DigOutPut2); break;}
;;;155    //			if (!(--WorkViewStr)) {lcdout(0,16,"Дискрет.выходы 3");   lcdoutBIN(16, DispPrms->DigOutPut3); break;}
;;;156    //			if (!(--WorkViewStr)) {lcdout(0,16,"Дискрет.выходы 4");   lcdoutBIN(16, DispPrms->DigOutPut4); break;}				
;;;157    			if (!(--WorkViewStr)) {lcdout(0,16,"Список защит   |"); AlarmStrNum = ViewStr;	break;}
;;;158    //			if (!(--WorkViewStr)) Предупреждения
;;;159    			
;;;160    //			for (i = 0; i < 24; i++) {
;;;161    //				if (!(--WorkViewStr)) {
;;;162    //					lcdout(0,17,"Температура     T");
;;;163    //					lcdouttextl(17, i, 0, ":");
;;;164    //					lcdouttextl(21, DispPrms->T[i], 0, " °C");
;;;165    //					break;
;;;166    //				}
;;;167    //			}
;;;168    //			if (!(WorkViewStr)) break;			
;;;169    			
;;;170    			if (!(--WorkViewStr)) {lcdout(0,22,"Напряжение синх.Us:   "); lcdouttextl(22, DispPrms->SUFlt * 0.1f, 1, " B"); break;}
0001d4  ed9f8ae5          VLDR     s16,|L1.1388|
;;;171    			if (!(--WorkViewStr)) {lcdout(0,22,"Ток 1           I1:   "); lcdouttextl(22, DispPrms->I1Flt * 0.1f, 1, " A"); break;}
;;;172    			if (!(--WorkViewStr)) {lcdout(0,22,"Ток 2           I2:   "); lcdouttextl(22, DispPrms->I2Flt * 0.1f, 1, " A"); break;}
;;;173    			if (!(--WorkViewStr)) {lcdout(0,22,"Ток 3           I3:   "); lcdouttextl(22, DispPrms->I3Flt * 0.1f, 1, " A"); break;}
;;;174    			if (!(--WorkViewStr)) {lcdout(0,22,"Ток 4           I4:   "); lcdouttextl(22, DispPrms->I4Flt * 0.1f, 1, " A"); break;}
;;;175    			if (!(--WorkViewStr)) {lcdout(0,22,"Напряжение Udc 1Udc1: "); lcdouttextl(22, DispPrms->Udc1Flt * 0.1f, 1, " B"); break;}
;;;176    			if (!(--WorkViewStr)) {lcdout(0,22,"Напряжение Udc 2Udc2: "); lcdouttextl(22, DispPrms->Udc2Flt * 0.1f, 1, " B"); break;}
;;;177    			if (!(--WorkViewStr)) {lcdout(0,20,"Актив.мощность 1P1: "); 	lcdouttextl(20, DispPrms->P1Flt*PQKoef, 1, " кBт") ; break;}
0001d8  eddf8ae5          VLDR     s17,|L1.1392|
0001dc  f2400900          MOVW     r9,#:LOWER16: ||.data||;109
0001e0  f2c00900          MOVT     r9,#:UPPER16: ||.data||;109
0001e4  f2400500          MOVW     r5,#:LOWER16: Metro+8192
0001e8  f2c00500          MOVT     r5,#:UPPER16: Metro+8192
0001ec  f8c18000          STR      r8,[r1,#0]            ;106  ; WorkPultKeyb
                  |L1.496|
0001f0  f7fffffe          BL       WaitPultReady
0001f4  0001              MOVS     r1,r0                 ;99
0001f6  d0fb              BEQ      |L1.496|
0001f8  f001003f          AND      r0,r1,#0x3f           ;101
0001fc  2808              CMP      r0,#8                 ;101
0001fe  bf08              IT       EQ                    ;104
000200  f04f38ff          MOVEQ    r8,#0xffffffff        ;104
000204  d067              BEQ      |L1.726|
000206  dc14              BGT      |L1.562|
000208  2801              CMP      r0,#1                 ;101
00020a  bf08              IT       EQ                    ;101
00020c  1e76              SUBEQ    r6,r6,#1              ;101
00020e  d06b              BEQ      |L1.744|
000210  2802              CMP      r0,#2                 ;101
000212  bf08              IT       EQ                    ;105
000214  f04f0801          MOVEQ    r8,#1                 ;105
000218  d05d              BEQ      |L1.726|
00021a  2803              CMP      r0,#3                 ;101
;;;178    			if (!(--WorkViewStr)) {lcdout(0,21,"Реакт.мощность12Q12: "); 	lcdouttextl(21, DispPrms->Q12Flt_rms*PQKoef, 1, " кBАр"); break;}
;;;179    			if (!(--WorkViewStr)) {lcdout(0,20,"Актив.мощность 2P2: "); 	lcdouttextl(20, DispPrms->P2Flt*PQKoef, 1, " кBт") ; break;}
;;;180    			if (!(--WorkViewStr)) {lcdout(0,20,"Реакт.мощность34Q34: "); 	lcdouttextl(21, DispPrms->Q34Flt_rms*PQKoef, 1, " кBАр"); break;}
;;;181    		
;;;182    //			for (i = 0; i < 4; i++) {
;;;183    //				if (!(--WorkViewStr)) {
;;;184    //					lcdout(0,18,"Температура     TD");
;;;185    //					lcdouttextl(18, i, 0, ":");
;;;186    //					lcdouttextl(22, DispPrms->TD[i] /10.0f, 1, " °C");
;;;187    //					break;
;;;188    //				}
;;;189    //			}
;;;190    //			if (!(WorkViewStr)) break;	
;;;191    
;;;192    //			for (i = 4; i < 6; i++) {
;;;193    //				if (!(--WorkViewStr)) {
;;;194    //					lcdout(0,17,"Датчик давления P");
;;;195    //					lcdouttextl(17, (i - 4), 0, ":");
;;;196    //					lcdouttextl(22, DispPrms->TD[i] /200.0f, 2, " mA");
;;;197    //					break;
;;;198    //				}
;;;199    //			}
;;;200    //			if (!(WorkViewStr)) break;
;;;201    
;;;202    	    ///////////////////////
;;;203    			if (!(--WorkViewStr))	{lcdout(0,16,"&Ia12_fixcorrect");		lcdouthex8(16,((int)(&PrgData.Ia12_fixcorrect) - (int)(&PrgData)) >> 1); break;} 
;;;204    			if (!(--WorkViewStr))	{lcdout(0,16,"ExtADCArray   	");		lcdouthex8(16,((int)(&PrgData.ExtADCArray[0]) - (int)(&PrgData)) >> 1); break;}
;;;205    			if (!(--WorkViewStr))	{lcdout(0,16,"Ia12_fixcorrect ");		lcdouttextl(16,PrgData.Ia12_fixcorrect,0,""); break;}
;;;206    			if (!(--WorkViewStr))	{lcdout(0,16,"Ic12_fixcorrect ");		lcdouttextl(16,PrgData.Ic12_fixcorrect,0,""); break;}
;;;207    			if (!(--WorkViewStr))	{lcdout(0,16,"Ia34_fixcorrect ");		lcdouttextl(16,PrgData.Ia34_fixcorrect,0,""); break;}
;;;208    			if (!(--WorkViewStr))	{lcdout(0,16,"Ic34_fixcorrect ");		lcdouttextl(16,PrgData.Ic34_fixcorrect,0,""); break;}
;;;209    
;;;210    			
;;;211    //			if (!(--WorkViewStr)) {lcdout(0,16,"CAN1->RF0R          ");		lcdouthex8(16,CAN1->RF0R); break;}
;;;212    //			if (!(--WorkViewStr)) {lcdout(0,16,"CAN1->ESR          ");		lcdouthex8(16,CAN1->ESR); break;}
;;;213    //			if (!(--WorkViewStr)) {lcdout(0,16,"CAN1->MSR          ");		lcdouthex8(16,CAN1->MSR); break;}
;;;214    //			if (!(--WorkViewStr)) {lcdout(0,16,"CAN1->MCR          ");		lcdouthex8(16,CAN1->MCR); break;}
;;;215    //			
;;;216    //			if (!(--WorkViewStr)) {lcdout(0,16,"Metro.CANRefUdc      ");		lcdouthex8(16,Metro.CANRefUdc); break;}				
;;;217    //			if (!(--WorkViewStr)) {lcdout(0,16,"Metro.CANStatus      ");		lcdouthex8(16,Metro.CANStatus); break;}				
;;;218    //			if (!(--WorkViewStr)) {lcdout(0,16,"Metro.CANCmndTx      ");		lcdouthex8(16,Metro.CANCmndTx); break;}				
;;;219    //			if (!(--WorkViewStr)) {lcdout(0,16,"Metro.CANCmndRx      ");		lcdouthex8(16,Metro.CANCmndRx); break;}				
;;;220    			ViewStr -= WorkViewStr;
;;;221    		} while (WorkViewStr);
;;;222    	} else Pause--;
;;;223    	
;;;224    	while (PultRefresh());
;;;225    	} /* while (1) */
;;;226    }	/* void Monitor(struct EventLog_type DispPrms) */
00021c  bf02              ITTT     EQ
00021e  b003              ADDEQ    sp,sp,#0xc
000220  ecbd8b02          VPOPEQ   {d8}
000224  e8bd8ff0          POPEQ    {r4-r11,pc}
000228  2804              CMP      r0,#4                 ;101
00022a  bf08              IT       EQ                    ;101
00022c  1c76              ADDEQ    r6,r6,#1              ;101
00022e  d05b              BEQ      |L1.744|
000230  e051              B        |L1.726|
                  |L1.562|
000232  280c              CMP      r0,#0xc               ;101
000234  d01b              BEQ      |L1.622|
000236  2810              CMP      r0,#0x10              ;101
000238  d002              BEQ      |L1.576|
00023a  2820              CMP      r0,#0x20              ;101
00023c  d007              BEQ      |L1.590|
00023e  e04a              B        |L1.726|
                  |L1.576|
000240  f8b50302          LDRH     r0,[r5,#0x302]        ;106  ; Metro
000244  f0400001          ORR      r0,r0,#1              ;106
000248  f8a50302          STRH     r0,[r5,#0x302]        ;106
00024c  e043              B        |L1.726|
                  |L1.590|
00024e  f8b50300          LDRH     r0,[r5,#0x300]        ;107  ; Metro
000252  f0110f40          TST      r1,#0x40              ;107
000256  f0400001          ORR      r0,r0,#1              ;107
00025a  f8a50300          STRH     r0,[r5,#0x300]        ;107
00025e  d03a              BEQ      |L1.726|
000260  f8d50480          LDR      r0,[r5,#0x480]        ;107  ; Metro
000264  f0400001          ORR      r0,r0,#1              ;107
000268  f8c50480          STR      r0,[r5,#0x480]        ;107  ; Metro
00026c  e033              B        |L1.726|
                  |L1.622|
00026e  e9d9011c          LDRD     r0,r1,[r9,#0x70]      ;107
000272  4288              CMP      r0,r1                 ;109
000274  bf18              IT       NE                    ;109
000276  f8a5a008          STRHNE   r10,[r5,#8]           ;109
00027a  d12c              BNE      |L1.726|
00027c  6aa0              LDR      r0,[r4,#0x28]         ;109
00027e  9001              STR      r0,[sp,#4]            ;109
000280  2000              MOVS     r0,#0                 ;109
000282  f2400100          MOVW     r1,#:LOWER16: WorkPultKeyb
000286  f2c00100          MOVT     r1,#:UPPER16: WorkPultKeyb
00028a  9000              STR      r0,[sp,#0]            ;109
00028c  6008              STR      r0,[r1,#0]            ;109  ; WorkPultKeyb
                  |L1.654|
00028e  f7fffffe          BL       WaitPultReady
000292  ea5f0b00          MOVS     r11,r0                ;109
000296  d0fa              BEQ      |L1.654|
000298  f7fffffe          BL       ClearScreen
00029c  f00b003f          AND      r0,r11,#0x3f          ;109
0002a0  2802              CMP      r0,#2                 ;109
0002a2  bf04              ITT      EQ                    ;109
0002a4  9800              LDREQ    r0,[sp,#0]            ;109
0002a6  1c40              ADDEQ    r0,r0,#1              ;109
0002a8  d006              BEQ      |L1.696|
0002aa  2803              CMP      r0,#3                 ;109
0002ac  d013              BEQ      |L1.726|
0002ae  2808              CMP      r0,#8                 ;109
0002b0  bf04              ITT      EQ                    ;109
0002b2  9800              LDREQ    r0,[sp,#0]            ;109
0002b4  1e40              SUBEQ    r0,r0,#1              ;109
0002b6  d100              BNE      |L1.698|
                  |L1.696|
0002b8  9000              STR      r0,[sp,#0]            ;109
                  |L1.698|
0002ba  a2a8              ADR      r2,|L1.1372|
0002bc  2110              MOVS     r1,#0x10              ;109
0002be  2000              MOVS     r0,#0                 ;109
0002c0  f7fffffe          BL       lcdout
0002c4  4669              MOV      r1,sp                 ;109
0002c6  9801              LDR      r0,[sp,#4]            ;109
0002c8  f7fffffe          BL       AlarmList
                  |L1.716|
0002cc  f7fffffe          BL       PultRefresh
0002d0  2800              CMP      r0,#0                 ;109
0002d2  d1fb              BNE      |L1.716|
0002d4  e7db              B        |L1.654|
                  |L1.726|
0002d6  2f00              CMP      r7,#0                 ;114
0002d8  bf18              IT       NE                    ;114
0002da  1e7f              SUBNE    r7,r7,#1              ;114
0002dc  d004              BEQ      |L1.744|
                  |L1.734|
0002de  f7fffffe          BL       PultRefresh
0002e2  2800              CMP      r0,#0                 ;224
0002e4  d1fb              BNE      |L1.734|
0002e6  e783              B        |L1.496|
                  |L1.744|
0002e8  2704              MOVS     r7,#4                 ;115
0002ea  f7fffffe          BL       ClearScreen
0002ee  f8d90070          LDR      r0,[r9,#0x70]         ;118  ; ViewStr
0002f2  4440              ADD      r0,r0,r8              ;118
0002f4  f04f0800          MOV      r8,#0                 ;120
0002f8  f8c90070          STR      r0,[r9,#0x70]         ;122  ; ViewStr
0002fc  2801              CMP      r0,#1                 ;122
0002fe  bfb8              IT       LT                    ;122
000300  f8c9a070          STRLT    r10,[r9,#0x70]        ;122  ; ViewStr
000304  f8d90070          LDR      r0,[r9,#0x70]         ;125  ; ViewStr
                  |L1.776|
000308  1e41              SUBS     r1,r0,#1              ;128
00030a  d055              BEQ      |L1.952|
00030c  1e49              SUBS     r1,r1,#1              ;128
00030e  d054              BEQ      |L1.954|
000310  1e49              SUBS     r1,r1,#1              ;132
000312  d053              BEQ      |L1.956|
000314  1e49              SUBS     r1,r1,#1              ;133
000316  d052              BEQ      |L1.958|
000318  1e49              SUBS     r1,r1,#1              ;143
00031a  d051              BEQ      |L1.960|
00031c  1e49              SUBS     r1,r1,#1              ;144
00031e  d050              BEQ      |L1.962|
000320  1e49              SUBS     r1,r1,#1              ;145
000322  d04f              BEQ      |L1.964|
000324  1e49              SUBS     r1,r1,#1              ;146
000326  d04e              BEQ      |L1.966|
000328  1e49              SUBS     r1,r1,#1              ;147
00032a  d04d              BEQ      |L1.968|
00032c  1e49              SUBS     r1,r1,#1              ;153
00032e  f00081bc          BEQ.W    |L1.1706|
000332  1e49              SUBS     r1,r1,#1              ;157
000334  f00081c3          BEQ.W    |L1.1726|
000338  1e49              SUBS     r1,r1,#1              ;170
00033a  f00081d2          BEQ.W    |L1.1762|
00033e  1e49              SUBS     r1,r1,#1              ;171
000340  f00081e1          BEQ.W    |L1.1798|
000344  1e49              SUBS     r1,r1,#1              ;172
000346  f00081f0          BEQ.W    |L1.1834|
00034a  1e49              SUBS     r1,r1,#1              ;173
00034c  f00081fe          BEQ.W    |L1.1868|
000350  1e49              SUBS     r1,r1,#1              ;174
000352  f000820c          BEQ.W    |L1.1902|
000356  1e49              SUBS     r1,r1,#1              ;175
000358  f000821a          BEQ.W    |L1.1936|
00035c  1e49              SUBS     r1,r1,#1              ;176
00035e  f0008228          BEQ.W    |L1.1970|
000362  1e49              SUBS     r1,r1,#1              ;177
000364  f0008236          BEQ.W    |L1.2004|
000368  1e49              SUBS     r1,r1,#1              ;178
00036a  f0008244          BEQ.W    |L1.2038|
00036e  1e49              SUBS     r1,r1,#1              ;179
000370  f0008252          BEQ.W    |L1.2072|
000374  1e49              SUBS     r1,r1,#1              ;180
000376  f0008260          BEQ.W    |L1.2106|
00037a  1e49              SUBS     r1,r1,#1              ;203
00037c  f0008268          BEQ.W    |L1.2128|
000380  1e49              SUBS     r1,r1,#1              ;204
000382  f0008270          BEQ.W    |L1.2150|
000386  1e49              SUBS     r1,r1,#1              ;205
000388  f000827c          BEQ.W    |L1.2180|
00038c  1e49              SUBS     r1,r1,#1              ;206
00038e  f000828a          BEQ.W    |L1.2214|
000392  1e49              SUBS     r1,r1,#1              ;207
000394  2900              CMP      r1,#0                 ;208
000396  bf1c              ITT      NE                    ;220
000398  1a40              SUBNE    r0,r0,r1              ;220
00039a  f8c90070          STRNE    r0,[r9,#0x70]         ;220  ; ViewStr
00039e  d1b3              BNE      |L1.776|
0003a0  a274              ADR      r2,|L1.1396|
0003a2  f04f0110          MOV      r1,#0x10              ;208
0003a6  f04f0000          MOV      r0,#0                 ;208
0003aa  f7fffffe          BL       lcdout
0003ae  f9b5080a          LDRSH    r0,[r5,#0x80a]        ;208  ; Metro
0003b2  ee000a10          VMOV     s0,r0                 ;208
0003b6  e0e7              B        |L1.1416|
                  |L1.952|
0003b8  e0ef              B        |L1.1434|
                  |L1.954|
0003ba  e0f4              B        |L1.1446|
                  |L1.956|
0003bc  e106              B        |L1.1484|
                  |L1.958|
0003be  e128              B        |L1.1554|
                  |L1.960|
0003c0  e138              B        |L1.1588|
                  |L1.962|
0003c2  e148              B        |L1.1622|
                  |L1.964|
0003c4  e152              B        |L1.1644|
                  |L1.966|
0003c6  e15c              B        |L1.1666|
                  |L1.968|
0003c8  e165              B        |L1.1686|
0003ca  0000              DCW      0x0000
                  |L1.972|
0003cc  c7c0d9c8          DCB      199,192,217,200,210,219,"         }"
0003d0  d2db2020
0003d4  20202020
0003d8  2020207d
                  |L1.988|
0003dc  00                DCB      0
0003dd  00                DCB      0
0003de  00                DCB      0
0003df  00                DCB      0
                  |L1.992|
0003e0  3eccd2c7          DCB      ">",204,210,199," 1          ",0
0003e4  20312020
0003e8  20202020
0003ec  20202020
0003f0  00      
0003f1  00                DCB      0
0003f2  00                DCB      0
0003f3  00                DCB      0
                  |L1.1012|
0003f4  3eccd2c7          DCB      ">",204,210,199," 2          ",0
0003f8  20322020
0003fc  20202020
000400  20202020
000404  00      
000405  00                DCB      0
000406  00                DCB      0
000407  00                DCB      0
                  |L1.1032|
000408  3e556463          DCB      ">Udc ",236,224,234,241,".      ",0
00040c  20ece0ea
000410  f12e2020
000414  20202020
000418  00      
000419  00                DCB      0
00041a  00                DCB      0
00041b  00                DCB      0
                  |L1.1052|
00041c  3e556463          DCB      ">Udc ",236,232,237,".       ",0
000420  20ece8ed
000424  2e202020
000428  20202020
00042c  00      
00042d  00                DCB      0
00042e  00                DCB      0
00042f  00                DCB      0
                  |L1.1072|
000430  3e54494d          DCB      ">TIM1 BKIN      ",0
000434  3120424b
000438  494e2020
00043c  20202020
000440  00      
000441  00                DCB      0
000442  00                DCB      0
000443  00                DCB      0
                  |L1.1092|
000444  3e54494d          DCB      ">TIM8 BKIN      ",0
000448  3820424b
00044c  494e2020
000450  20202020
000454  00      
000455  00                DCB      0
000456  00                DCB      0
000457  00                DCB      0
                  |L1.1112|
000458  3ecef8e8          DCB      ">",206,248,232,225,234,224," ",241,232,237,245,240,238,237
00045c  e1eae020
000460  f1e8edf5
000464  f0eeed  
000467  2e00              DCB      ".",0
000469  00                DCB      0
00046a  00                DCB      0
00046b  00                DCB      0
                  |L1.1132|
00046c  3ecde8e7          DCB      ">",205,232,231,234,238,229," U",241,232,237,245,240,". "
000470  eaeee520
000474  55f1e8ed
000478  f5f02e20
00047c  00                DCB      0
00047d  00                DCB      0
00047e  00                DCB      0
00047f  00                DCB      0
                  |L1.1152|
000480  3ec2fbf1          DCB      ">",194,251,241,238,234,224,255," ",242,229,236,"-",240,224
000484  eeeae0ff
000488  20f2e5ec
00048c  2df0e0  
00048f  2000              DCB      " ",0
000491  00                DCB      0
000492  00                DCB      0
000493  00                DCB      0
                  |L1.1172|
000494  3ec2fbf1          DCB      ">",194,251,241,238,234,238,229," U",241,232,237,245,240
000498  eeeaeee5
00049c  2055f1e8
0004a0  edf5f0  
0004a3  2e00              DCB      ".",0
0004a5  00                DCB      0
0004a6  00                DCB      0
0004a7  00                DCB      0
                  |L1.1192|
0004a8  3eccd2c7          DCB      ">",204,210,199," 3          ",0
0004ac  20332020
0004b0  20202020
0004b4  20202020
0004b8  00      
0004b9  00                DCB      0
0004ba  00                DCB      0
0004bb  00                DCB      0
                  |L1.1212|
0004bc  3eccd2c7          DCB      ">",204,210,199," 4          ",0
0004c0  20342020
0004c4  20202020
0004c8  20202020
0004cc  00      
0004cd  00                DCB      0
0004ce  00                DCB      0
0004cf  00                DCB      0
                  |L1.1232|
0004d0  3ec7e0f9          DCB      ">",199,224,249,232,242,224," ",240,229,231,232,241,242,238
0004d4  e8f2e020
0004d8  f0e5e7e8
0004dc  f1f2ee  
0004df  f000              DCB      240,0
0004e1  00                DCB      0
0004e2  00                DCB      0
0004e3  00                DCB      0
                  |L1.1252|
0004e4  3ec2fbf1          DCB      ">",194,251,241,238,234,238,247,224,241,242,".",242,238,234
0004e8  eeeaeef7
0004ec  e0f1f22e
0004f0  f2eeea  
0004f3  2000              DCB      " ",0
0004f5  00                DCB      0
0004f6  00                DCB      0
0004f7  00                DCB      0
                  |L1.1272|
0004f8  3ecef2ea          DCB      ">",206,242,234,224,231," KM1      ",0
0004fc  e0e7204b
000500  4d312020
000504  20202020
000508  00      
000509  00                DCB      0
00050a  00                DCB      0
00050b  00                DCB      0
                  |L1.1292|
00050c  3ecde5f3          DCB      ">",205,229,243,241,239,229,248,".",231,224,240,255,228,"D"
000510  f1efe5f8
000514  2ee7e0f0
000518  ffe444  
00051b  d100              DCB      209,0
00051d  00                DCB      0
00051e  00                DCB      0
00051f  00                DCB      0
                  |L1.1312|
000520  3ecde5f3          DCB      ">",205,229,243,241,239,229,248,".",231,224,240,255,228,192
000524  f1efe5f8
000528  2ee7e0f0
00052c  ffe4c0  
00052f  d100              DCB      209,0
000531  00                DCB      0
000532  00                DCB      0
000533  00                DCB      0
                  |L1.1332|
000534  3ec0e2e0          DCB      ">",192,226,224,240,232,233,237,251,233," ",209,210,206,207
000538  f0e8e9ed
00053c  fbe920d1
000540  d2cecf  
000543  2000              DCB      " ",0
000545  00                DCB      0
000546  00                DCB      0
000547  00                DCB      0
                  |L1.1352|
000548  cde5e8e7          DCB      205,229,232,231,226,229,241,242,237,".",231,224,249,232,242
00054c  e2e5f1f2
000550  ed2ee7e0
000554  f9e8f2  
000557  e000              DCB      224,0
000559  00                DCB      0
00055a  00                DCB      0
00055b  00                DCB      0
                  |L1.1372|
00055c  d1cfc8d1          DCB      209,207,200,209,206,202," ",199,192,217,200,210,"   ",0
000560  ceca20c7
000564  c0d9c8d2
000568  20202000
                  |L1.1388|
00056c  3dcccccd          DCFS     0x3dcccccd ; 0.10000000149011612
                  |L1.1392|
000570  3d914b82          DCFS     0x3d914b82 ; 0.070944800972938538
                  |L1.1396|
000574  49633334          DCB      "Ic34_fixcorrect ",0
000578  5f666978
00057c  636f7272
000580  65637420
000584  00      
000585  00                DCB      0
000586  00                DCB      0
000587  00                DCB      0
                  |L1.1416|
000588  eeb80ac0          VCVT.F32.S32 s0,s0                 ;208
00058c  f2af12b4          ADR      r2,|L1.988|
000590  2100              MOVS     r1,#0                 ;208
000592  2010              MOVS     r0,#0x10              ;208
000594  f7fffffe          BL       lcdouttextl
000598  e6a1              B        |L1.734|
                  |L1.1434|
00059a  e9d40101          LDRD     r0,r1,[r4,#4]         ;128
00059e  68e2              LDR      r2,[r4,#0xc]          ;128
0005a0  f7fffffe          BL       lcdoutDT3
0005a4  e69b              B        |L1.734|
                  |L1.1446|
0005a6  a2f8              ADR      r2,|L1.2440|
0005a8  2110              MOVS     r1,#0x10              ;132
0005aa  2000              MOVS     r0,#0                 ;132
0005ac  f7fffffe          BL       lcdout
0005b0  f2400000          MOVW     r0,#:LOWER16: ptrSavedOscilConfig
0005b4  f2c00000          MOVT     r0,#:UPPER16: ptrSavedOscilConfig
0005b8  6800              LDR      r0,[r0,#0]            ;132  ; ptrSavedOscilConfig
0005ba  2110              MOVS     r1,#0x10              ;132
0005bc  eb001046          ADD      r0,r0,r6,LSL #5       ;132
0005c0  f100028e          ADD      r2,r0,#0x8e           ;132
0005c4  4608              MOV      r0,r1                 ;132
0005c6  f7fffffe          BL       lcdout
0005ca  e688              B        |L1.734|
                  |L1.1484|
0005cc  a2f3              ADR      r2,|L1.2460|
0005ce  2110              MOVS     r1,#0x10              ;135
0005d0  2000              MOVS     r0,#0                 ;135
0005d2  f7fffffe          BL       lcdout
0005d6  ed950abe          VLDR     s0,[r5,#0x2f8]        ;136
0005da  eeb80a40          VCVT.F32.U32 s0,s0                 ;136
0005de  f2af2204          ADR      r2,|L1.988|
0005e2  2100              MOVS     r1,#0                 ;136
0005e4  2008              MOVS     r0,#8                 ;136
0005e6  f7fffffe          BL       lcdouttextl
0005ea  ed950a00          VLDR     s0,[r5,#0]            ;137
0005ee  eeb80a40          VCVT.F32.U32 s0,s0                 ;137
0005f2  f2af2218          ADR      r2,|L1.988|
0005f6  2100              MOVS     r1,#0                 ;137
0005f8  2010              MOVS     r0,#0x10              ;137
0005fa  f7fffffe          BL       lcdouttextl
0005fe  ed950abf          VLDR     s0,[r5,#0x2fc]        ;138
000602  eeb80a40          VCVT.F32.U32 s0,s0                 ;138
000606  f2af222c          ADR      r2,|L1.988|
00060a  2100              MOVS     r1,#0                 ;138
00060c  2018              MOVS     r0,#0x18              ;138
00060e  f000b947          B.W      |L1.2208|
                  |L1.1554|
000612  a2e7              ADR      r2,|L1.2480|
000614  2110              MOVS     r1,#0x10              ;143
000616  2000              MOVS     r0,#0                 ;143
000618  f7fffffe          BL       lcdout
00061c  f9b4008c          LDRSH    r0,[r4,#0x8c]         ;143
000620  ee000a10          VMOV     s0,r0                 ;143
000624  eeb80ac0          VCVT.F32.S32 s0,s0                 ;143
000628  f2af2250          ADR      r2,|L1.988|
00062c  2100              MOVS     r1,#0                 ;143
00062e  2010              MOVS     r0,#0x10              ;143
000630  f000b936          B.W      |L1.2208|
                  |L1.1588|
000634  a2e3              ADR      r2,|L1.2500|
000636  2110              MOVS     r1,#0x10              ;144
000638  2000              MOVS     r0,#0                 ;144
00063a  f7fffffe          BL       lcdout
00063e  f9b4009a          LDRSH    r0,[r4,#0x9a]         ;144
000642  ee000a10          VMOV     s0,r0                 ;144
000646  eeb80ac0          VCVT.F32.S32 s0,s0                 ;144
00064a  f2af2270          ADR      r2,|L1.988|
00064e  2100              MOVS     r1,#0                 ;144
000650  2010              MOVS     r0,#0x10              ;144
000652  f000b925          B.W      |L1.2208|
                  |L1.1622|
000656  a2e0              ADR      r2,|L1.2520|
000658  2110              MOVS     r1,#0x10              ;145
00065a  2000              MOVS     r0,#0                 ;145
00065c  f7fffffe          BL       lcdout
000660  f8b410a8          LDRH     r1,[r4,#0xa8]         ;145
000664  2010              MOVS     r0,#0x10              ;145
000666  f7fffffe          BL       lcdoutBIN
00066a  e638              B        |L1.734|
                  |L1.1644|
00066c  a2df              ADR      r2,|L1.2540|
00066e  2110              MOVS     r1,#0x10              ;146
000670  2000              MOVS     r0,#0                 ;146
000672  f7fffffe          BL       lcdout
000676  f8b410e6          LDRH     r1,[r4,#0xe6]         ;146
00067a  2010              MOVS     r0,#0x10              ;146
00067c  f7fffffe          BL       lcdoutBIN
000680  e62d              B        |L1.734|
                  |L1.1666|
000682  a2df              ADR      r2,|L1.2560|
000684  2110              MOVS     r1,#0x10              ;147
000686  2000              MOVS     r0,#0                 ;147
000688  f7fffffe          BL       lcdout
00068c  8a21              LDRH     r1,[r4,#0x10]         ;147
00068e  2010              MOVS     r0,#0x10              ;147
000690  f7fffffe          BL       lcdoutBIN
000694  e623              B        |L1.734|
                  |L1.1686|
000696  a2df              ADR      r2,|L1.2580|
000698  2110              MOVS     r1,#0x10              ;153
00069a  2000              MOVS     r0,#0                 ;153
00069c  f7fffffe          BL       lcdout
0006a0  8a61              LDRH     r1,[r4,#0x12]         ;153
0006a2  2010              MOVS     r0,#0x10              ;153
0006a4  f7fffffe          BL       lcdoutBIN
0006a8  e619              B        |L1.734|
                  |L1.1706|
0006aa  a2df              ADR      r2,|L1.2600|
0006ac  2110              MOVS     r1,#0x10              ;157
0006ae  2000              MOVS     r0,#0                 ;157
0006b0  f7fffffe          BL       lcdout
0006b4  f8d90070          LDR      r0,[r9,#0x70]         ;157  ; ViewStr
0006b8  f8c90074          STR      r0,[r9,#0x74]         ;157  ; AlarmStrNum
0006bc  e60f              B        |L1.734|
                  |L1.1726|
0006be  a2df              ADR      r2,|L1.2620|
0006c0  2116              MOVS     r1,#0x16              ;170
0006c2  2000              MOVS     r0,#0                 ;170
0006c4  f7fffffe          BL       lcdout
0006c8  f9b40030          LDRSH    r0,[r4,#0x30]         ;170
0006cc  2101              MOVS     r1,#1                 ;170
0006ce  ee000a10          VMOV     s0,r0                 ;170
0006d2  a2e0              ADR      r2,|L1.2644|
0006d4  2016              MOVS     r0,#0x16              ;170
0006d6  eeb80ac0          VCVT.F32.S32 s0,s0                 ;170
0006da  ee200a08          VMUL.F32 s0,s0,s16             ;170
0006de  f000b8df          B.W      |L1.2208|
                  |L1.1762|
0006e2  a2dd              ADR      r2,|L1.2648|
0006e4  2116              MOVS     r1,#0x16              ;171
0006e6  2000              MOVS     r0,#0                 ;171
0006e8  f7fffffe          BL       lcdout
0006ec  f9b40036          LDRSH    r0,[r4,#0x36]         ;171
0006f0  2101              MOVS     r1,#1                 ;171
0006f2  ee000a10          VMOV     s0,r0                 ;171
0006f6  a2de              ADR      r2,|L1.2672|
0006f8  2016              MOVS     r0,#0x16              ;171
0006fa  eeb80ac0          VCVT.F32.S32 s0,s0                 ;171
0006fe  ee200a08          VMUL.F32 s0,s0,s16             ;171
000702  f000b8cd          B.W      |L1.2208|
                  |L1.1798|
000706  a2db              ADR      r2,|L1.2676|
000708  2116              MOVS     r1,#0x16              ;172
00070a  2000              MOVS     r0,#0                 ;172
00070c  f7fffffe          BL       lcdout
000710  f9b40038          LDRSH    r0,[r4,#0x38]         ;172
000714  2101              MOVS     r1,#1                 ;172
000716  ee000a10          VMOV     s0,r0                 ;172
00071a  a2d5              ADR      r2,|L1.2672|
00071c  2016              MOVS     r0,#0x16              ;172
00071e  eeb80ac0          VCVT.F32.S32 s0,s0                 ;172
000722  ee200a08          VMUL.F32 s0,s0,s16             ;172
000726  f000b8bb          B.W      |L1.2208|
                  |L1.1834|
00072a  a2d8              ADR      r2,|L1.2700|
00072c  2116              MOVS     r1,#0x16              ;173
00072e  2000              MOVS     r0,#0                 ;173
000730  f7fffffe          BL       lcdout
000734  f9b4003a          LDRSH    r0,[r4,#0x3a]         ;173
000738  2101              MOVS     r1,#1                 ;173
00073a  ee000a10          VMOV     s0,r0                 ;173
00073e  a2cc              ADR      r2,|L1.2672|
000740  2016              MOVS     r0,#0x16              ;173
000742  eeb80ac0          VCVT.F32.S32 s0,s0                 ;173
000746  ee200a08          VMUL.F32 s0,s0,s16             ;173
00074a  e0a9              B        |L1.2208|
                  |L1.1868|
00074c  a2d5              ADR      r2,|L1.2724|
00074e  2116              MOVS     r1,#0x16              ;174
000750  2000              MOVS     r0,#0                 ;174
000752  f7fffffe          BL       lcdout
000756  f9b4003c          LDRSH    r0,[r4,#0x3c]         ;174
00075a  2101              MOVS     r1,#1                 ;174
00075c  ee000a10          VMOV     s0,r0                 ;174
000760  a2c3              ADR      r2,|L1.2672|
000762  2016              MOVS     r0,#0x16              ;174
000764  eeb80ac0          VCVT.F32.S32 s0,s0                 ;174
000768  ee200a08          VMUL.F32 s0,s0,s16             ;174
00076c  e098              B        |L1.2208|
                  |L1.1902|
00076e  a2d3              ADR      r2,|L1.2748|
000770  2116              MOVS     r1,#0x16              ;175
000772  2000              MOVS     r0,#0                 ;175
000774  f7fffffe          BL       lcdout
000778  f9b40032          LDRSH    r0,[r4,#0x32]         ;175
00077c  2101              MOVS     r1,#1                 ;175
00077e  ee000a10          VMOV     s0,r0                 ;175
000782  a2b4              ADR      r2,|L1.2644|
000784  2016              MOVS     r0,#0x16              ;175
000786  eeb80ac0          VCVT.F32.S32 s0,s0                 ;175
00078a  ee200a08          VMUL.F32 s0,s0,s16             ;175
00078e  e087              B        |L1.2208|
                  |L1.1936|
000790  a2d0              ADR      r2,|L1.2772|
000792  2116              MOVS     r1,#0x16              ;176
000794  2000              MOVS     r0,#0                 ;176
000796  f7fffffe          BL       lcdout
00079a  f9b40034          LDRSH    r0,[r4,#0x34]         ;176
00079e  2101              MOVS     r1,#1                 ;176
0007a0  ee000a10          VMOV     s0,r0                 ;176
0007a4  a2ab              ADR      r2,|L1.2644|
0007a6  2016              MOVS     r0,#0x16              ;176
0007a8  eeb80ac0          VCVT.F32.S32 s0,s0                 ;176
0007ac  ee200a08          VMUL.F32 s0,s0,s16             ;176
0007b0  e076              B        |L1.2208|
                  |L1.1970|
0007b2  a2ce              ADR      r2,|L1.2796|
0007b4  2114              MOVS     r1,#0x14              ;177
0007b6  2000              MOVS     r0,#0                 ;177
0007b8  f7fffffe          BL       lcdout
0007bc  f9b4003e          LDRSH    r0,[r4,#0x3e]         ;177
0007c0  2101              MOVS     r1,#1                 ;177
0007c2  ee000a10          VMOV     s0,r0                 ;177
0007c6  a2cf              ADR      r2,|L1.2820|
0007c8  2014              MOVS     r0,#0x14              ;177
0007ca  eeb80ac0          VCVT.F32.S32 s0,s0                 ;177
0007ce  ee280a80          VMUL.F32 s0,s17,s0             ;177
0007d2  e065              B        |L1.2208|
                  |L1.2004|
0007d4  a2cd              ADR      r2,|L1.2828|
0007d6  2115              MOVS     r1,#0x15              ;178
0007d8  2000              MOVS     r0,#0                 ;178
0007da  f7fffffe          BL       lcdout
0007de  f9b400f8          LDRSH    r0,[r4,#0xf8]         ;178
0007e2  2101              MOVS     r1,#1                 ;178
0007e4  ee000a10          VMOV     s0,r0                 ;178
0007e8  a2ce              ADR      r2,|L1.2852|
0007ea  2015              MOVS     r0,#0x15              ;178
0007ec  eeb80ac0          VCVT.F32.S32 s0,s0                 ;178
0007f0  ee280a80          VMUL.F32 s0,s17,s0             ;178
0007f4  e054              B        |L1.2208|
                  |L1.2038|
0007f6  a2cd              ADR      r2,|L1.2860|
0007f8  2114              MOVS     r1,#0x14              ;179
0007fa  2000              MOVS     r0,#0                 ;179
0007fc  f7fffffe          BL       lcdout
000800  f9b40040          LDRSH    r0,[r4,#0x40]         ;179
000804  2101              MOVS     r1,#1                 ;179
000806  ee000a10          VMOV     s0,r0                 ;179
00080a  a2be              ADR      r2,|L1.2820|
00080c  2014              MOVS     r0,#0x14              ;179
00080e  eeb80ac0          VCVT.F32.S32 s0,s0                 ;179
000812  ee280a80          VMUL.F32 s0,s17,s0             ;179
000816  e043              B        |L1.2208|
                  |L1.2072|
000818  a2ca              ADR      r2,|L1.2884|
00081a  2114              MOVS     r1,#0x14              ;180
00081c  2000              MOVS     r0,#0                 ;180
00081e  f7fffffe          BL       lcdout
000822  f9b400fa          LDRSH    r0,[r4,#0xfa]         ;180
000826  2101              MOVS     r1,#1                 ;180
000828  ee000a10          VMOV     s0,r0                 ;180
00082c  a2bd              ADR      r2,|L1.2852|
00082e  2015              MOVS     r0,#0x15              ;180
000830  eeb80ac0          VCVT.F32.S32 s0,s0                 ;180
000834  ee280a80          VMUL.F32 s0,s17,s0             ;180
000838  e032              B        |L1.2208|
                  |L1.2106|
00083a  a2c8              ADR      r2,|L1.2908|
00083c  2110              MOVS     r1,#0x10              ;203
00083e  2000              MOVS     r0,#0                 ;203
000840  f7fffffe          BL       lcdout
000844  f2414102          MOV      r1,#0x1402            ;203
000848  2010              MOVS     r0,#0x10              ;203
00084a  f7fffffe          BL       lcdouthex8
00084e  e546              B        |L1.734|
                  |L1.2128|
000850  a2c7              ADR      r2,|L1.2928|
000852  2110              MOVS     r1,#0x10              ;204
000854  2000              MOVS     r0,#0                 ;204
000856  f7fffffe          BL       lcdout
00085a  f44f5198          MOV      r1,#0x1300            ;204
00085e  2010              MOVS     r0,#0x10              ;204
000860  f7fffffe          BL       lcdouthex8
000864  e53b              B        |L1.734|
                  |L1.2150|
000866  a2c6              ADR      r2,|L1.2944|
000868  2110              MOVS     r1,#0x10              ;205
00086a  2000              MOVS     r0,#0                 ;205
00086c  f7fffffe          BL       lcdout
000870  f9b50804          LDRSH    r0,[r5,#0x804]        ;205  ; Metro
000874  2100              MOVS     r1,#0                 ;205
000876  ee000a10          VMOV     s0,r0                 ;205
00087a  a265              ADR      r2,|L1.2576|
00087c  2010              MOVS     r0,#0x10              ;205
00087e  eeb80ac0          VCVT.F32.S32 s0,s0                 ;205
000882  e00d              B        |L1.2208|
                  |L1.2180|
000884  a2c3              ADR      r2,|L1.2964|
000886  2110              MOVS     r1,#0x10              ;206
000888  2000              MOVS     r0,#0                 ;206
00088a  f7fffffe          BL       lcdout
00088e  f9b50806          LDRSH    r0,[r5,#0x806]        ;206  ; Metro
000892  a25f              ADR      r2,|L1.2576|
000894  ee000a10          VMOV     s0,r0                 ;206
000898  2100              MOVS     r1,#0                 ;206
00089a  2010              MOVS     r0,#0x10              ;206
00089c  eeb80ac0          VCVT.F32.S32 s0,s0                 ;206
                  |L1.2208|
0008a0  f7fffffe          BL       lcdouttextl
0008a4  e51b              B        |L1.734|
                  |L1.2214|
0008a6  a2c0              ADR      r2,|L1.2984|
0008a8  2110              MOVS     r1,#0x10              ;207
0008aa  2000              MOVS     r0,#0                 ;207
0008ac  f7fffffe          BL       lcdout
0008b0  f9b50808          LDRSH    r0,[r5,#0x808]        ;207  ; Metro
0008b4  a256              ADR      r2,|L1.2576|
0008b6  ee000a10          VMOV     s0,r0                 ;207
0008ba  2100              MOVS     r1,#0                 ;207
0008bc  2010              MOVS     r0,#0x10              ;207
0008be  eeb80ac0          VCVT.F32.S32 s0,s0                 ;207
0008c2  f7fffffe          BL       lcdouttextl
0008c6  e50a              B        |L1.734|
;;;227    
                          ENDP

                  EventLog PROC
;;;228    void EventLog(void) {
0008c8  b570              PUSH     {r4-r6,lr}
;;;229    int EventNum = 1;	
0008ca  2401              MOVS     r4,#1
;;;230    int PultKeyb = 0;
;;;231    
;;;232    ClearPultKeyb();
0008cc  2000              MOVS     r0,#0
0008ce  f2400100          MOVW     r1,#:LOWER16: WorkPultKeyb
0008d2  f2c00100          MOVT     r1,#:UPPER16: WorkPultKeyb
;;;233    StdPrms.LoadEvent = EventNum;
0008d6  f2400500          MOVW     r5,#:LOWER16: Metro
0008da  f2c00500          MOVT     r5,#:UPPER16: Metro
0008de  6008              STR      r0,[r1,#0]  ; WorkPultKeyb
0008e0  f8a54210          STRH     r4,[r5,#0x210]
                  |L1.2276|
;;;234    	
;;;235    while (1) {
;;;236    	/* Ожидаем завершения передачи и получения нажатых кнопок на пульте	*/
;;;237    	do {PultKeyb = WaitPultReady();} while (PultKeyb == 0);
0008e4  f7fffffe          BL       WaitPultReady
0008e8  2800              CMP      r0,#0
0008ea  d0fb              BEQ      |L1.2276|
;;;238    
;;;239    	switch (PultKeyb & (0x7F & ~K_Shift)) {
0008ec  f000003f          AND      r0,r0,#0x3f
0008f0  2802              CMP      r0,#2
0008f2  d011              BEQ      |L1.2328|
0008f4  2803              CMP      r0,#3
;;;240    		case K_Up:		{EventNum--; 
;;;241    									 if (EventNum < 1) EventNum = 1;
;;;242    										else if (EventNum > NumberOfEventRecords) EventNum = NumberOfEventRecords; 
;;;243    											else StdPrms.LoadEvent = EventNum;
;;;244    									} break;
;;;245    		case K_Down:	{EventNum++; 
;;;246    									 if (EventNum < 1) EventNum = 1;
;;;247    										else if (EventNum > NumberOfEventRecords) EventNum = NumberOfEventRecords; 
;;;248    										else StdPrms.LoadEvent = EventNum;
;;;249    									} break;
;;;250    		case K_Left:	return;
;;;251    		case K_Enter:	Monitor(&EvPrms_l); break;
;;;252    	} /* switch (PultKeyb & (0x7F & ~K_Shift)) */
;;;253    
;;;254    	ClearScreen();
;;;255    	lcdout(0,32,">ЖУРНАЛ СОБЫТИЙ N               |");
;;;256    	lcdouttextl(17, EventNum, 0, "");
;;;257    	switch (EvPrms_l.EventCode) {
;;;258    		case 0x0053: lcdout(20,11,"RESET      "); break;
;;;259    		case 0x0153: lcdout(20,11,"ВКЛЮЧЕНИЕ  "); break;
;;;260    		case 0x0253: lcdout(20,11,"ВЫКЛЮЧЕНИЕ "); break;
;;;261    		case 0x0853: lcdout(20,11,"ЗАЩИТА     "); break;
;;;262    		default:     lcdout(20,11,"НЕТ ЗАПИСИ "); break;
;;;263    	}
;;;264    	
;;;265    //	lcdouthex4(0,EventNum); lcdouthex4(8, StdPrms.CurrentEvent);
;;;266    //	lcdouthex8(16,EvPrms_l.EventCode);
;;;267    	
;;;268    	while (PultRefresh());
;;;269    	} /* while (1) */
;;;270    }	/* void EventLog(void) */
0008f6  bf08              IT       EQ
0008f8  bd70              POPEQ    {r4-r6,pc}
0008fa  2808              CMP      r0,#8                 ;239
0008fc  d006              BEQ      |L1.2316|
0008fe  280c              CMP      r0,#0xc               ;239
000900  bf04              ITT      EQ                    ;251
000902  f5057080          ADDEQ    r0,r5,#0x100          ;251
000906  f7fffffe          BLEQ     Monitor
00090a  e010              B        |L1.2350|
                  |L1.2316|
00090c  1e64              SUBS     r4,r4,#1              ;239
00090e  2c01              CMP      r4,#1                 ;241
000910  db05              BLT      |L1.2334|
000912  2c64              CMP      r4,#0x64              ;242
000914  d807              BHI      |L1.2342|
000916  e008              B        |L1.2346|
                  |L1.2328|
000918  1c64              ADDS     r4,r4,#1              ;242
00091a  2c01              CMP      r4,#1                 ;246
00091c  da01              BGE      |L1.2338|
                  |L1.2334|
00091e  2401              MOVS     r4,#1                 ;246
000920  e005              B        |L1.2350|
                  |L1.2338|
000922  2c64              CMP      r4,#0x64              ;247
000924  d901              BLS      |L1.2346|
                  |L1.2342|
000926  2464              MOVS     r4,#0x64              ;247
000928  e001              B        |L1.2350|
                  |L1.2346|
00092a  f8a54210          STRH     r4,[r5,#0x210]        ;248
                  |L1.2350|
00092e  f7fffffe          BL       ClearScreen
000932  a2a2              ADR      r2,|L1.3004|
000934  2120              MOVS     r1,#0x20              ;255
000936  2000              MOVS     r0,#0                 ;255
000938  f7fffffe          BL       lcdout
00093c  ee004a10          VMOV     s0,r4                 ;256
000940  a233              ADR      r2,|L1.2576|
000942  2100              MOVS     r1,#0                 ;256
000944  eeb80ac0          VCVT.F32.S32 s0,s0                 ;256
000948  2011              MOVS     r0,#0x11              ;256
00094a  f7fffffe          BL       lcdouttextl
00094e  f8d50100          LDR      r0,[r5,#0x100]        ;257  ; Metro
000952  2853              CMP      r0,#0x53              ;257
000954  d013              BEQ      |L1.2430|
000956  f5a07080          SUB      r0,r0,#0x100          ;257
00095a  3853              SUBS     r0,r0,#0x53           ;257
00095c  d010              BEQ      |L1.2432|
00095e  f5b07f80          CMP      r0,#0x100             ;257
000962  d00e              BEQ      |L1.2434|
000964  f5b06fe0          CMP      r0,#0x700             ;257
000968  d00c              BEQ      |L1.2436|
00096a  a29d              ADR      r2,|L1.3040|
00096c  210b              MOVS     r1,#0xb               ;262
00096e  2014              MOVS     r0,#0x14              ;262
000970  f7fffffe          BL       lcdout
                  |L1.2420|
000974  f7fffffe          BL       PultRefresh
000978  2800              CMP      r0,#0                 ;268
00097a  d1fb              BNE      |L1.2420|
00097c  e7b2              B        |L1.2276|
                  |L1.2430|
00097e  e135              B        |L1.3052|
                  |L1.2432|
000980  e13a              B        |L1.3064|
                  |L1.2434|
000982  e13f              B        |L1.3076|
                  |L1.2436|
000984  e144              B        |L1.3088|
000986  0000              DCW      0x0000
                  |L1.2440|
000988  cae0ede0          DCB      202,224,237,224,235,251,"           ",0
00098c  ebfb2020
000990  20202020
000994  20202020
000998  2000    
00099a  00                DCB      0
00099b  00                DCB      0
                  |L1.2460|
00099c  cef1f6e8          DCB      206,241,246,232,235,235,"           ",0
0009a0  ebeb2020
0009a4  20202020
0009a8  20202020
0009ac  2000    
0009ae  00                DCB      0
0009af  00                DCB      0
                  |L1.2480|
0009b0  d1f2e0f2          DCB      209,242,224,242,243,241," IGBT 1    ",0
0009b4  f3f12049
0009b8  47425420
0009bc  31202020
0009c0  2000    
0009c2  00                DCB      0
0009c3  00                DCB      0
                  |L1.2500|
0009c4  d1f2e0f2          DCB      209,242,224,242,243,241," IGBT 2    ",0
0009c8  f3f12049
0009cc  47425420
0009d0  32202020
0009d4  2000    
0009d6  00                DCB      0
0009d7  00                DCB      0
                  |L1.2520|
0009d8  d1f2e0f2          DCB      209,242,224,242,243,241," IGBT 3    ",0
0009dc  f3f12049
0009e0  47425420
0009e4  33202020
0009e8  2000    
0009ea  00                DCB      0
0009eb  00                DCB      0
                  |L1.2540|
0009ec  d1f2e0f2          DCB      209,242,224,242,243,241," IGBT 4    ",0
0009f0  f3f12049
0009f4  47425420
0009f8  34202020
0009fc  2000    
0009fe  00                DCB      0
0009ff  00                DCB      0
                  |L1.2560|
000a00  c4e8f1ea          DCB      196,232,241,234,240,229,242,". ",226,245,238,228,251," 1"
000a04  f0e5f22e
000a08  20e2f5ee
000a0c  e4fb2031
                  |L1.2576|
000a10  00                DCB      0
000a11  00                DCB      0
000a12  00                DCB      0
000a13  00                DCB      0
                  |L1.2580|
000a14  c4e8f1ea          DCB      196,232,241,234,240,229,242,".",226,251,245,238,228,251," "
000a18  f0e5f22e
000a1c  e2fbf5ee
000a20  e4fb20  
000a23  3100              DCB      "1",0
000a25  00                DCB      0
000a26  00                DCB      0
000a27  00                DCB      0
                  |L1.2600|
000a28  d1efe8f1          DCB      209,239,232,241,238,234," ",231,224,249,232,242,"   |",0
000a2c  eeea20e7
000a30  e0f9e8f2
000a34  2020207c
000a38  00      
000a39  00                DCB      0
000a3a  00                DCB      0
000a3b  00                DCB      0
                  |L1.2620|
000a3c  cde0eff0          DCB      205,224,239,240,255,230,229,237,232,229," ",241,232,237,245
000a40  ffe6e5ed
000a44  e8e520f1
000a48  e8edf5  
000a4b  2e55733a          DCB      ".Us:   ",0
000a4f  20202000
000a53  00                DCB      0
                  |L1.2644|
000a54  204200            DCB      " B",0
000a57  00                DCB      0
                  |L1.2648|
000a58  d2eeea20          DCB      210,238,234," 1           I1:   ",0
000a5c  31202020
000a60  20202020
000a64  20202020
000a68  49313a20
000a6c  202000  
000a6f  00                DCB      0
                  |L1.2672|
000a70  204100            DCB      " A",0
000a73  00                DCB      0
                  |L1.2676|
000a74  d2eeea20          DCB      210,238,234," 2           I2:   ",0
000a78  32202020
000a7c  20202020
000a80  20202020
000a84  49323a20
000a88  202000  
000a8b  00                DCB      0
                  |L1.2700|
000a8c  d2eeea20          DCB      210,238,234," 3           I3:   ",0
000a90  33202020
000a94  20202020
000a98  20202020
000a9c  49333a20
000aa0  202000  
000aa3  00                DCB      0
                  |L1.2724|
000aa4  d2eeea20          DCB      210,238,234," 4           I4:   ",0
000aa8  34202020
000aac  20202020
000ab0  20202020
000ab4  49343a20
000ab8  202000  
000abb  00                DCB      0
                  |L1.2748|
000abc  cde0eff0          DCB      205,224,239,240,255,230,229,237,232,229," Udc 1Udc1: ",0
000ac0  ffe6e5ed
000ac4  e8e52055
000ac8  64632031
000acc  55646331
000ad0  3a2000  
000ad3  00                DCB      0
                  |L1.2772|
000ad4  cde0eff0          DCB      205,224,239,240,255,230,229,237,232,229," Udc 2Udc2: ",0
000ad8  ffe6e5ed
000adc  e8e52055
000ae0  64632032
000ae4  55646332
000ae8  3a2000  
000aeb  00                DCB      0
                  |L1.2796|
000aec  c0eaf2e8          DCB      192,234,242,232,226,".",236,238,249,237,238,241,242,252," "
000af0  e22eecee
000af4  f9edeef1
000af8  f2fc20  
000afb  3150313a          DCB      "1P1: ",0
000aff  2000    
000b01  00                DCB      0
000b02  00                DCB      0
000b03  00                DCB      0
                  |L1.2820|
000b04  20ea42f2          DCB      " ",234,"B",242,0
000b08  00      
000b09  00                DCB      0
000b0a  00                DCB      0
000b0b  00                DCB      0
                  |L1.2828|
000b0c  d0e5e0ea          DCB      208,229,224,234,242,".",236,238,249,237,238,241,242,252,"1"
000b10  f22eecee
000b14  f9edeef1
000b18  f2fc31  
000b1b  32513132          DCB      "2Q12: ",0
000b1f  3a2000  
000b22  00                DCB      0
000b23  00                DCB      0
                  |L1.2852|
000b24  20ea42c0          DCB      " ",234,"B",192,240,0
000b28  f000    
000b2a  00                DCB      0
000b2b  00                DCB      0
                  |L1.2860|
000b2c  c0eaf2e8          DCB      192,234,242,232,226,".",236,238,249,237,238,241,242,252," "
000b30  e22eecee
000b34  f9edeef1
000b38  f2fc20  
000b3b  3250323a          DCB      "2P2: ",0
000b3f  2000    
000b41  00                DCB      0
000b42  00                DCB      0
000b43  00                DCB      0
                  |L1.2884|
000b44  d0e5e0ea          DCB      208,229,224,234,242,".",236,238,249,237,238,241,242,252,"3"
000b48  f22eecee
000b4c  f9edeef1
000b50  f2fc33  
000b53  34513334          DCB      "4Q34: ",0
000b57  3a2000  
000b5a  00                DCB      0
000b5b  00                DCB      0
                  |L1.2908|
000b5c  26496131          DCB      "&Ia12_fixcorrect",0
000b60  325f6669
000b64  78636f72
000b68  72656374
000b6c  00      
000b6d  00                DCB      0
000b6e  00                DCB      0
000b6f  00                DCB      0
                  |L1.2928|
000b70  45787441          DCB      "ExtADCArray   \t",0
000b74  44434172
000b78  72617920
000b7c  20200900
                  |L1.2944|
000b80  49613132          DCB      "Ia12_fixcorrect ",0
000b84  5f666978
000b88  636f7272
000b8c  65637420
000b90  00      
000b91  00                DCB      0
000b92  00                DCB      0
000b93  00                DCB      0
                  |L1.2964|
000b94  49633132          DCB      "Ic12_fixcorrect ",0
000b98  5f666978
000b9c  636f7272
000ba0  65637420
000ba4  00      
000ba5  00                DCB      0
000ba6  00                DCB      0
000ba7  00                DCB      0
                  |L1.2984|
000ba8  49613334          DCB      "Ia34_fixcorrect ",0
000bac  5f666978
000bb0  636f7272
000bb4  65637420
000bb8  00      
000bb9  00                DCB      0
000bba  00                DCB      0
000bbb  00                DCB      0
                  |L1.3004|
000bbc  3ec6d3d0          DCB      ">",198,211,208,205,192,203," ",209,206,193,219,210,200,201
000bc0  cdc0cb20
000bc4  d1cec1db
000bc8  d2c8c9  
000bcb  204e2020          DCB      " N               |",0
000bcf  20202020
000bd3  20202020
000bd7  20202020
000bdb  207c00  
000bde  00                DCB      0
000bdf  00                DCB      0
                  |L1.3040|
000be0  cdc5d220          DCB      205,197,210," ",199,192,207,200,209,200," ",0
000be4  c7c0cfc8
000be8  d1c82000
                  |L1.3052|
000bec  a2fe              ADR      r2,|L1.4072|
000bee  210b              MOVS     r1,#0xb               ;258
000bf0  2014              MOVS     r0,#0x14              ;258
000bf2  f7fffffe          BL       lcdout
000bf6  e6bd              B        |L1.2420|
                  |L1.3064|
000bf8  a2fe              ADR      r2,|L1.4084|
000bfa  210b              MOVS     r1,#0xb               ;259
000bfc  2014              MOVS     r0,#0x14              ;259
000bfe  f7fffffe          BL       lcdout
000c02  e6b7              B        |L1.2420|
                  |L1.3076|
000c04  a2fe              ADR      r2,|L1.4096|
000c06  210b              MOVS     r1,#0xb               ;260
000c08  2014              MOVS     r0,#0x14              ;260
000c0a  f7fffffe          BL       lcdout
000c0e  e6b1              B        |L1.2420|
                  |L1.3088|
000c10  a2fe              ADR      r2,|L1.4108|
000c12  210b              MOVS     r1,#0xb               ;261
000c14  2014              MOVS     r0,#0x14              ;261
000c16  f7fffffe          BL       lcdout
000c1a  e6ab              B        |L1.2420|
;;;271    
                          ENDP

                  _SubMenuRegs PROC
;;;272    void _SubMenuRegs(struct PI_params_type *Params, char * RegName) {
000c1c  b570              PUSH     {r4-r6,lr}
000c1e  4604              MOV      r4,r0
000c20  ed2d8b02          VPUSH    {d8}
;;;273    int res;
;;;274    	FillData(0, (0x3E80000 / MainCycle) / Params->Ti, 0, 10000, 1, 22, 0, " [мс]", TiFlag);
000c24  f44f4500          MOV      r5,#0x8000
000c28  8840              LDRH     r0,[r0,#2]
000c2a  460e              MOV      r6,r1                 ;272
000c2c  fbb5f0f0          UDIV     r0,r5,r0
000c30  ee000a10          VMOV     s0,r0
000c34  2001              MOVS     r0,#1
000c36  2200              MOVS     r2,#0
000c38  eeb80a40          VCVT.F32.U32 s0,s0
000c3c  b082              SUB      sp,sp,#8              ;272
000c3e  a3f6              ADR      r3,|L1.4120|
000c40  2116              MOVS     r1,#0x16
000c42  eef71a00          VMOV.F32 s3,#1.00000000
000c46  ed9f1af6          VLDR     s2,|L1.4128|
000c4a  eddf0af6          VLDR     s1,|L1.4132|
000c4e  9000              STR      r0,[sp,#0]
000c50  4610              MOV      r0,r2
000c52  f7fffffe          BL       FillData
;;;275    	FillData(1, Params->Kp / 256.0f, -128, +127, 0.01f, 22, 2, "", 0);
000c56  2000              MOVS     r0,#0
000c58  9000              STR      r0,[sp,#0]
000c5a  f9b40000          LDRSH    r0,[r4,#0]
000c5e  ee000a10          VMOV     s0,r0
000c62  eeb80ac0          VCVT.F32.S32 s0,s0
000c66  eddf0af0          VLDR     s1,|L1.4136|
000c6a  ee200a20          VMUL.F32 s0,s0,s1
000c6e  f2af2360          ADR      r3,|L1.2576|
000c72  2202              MOVS     r2,#2
000c74  2116              MOVS     r1,#0x16
000c76  eddf1aed          VLDR     s3,|L1.4140|
000c7a  ed9f1aed          VLDR     s2,|L1.4144|
000c7e  eddf0aed          VLDR     s1,|L1.4148|
000c82  2001              MOVS     r0,#1
000c84  f7fffffe          BL       FillData
;;;276    	do {res = ChangeParam(2, RegName,"  Tи:             Kп:           ");
;;;277        switch (res) {
;;;278    			case 1: {Params->Ti = (0x3E80000 / MainCycle) / (unsigned short)GetValue(0);} break;
;;;279    			case 2: {Params->Kp = GetValue(1) * 256.0f + 0.5f;} break;
000c88  ed9f8aeb          VLDR     s16,|L1.4152|
000c8c  eef68a00          VMOV.F32 s17,#0.50000000
                  |L1.3216|
000c90  a2ea              ADR      r2,|L1.4156|
000c92  4631              MOV      r1,r6                 ;276
000c94  2002              MOVS     r0,#2                 ;276
000c96  f7fffffe          BL       ChangeParam
000c9a  2801              CMP      r0,#1                 ;277
000c9c  d007              BEQ      |L1.3246|
000c9e  2802              CMP      r0,#2                 ;277
000ca0  d011              BEQ      |L1.3270|
;;;280    				 } //switch
;;;281       } while (res); //do 	
000ca2  2800              CMP      r0,#0
000ca4  d1f4              BNE      |L1.3216|
;;;282    }
000ca6  b002              ADD      sp,sp,#8
000ca8  ecbd8b02          VPOP     {d8}
000cac  bd70              POP      {r4-r6,pc}
                  |L1.3246|
000cae  2000              MOVS     r0,#0                 ;278
000cb0  f7fffffe          BL       GetValue
000cb4  eebc0ac0          VCVT.U32.F32 s0,s0                 ;278
000cb8  ee100a10          VMOV     r0,s0                 ;278
000cbc  b280              UXTH     r0,r0                 ;278
000cbe  fbb5f0f0          UDIV     r0,r5,r0              ;278
000cc2  8060              STRH     r0,[r4,#2]            ;278
000cc4  e7e4              B        |L1.3216|
                  |L1.3270|
000cc6  2001              MOVS     r0,#1                 ;279
000cc8  f7fffffe          BL       GetValue
000ccc  eef00a68          VMOV.F32 s1,s17                ;279
000cd0  ee400a08          VMLA.F32 s1,s0,s16             ;279
000cd4  eebd0ae0          VCVT.S32.F32 s0,s1                 ;279
000cd8  ee100a10          VMOV     r0,s0                 ;279
000cdc  8020              STRH     r0,[r4,#0]            ;279
000cde  e7d7              B        |L1.3216|
;;;283    
                          ENDP

                  SubMenuRegs PROC
;;;284    void SubMenuRegs(void) {
000ce0  b570              PUSH     {r4-r6,lr}
;;;285    int pos = 1;
000ce2  2401              MOVS     r4,#1
;;;286    	while (1) {
;;;287    		pos = SubItem(3,pos,STregs,0);
000ce4  f2400600          MOVW     r6,#:LOWER16: ||.data||
000ce8  f2c00600          MOVT     r6,#:UPPER16: ||.data||
;;;288    		switch (pos) {
;;;289    			case 0: return;
;;;290    			case 1: {_SubMenuRegs(&SavePrms.RegUdc,">>РЕГУЛЯТОР Udc ");} break;
000cec  f2400500          MOVW     r5,#:LOWER16: Metro
000cf0  f2c00500          MOVT     r5,#:UPPER16: Metro
                  |L1.3316|
000cf4  2300              MOVS     r3,#0                 ;287
000cf6  4621              MOV      r1,r4                 ;287
000cf8  2003              MOVS     r0,#3                 ;287
000cfa  6872              LDR      r2,[r6,#4]            ;287  ; STregs
000cfc  f7fffffe          BL       SubItem
000d00  0004              MOVS     r4,r0                 ;287
;;;291    			case 2: {_SubMenuRegs(&SavePrms.RegQ,  ">>РЕГУЛЯТОР Q   ");} break;
;;;292    			case 3: {_SubMenuRegs(&SavePrms.RegPLL,">>РЕГУЛЯТОР PLL ");} break;
;;;293    		} //switch
;;;294    	}//while	
;;;295    }
000d02  bf08              IT       EQ
000d04  bd70              POPEQ    {r4-r6,pc}
000d06  2c01              CMP      r4,#1                 ;288
000d08  d00e              BEQ      |L1.3368|
000d0a  2c02              CMP      r4,#2                 ;288
000d0c  bf04              ITT      EQ                    ;291
000d0e  a1d4              ADREQ    r1,|L1.4192|
000d10  f60560b4          ADDEQ    r0,r5,#0xeb4          ;291
000d14  d005              BEQ      |L1.3362|
000d16  2c03              CMP      r4,#3                 ;288
000d18  bf04              ITT      EQ                    ;292
000d1a  a1d6              ADREQ    r1,|L1.4212|
000d1c  f60560b8          ADDEQ    r0,r5,#0xeb8          ;292
000d20  d1e8              BNE      |L1.3316|
                  |L1.3362|
000d22  f7fffffe          BL       _SubMenuRegs
000d26  e7e5              B        |L1.3316|
                  |L1.3368|
000d28  a1d7              ADR      r1,|L1.4232|
000d2a  f505606b          ADD      r0,r5,#0xeb0          ;290
000d2e  f7fffffe          BL       _SubMenuRegs
000d32  e7df              B        |L1.3316|
;;;296    
                          ENDP

                  SubMenuAlarms PROC
;;;297    void SubMenuAlarms(void){
000d34  b5f0              PUSH     {r4-r7,lr}
;;;298    int pos=1;
000d36  2401              MOVS     r4,#1
000d38  ed2d8b04          VPUSH    {d8-d9}               ;297
000d3c  b081              SUB      sp,sp,#4              ;297
;;;299    int res=0;
;;;300    	while (1) {
;;;301    		pos = SubItem(10, pos, STalarms, 0);
000d3e  f2400500          MOVW     r5,#:LOWER16: ||.data||
000d42  f2c00500          MOVT     r5,#:UPPER16: ||.data||
                  |L1.3398|
000d46  2300              MOVS     r3,#0
000d48  4621              MOV      r1,r4
000d4a  200a              MOVS     r0,#0xa
000d4c  68aa              LDR      r2,[r5,#8]  ; STalarms
000d4e  f7fffffe          BL       SubItem
000d52  4604              MOV      r4,r0
;;;302    		switch (pos) {
000d54  2c0b              CMP      r4,#0xb
000d56  d2f6              BCS      |L1.3398|
000d58  e8dff004          TBB      [pc,r4]
000d5c  fc0667c8          DCB      0xfc,0x06,0x67,0xc8
000d60  fbfaf9f8          DCB      0xfb,0xfa,0xf9,0xf8
000d64  f7f6f500          DCB      0xf7,0xf6,0xf5,0x00
;;;303    			case 0: {return;} break;
;;;304    			case 1: {	FillData(0, SavePrms.RefMtzI/10  ,   5 ,1500, 1    ,21,0," [A]" ,0); 
000d68  f2400600          MOVW     r6,#:LOWER16: Metro
000d6c  f2c00600          MOVT     r6,#:UPPER16: Metro
000d70  f8b60ec0          LDRH     r0,[r6,#0xec0]  ; Metro
000d74  f64c41cd          MOV      r1,#0xcccd
000d78  4348              MULS     r0,r1,r0
000d7a  0cc0              LSRS     r0,r0,#19
000d7c  ee000a10          VMOV     s0,r0
000d80  2700              MOVS     r7,#0
000d82  a3c6              ADR      r3,|L1.4252|
000d84  eeb80a40          VCVT.F32.U32 s0,s0
000d88  463a              MOV      r2,r7
000d8a  2115              MOVS     r1,#0x15
000d8c  eef71a00          VMOV.F32 s3,#1.00000000
000d90  ed9f1ac4          VLDR     s2,|L1.4260|
000d94  eef10a04          VMOV.F32 s1,#5.00000000
000d98  4638              MOV      r0,r7
000d9a  9700              STR      r7,[sp,#0]
000d9c  f7fffffe          BL       FillData
;;;305    								FillData(1, SavePrms.RefMtzT/4.0f,0.25f,  10, 0.25f,21,2," [мс]",0);
000da0  9700              STR      r7,[sp,#0]
000da2  f8b60ec2          LDRH     r0,[r6,#0xec2]  ; Metro
000da6  eef50a00          VMOV.F32 s1,#0.25000000
000daa  ee000a10          VMOV     s0,r0
000dae  a39a              ADR      r3,|L1.4120|
000db0  2202              MOVS     r2,#2
000db2  eeb80a40          VCVT.F32.U32 s0,s0
000db6  2115              MOVS     r1,#0x15
000db8  eef51a00          VMOV.F32 s3,#0.25000000
000dbc  eeb21a04          VMOV.F32 s2,#10.00000000
000dc0  ee200a20          VMUL.F32 s0,s0,s1
000dc4  eef50a00          VMOV.F32 s1,#0.25000000
000dc8  2001              MOVS     r0,#1
000dca  f7fffffe          BL       FillData
000dce  eeb28a04          VMOV.F32 s16,#10.00000000
;;;306    								do {res=ChangeParam(2,">>МТЗ ПРЕОБРАЗОВ","  I:              t:            ");
;;;307    									switch (res) {
;;;308    										case 1: {SavePrms.RefMtzI = (GetValue(0) * 10.0f + 0.5f);} break;
000dd2  eeb69a00          VMOV.F32 s18,#0.50000000
;;;309    										case 2: {SavePrms.RefMtzT = (GetValue(1) *  4.0f + 0.5f);} break;
000dd6  eef18a00          VMOV.F32 s17,#4.00000000
                  |L1.3546|
000dda  a2b3              ADR      r2,|L1.4264|
000ddc  a1bb              ADR      r1,|L1.4300|
000dde  2002              MOVS     r0,#2                 ;306
000de0  f7fffffe          BL       ChangeParam
000de4  2801              CMP      r0,#1                 ;307
000de6  d004              BEQ      |L1.3570|
000de8  2802              CMP      r0,#2                 ;307
000dea  d010              BEQ      |L1.3598|
;;;310    									} //switch
;;;311    								} while (res); //do
000dec  2800              CMP      r0,#0
000dee  d1f4              BNE      |L1.3546|
000df0  e7a9              B        |L1.3398|
                  |L1.3570|
000df2  2000              MOVS     r0,#0                 ;308
000df4  f7fffffe          BL       GetValue
000df8  eef00a49          VMOV.F32 s1,s18                ;308
000dfc  ee400a08          VMLA.F32 s1,s0,s16             ;308
000e00  eebc0ae0          VCVT.U32.F32 s0,s1                 ;308
000e04  ee100a10          VMOV     r0,s0                 ;308
000e08  f8a60ec0          STRH     r0,[r6,#0xec0]        ;308
000e0c  e7e5              B        |L1.3546|
                  |L1.3598|
000e0e  2001              MOVS     r0,#1                 ;309
000e10  f7fffffe          BL       GetValue
000e14  eef00a49          VMOV.F32 s1,s18                ;309
000e18  ee400a28          VMLA.F32 s1,s0,s17             ;309
000e1c  eebc0ae0          VCVT.U32.F32 s0,s1                 ;309
000e20  ee100a10          VMOV     r0,s0                 ;309
000e24  f8a60ec2          STRH     r0,[r6,#0xec2]        ;309
000e28  e7d7              B        |L1.3546|
;;;312    							} break;
;;;313    
;;;314    			case 2: {	FillData(0, SavePrms.RefUdcmaxU/10  ,  25 , 1800, 1    ,23,0," [B]" ,0); 
000e2a  f2400600          MOVW     r6,#:LOWER16: Metro
000e2e  f2c00600          MOVT     r6,#:UPPER16: Metro
000e32  f8b60ec4          LDRH     r0,[r6,#0xec4]  ; Metro
000e36  f64c41cd          MOV      r1,#0xcccd
000e3a  4348              MULS     r0,r1,r0
000e3c  0cc0              LSRS     r0,r0,#19
000e3e  ee000a10          VMOV     s0,r0
000e42  2700              MOVS     r7,#0
000e44  a3a6              ADR      r3,|L1.4320|
000e46  eeb80a40          VCVT.F32.U32 s0,s0
000e4a  463a              MOV      r2,r7
000e4c  2117              MOVS     r1,#0x17
000e4e  eef71a00          VMOV.F32 s3,#1.00000000
000e52  ed9f1aa5          VLDR     s2,|L1.4328|
000e56  eef30a09          VMOV.F32 s1,#25.00000000
000e5a  4638              MOV      r0,r7
000e5c  9700              STR      r7,[sp,#0]
000e5e  f7fffffe          BL       FillData
;;;315    								FillData(1, SavePrms.RefUdcmaxT/4.0f,0.25f,  10, 0.25f,21,2," [мс]",0);
000e62  9700              STR      r7,[sp,#0]
000e64  f8b60ec6          LDRH     r0,[r6,#0xec6]  ; Metro
000e68  eef50a00          VMOV.F32 s1,#0.25000000
000e6c  ee000a10          VMOV     s0,r0
000e70  a369              ADR      r3,|L1.4120|
000e72  2202              MOVS     r2,#2
000e74  eeb80a40          VCVT.F32.U32 s0,s0
000e78  2115              MOVS     r1,#0x15
000e7a  eef51a00          VMOV.F32 s3,#0.25000000
000e7e  eeb21a04          VMOV.F32 s2,#10.00000000
000e82  ee200a20          VMUL.F32 s0,s0,s1
000e86  eef50a00          VMOV.F32 s1,#0.25000000
000e8a  2001              MOVS     r0,#1
000e8c  f7fffffe          BL       FillData
000e90  eef28a04          VMOV.F32 s17,#10.00000000      ;305
000e94  eeb69a00          VMOV.F32 s18,#0.50000000       ;308
000e98  eeb18a00          VMOV.F32 s16,#4.00000000       ;309
                  |L1.3740|
;;;316    								do {res=ChangeParam(2,">>ВЫСОКОЕ Udc   ","  Udc:            t:            ");
000e9c  a293              ADR      r2,|L1.4332|
000e9e  a19c              ADR      r1,|L1.4368|
000ea0  2002              MOVS     r0,#2
000ea2  f7fffffe          BL       ChangeParam
;;;317    									switch (res) {
000ea6  2801              CMP      r0,#1
000ea8  d004              BEQ      |L1.3764|
000eaa  2802              CMP      r0,#2
000eac  d010              BEQ      |L1.3792|
;;;318    										case 1: {SavePrms.RefUdcmaxU = (GetValue(0) * 10.0f + 0.5f);} break;
;;;319    										case 2: {SavePrms.RefUdcmaxT = (GetValue(1) *  4.0f + 0.5f);} break;
;;;320    									} //switch
;;;321    								} while (res); //do
000eae  2800              CMP      r0,#0
000eb0  d1f4              BNE      |L1.3740|
000eb2  e748              B        |L1.3398|
                  |L1.3764|
000eb4  2000              MOVS     r0,#0                 ;318
000eb6  f7fffffe          BL       GetValue
000eba  eef00a49          VMOV.F32 s1,s18                ;318
000ebe  ee400a28          VMLA.F32 s1,s0,s17             ;318
000ec2  eebc0ae0          VCVT.U32.F32 s0,s1                 ;318
000ec6  ee100a10          VMOV     r0,s0                 ;318
000eca  f8a60ec4          STRH     r0,[r6,#0xec4]        ;318
000ece  e7e5              B        |L1.3740|
                  |L1.3792|
000ed0  2001              MOVS     r0,#1                 ;319
000ed2  f7fffffe          BL       GetValue
000ed6  eef00a49          VMOV.F32 s1,s18                ;319
000eda  ee400a08          VMLA.F32 s1,s0,s16             ;319
000ede  eebc0ae0          VCVT.U32.F32 s0,s1                 ;319
000ee2  ee100a10          VMOV     r0,s0                 ;319
000ee6  f8a60ec6          STRH     r0,[r6,#0xec6]        ;319
000eea  e7d7              B        |L1.3740|
;;;322    							} break;
;;;323    
;;;324    			case 3: {	FillData(0, SavePrms.RefUdcminU/10  ,  25 , 1800, 1    ,23,0," [B]" ,0); 
000eec  f2400600          MOVW     r6,#:LOWER16: Metro
000ef0  f2c00600          MOVT     r6,#:UPPER16: Metro
000ef4  f8b60ec8          LDRH     r0,[r6,#0xec8]  ; Metro
000ef8  f64c41cd          MOV      r1,#0xcccd
000efc  4348              MULS     r0,r1,r0
000efe  0cc0              LSRS     r0,r0,#19
000f00  ee000a10          VMOV     s0,r0
000f04  2700              MOVS     r7,#0
000f06  a376              ADR      r3,|L1.4320|
000f08  eeb80a40          VCVT.F32.U32 s0,s0
000f0c  463a              MOV      r2,r7
000f0e  2117              MOVS     r1,#0x17
000f10  eef71a00          VMOV.F32 s3,#1.00000000
000f14  ed9f1a74          VLDR     s2,|L1.4328|
000f18  eef30a09          VMOV.F32 s1,#25.00000000
000f1c  4638              MOV      r0,r7
000f1e  9700              STR      r7,[sp,#0]
000f20  f7fffffe          BL       FillData
;;;325    								FillData(1, SavePrms.RefUdcminT/4.0f,0.25f,  10, 0.25f,21,2," [мс]",0);
000f24  9700              STR      r7,[sp,#0]
000f26  f8b60eca          LDRH     r0,[r6,#0xeca]  ; Metro
000f2a  eef50a00          VMOV.F32 s1,#0.25000000
000f2e  ee000a10          VMOV     s0,r0
000f32  2202              MOVS     r2,#2
000f34  a338              ADR      r3,|L1.4120|
000f36  eeb80a40          VCVT.F32.U32 s0,s0
000f3a  2115              MOVS     r1,#0x15
000f3c  eef51a00          VMOV.F32 s3,#0.25000000
000f40  ee200a20          VMUL.F32 s0,s0,s1
000f44  e007              B        |L1.3926|
000f46  e2d1              B        |L1.5356|
000f48  e275              B        |L1.5174|
000f4a  e213              B        |L1.4980|
000f4c  e1df              B        |L1.4878|
000f4e  e17b              B        |L1.4680|
000f50  e117              B        |L1.4482|
000f52  e035              B        |L1.4032|
000f54  e3bc              B        |L1.5840|
                  |L1.3926|
000f56  eeb21a04          VMOV.F32 s2,#10.00000000
000f5a  eef50a00          VMOV.F32 s1,#0.25000000
000f5e  2001              MOVS     r0,#1
000f60  f7fffffe          BL       FillData
000f64  eeb28a04          VMOV.F32 s16,#10.00000000      ;305
000f68  eeb69a00          VMOV.F32 s18,#0.50000000       ;308
000f6c  eef18a00          VMOV.F32 s17,#4.00000000       ;309
                  |L1.3952|
;;;326    								do {res=ChangeParam(2,">>НИЗКОЕ Udc    ","  Udc:            t:            ");
000f70  a25e              ADR      r2,|L1.4332|
000f72  a16c              ADR      r1,|L1.4388|
000f74  2002              MOVS     r0,#2
000f76  f7fffffe          BL       ChangeParam
;;;327    									switch (res) {
000f7a  2801              CMP      r0,#1
000f7c  d004              BEQ      |L1.3976|
000f7e  2802              CMP      r0,#2
000f80  d010              BEQ      |L1.4004|
;;;328    										case 1: {SavePrms.RefUdcminU = (GetValue(0) * 10.0f + 0.5f);} break;
;;;329    										case 2: {SavePrms.RefUdcminT = (GetValue(1) *  4.0f + 0.5f);} break;
;;;330    									} //switch
;;;331    								} while (res); //do
000f82  2800              CMP      r0,#0
000f84  d1f4              BNE      |L1.3952|
000f86  e6de              B        |L1.3398|
                  |L1.3976|
000f88  2000              MOVS     r0,#0                 ;328
000f8a  f7fffffe          BL       GetValue
000f8e  eef00a49          VMOV.F32 s1,s18                ;328
000f92  ee400a08          VMLA.F32 s1,s0,s16             ;328
000f96  eebc0ae0          VCVT.U32.F32 s0,s1                 ;328
000f9a  ee100a10          VMOV     r0,s0                 ;328
000f9e  f8a60ec8          STRH     r0,[r6,#0xec8]        ;328
000fa2  e7e5              B        |L1.3952|
                  |L1.4004|
000fa4  2001              MOVS     r0,#1                 ;329
000fa6  f7fffffe          BL       GetValue
000faa  eef00a49          VMOV.F32 s1,s18                ;329
000fae  ee400a28          VMLA.F32 s1,s0,s17             ;329
000fb2  eebc0ae0          VCVT.U32.F32 s0,s1                 ;329
000fb6  ee100a10          VMOV     r0,s0                 ;329
000fba  f8a60eca          STRH     r0,[r6,#0xeca]        ;329
000fbe  e7d7              B        |L1.3952|
                  |L1.4032|
;;;332    							} break;
;;;333    			case 4: {	FillData(0, SavePrms.RefUdcRazrad/10  ,  25 , 1800, 1    ,23,0," [B]" ,0); 
000fc0  f2400600          MOVW     r6,#:LOWER16: Metro
000fc4  f2c00600          MOVT     r6,#:UPPER16: Metro
000fc8  f8b60ecc          LDRH     r0,[r6,#0xecc]  ; Metro
000fcc  f64c41cd          MOV      r1,#0xcccd
000fd0  4348              MULS     r0,r1,r0
000fd2  0cc0              LSRS     r0,r0,#19
000fd4  ee000a10          VMOV     s0,r0
000fd8  2000              MOVS     r0,#0
000fda  a341              ADR      r3,|L1.4320|
000fdc  eeb80a40          VCVT.F32.U32 s0,s0
000fe0  4602              MOV      r2,r0
000fe2  2117              MOVS     r1,#0x17
000fe4  e0a8              B        |L1.4408|
000fe6  0000              DCW      0x0000
                  |L1.4072|
000fe8  52455345          DCB      "RESET      ",0
000fec  54202020
000ff0  20202000
                  |L1.4084|
000ff4  c2cacbde          DCB      194,202,203,222,215,197,205,200,197,"  ",0
000ff8  d7c5cdc8
000ffc  c5202000
                  |L1.4096|
001000  c2dbcacb          DCB      194,219,202,203,222,215,197,205,200,197," ",0
001004  ded7c5cd
001008  c8c52000
                  |L1.4108|
00100c  c7c0d9c8          DCB      199,192,217,200,210,192,"     ",0
001010  d2c02020
001014  20202000
                  |L1.4120|
001018  205becf1          DCB      " [",236,241,"]",0
00101c  5d00    
00101e  00                DCB      0
00101f  00                DCB      0
                  |L1.4128|
001020  461c4000          DCFS     0x461c4000 ; 10000
                  |L1.4132|
001024  00000000          DCFS     0x00000000 ; 0
                  |L1.4136|
001028  3b800000          DCFS     0x3b800000 ; 0.00390625
                  |L1.4140|
00102c  3c23d70a          DCFS     0x3c23d70a ; 0.0099999997764825821
                  |L1.4144|
001030  42fe0000          DCFS     0x42fe0000 ; 127
                  |L1.4148|
001034  c3000000          DCFS     0xc3000000 ; -128
                  |L1.4152|
001038  43800000          DCFS     0x43800000 ; 256
                  |L1.4156|
00103c  202054e8          DCB      "  T",232,":             K",239,":           ",0
001040  3a202020
001044  20202020
001048  20202020
00104c  20204bef
001050  3a202020
001054  20202020
001058  20202020
00105c  00      
00105d  00                DCB      0
00105e  00                DCB      0
00105f  00                DCB      0
                  |L1.4192|
001060  3e3ed0c5          DCB      ">>",208,197,195,211,203,223,210,206,208," Q   ",0
001064  c3d3cbdf
001068  d2ced020
00106c  51202020
001070  00      
001071  00                DCB      0
001072  00                DCB      0
001073  00                DCB      0
                  |L1.4212|
001074  3e3ed0c5          DCB      ">>",208,197,195,211,203,223,210,206,208," PLL ",0
001078  c3d3cbdf
00107c  d2ced020
001080  504c4c20
001084  00      
001085  00                DCB      0
001086  00                DCB      0
001087  00                DCB      0
                  |L1.4232|
001088  3e3ed0c5          DCB      ">>",208,197,195,211,203,223,210,206,208," Udc ",0
00108c  c3d3cbdf
001090  d2ced020
001094  55646320
001098  00      
001099  00                DCB      0
00109a  00                DCB      0
00109b  00                DCB      0
                  |L1.4252|
00109c  205b415d          DCB      " [A]",0
0010a0  00      
0010a1  00                DCB      0
0010a2  00                DCB      0
0010a3  00                DCB      0
                  |L1.4260|
0010a4  44bb8000          DCFS     0x44bb8000 ; 1500
                  |L1.4264|
0010a8  2020493a          DCB      "  I:              t:            ",0
0010ac  20202020
0010b0  20202020
0010b4  20202020
0010b8  2020743a
0010bc  20202020
0010c0  20202020
0010c4  20202020
0010c8  00      
0010c9  00                DCB      0
0010ca  00                DCB      0
0010cb  00                DCB      0
                  |L1.4300|
0010cc  3e3eccd2          DCB      ">>",204,210,199," ",207,208,197,206,193,208,192,199,206
0010d0  c720cfd0
0010d4  c5cec1d0
0010d8  c0c7ce  
0010db  c200              DCB      194,0
0010dd  00                DCB      0
0010de  00                DCB      0
0010df  00                DCB      0
                  |L1.4320|
0010e0  205b425d          DCB      " [B]",0
0010e4  00      
0010e5  00                DCB      0
0010e6  00                DCB      0
0010e7  00                DCB      0
                  |L1.4328|
0010e8  44e10000          DCFS     0x44e10000 ; 1800
                  |L1.4332|
0010ec  20205564          DCB      "  Udc:            t:            ",0
0010f0  633a2020
0010f4  20202020
0010f8  20202020
0010fc  2020743a
001100  20202020
001104  20202020
001108  20202020
00110c  00      
00110d  00                DCB      0
00110e  00                DCB      0
00110f  00                DCB      0
                  |L1.4368|
001110  3e3ec2db          DCB      ">>",194,219,209,206,202,206,197," Udc   ",0
001114  d1cecace
001118  c5205564
00111c  63202020
001120  00      
001121  00                DCB      0
001122  00                DCB      0
001123  00                DCB      0
                  |L1.4388|
001124  3e3ecdc8          DCB      ">>",205,200,199,202,206,197," Udc    ",0
001128  c7cacec5
00112c  20556463
001130  20202020
001134  00      
001135  00                DCB      0
001136  00                DCB      0
001137  00                DCB      0
                  |L1.4408|
001138  eef71a00          VMOV.F32 s3,#1.00000000
00113c  ed1f1a16          VLDR     s2,|L1.4328|
001140  eef30a09          VMOV.F32 s1,#25.00000000
001144  9000              STR      r0,[sp,#0]
001146  f7fffffe          BL       FillData
00114a  eeb28a04          VMOV.F32 s16,#10.00000000      ;305
00114e  eef68a00          VMOV.F32 s17,#0.50000000       ;308
                  |L1.4434|
;;;334    								do {res=ChangeParam(1,">>РАЗРЯД Udc    ","  Udc:          ");
001152  a2fa              ADR      r2,|L1.5436|
001154  a1fe              ADR      r1,|L1.5456|
001156  2001              MOVS     r0,#1
001158  f7fffffe          BL       ChangeParam
;;;335    									switch (res) {
00115c  2801              CMP      r0,#1
00115e  d002              BEQ      |L1.4454|
;;;336    										case 1: {SavePrms.RefUdcRazrad = (GetValue(0) * 10.0f + 0.5f);} break;
;;;337    									} //switch
;;;338    								} while (res); //do
001160  2800              CMP      r0,#0
001162  d1f6              BNE      |L1.4434|
001164  e5ef              B        |L1.3398|
                  |L1.4454|
001166  2000              MOVS     r0,#0                 ;336
001168  f7fffffe          BL       GetValue
00116c  eef00a68          VMOV.F32 s1,s17                ;336
001170  ee400a08          VMLA.F32 s1,s0,s16             ;336
001174  eebc0ae0          VCVT.U32.F32 s0,s1                 ;336
001178  ee100a10          VMOV     r0,s0                 ;336
00117c  f8a60ecc          STRH     r0,[r6,#0xecc]        ;336
001180  e7e7              B        |L1.4434|
                  |L1.4482|
;;;339    							} break;
;;;340    			case 5: {	FillData(0, SavePrms.RefSUminU/10  ,    5, 800, 1    ,22,0," [B]" ,0); 
001182  f2400600          MOVW     r6,#:LOWER16: Metro
001186  f2c00600          MOVT     r6,#:UPPER16: Metro
00118a  f8b60ece          LDRH     r0,[r6,#0xece]  ; Metro
00118e  f64c41cd          MOV      r1,#0xcccd
001192  4348              MULS     r0,r1,r0
001194  0cc0              LSRS     r0,r0,#19
001196  ee000a10          VMOV     s0,r0
00119a  2700              MOVS     r7,#0
00119c  eeb80a40          VCVT.F32.U32 s0,s0
0011a0  f2af03c4          ADR      r3,|L1.4320|
0011a4  463a              MOV      r2,r7
0011a6  2116              MOVS     r1,#0x16
0011a8  eef71a00          VMOV.F32 s3,#1.00000000
0011ac  ed9f1aed          VLDR     s2,|L1.5476|
0011b0  eef10a04          VMOV.F32 s1,#5.00000000
0011b4  4638              MOV      r0,r7
0011b6  9700              STR      r7,[sp,#0]
0011b8  f7fffffe          BL       FillData
;;;341    								FillData(1, SavePrms.RefSUminT/4.0f,0.25f,  10, 0.25f,21,2," [мс]",0);
0011bc  9700              STR      r7,[sp,#0]
0011be  f8b60ed0          LDRH     r0,[r6,#0xed0]  ; Metro
0011c2  eef50a00          VMOV.F32 s1,#0.25000000
0011c6  ee000a10          VMOV     s0,r0
0011ca  eeb80a40          VCVT.F32.U32 s0,s0
0011ce  ee200a20          VMUL.F32 s0,s0,s1
0011d2  f2af13bc          ADR      r3,|L1.4120|
0011d6  2202              MOVS     r2,#2
0011d8  2115              MOVS     r1,#0x15
0011da  eef51a00          VMOV.F32 s3,#0.25000000
0011de  eeb21a04          VMOV.F32 s2,#10.00000000
0011e2  eef50a00          VMOV.F32 s1,#0.25000000
0011e6  2001              MOVS     r0,#1
0011e8  f7fffffe          BL       FillData
0011ec  eef28a04          VMOV.F32 s17,#10.00000000      ;305
0011f0  eeb69a00          VMOV.F32 s18,#0.50000000       ;308
0011f4  eeb18a00          VMOV.F32 s16,#4.00000000       ;309
                  |L1.4600|
;;;342    								do {res=ChangeParam(2,">>НИЗКОЕ Uсинхр.","  Us:             t:            ");
0011f8  a2db              ADR      r2,|L1.5480|
0011fa  a1e4              ADR      r1,|L1.5516|
0011fc  2002              MOVS     r0,#2
0011fe  f7fffffe          BL       ChangeParam
;;;343    									switch (res) {
001202  2801              CMP      r0,#1
001204  d004              BEQ      |L1.4624|
001206  2802              CMP      r0,#2
001208  d010              BEQ      |L1.4652|
;;;344    										case 1: {SavePrms.RefSUminU = (GetValue(0) * 10.0f + 0.5f);} break;
;;;345    										case 2: {SavePrms.RefSUminT = (GetValue(1) *  4.0f + 0.5f);} break;
;;;346    									} //switch
;;;347    								} while (res); //do
00120a  2800              CMP      r0,#0
00120c  d1f4              BNE      |L1.4600|
00120e  e59a              B        |L1.3398|
                  |L1.4624|
001210  2000              MOVS     r0,#0                 ;344
001212  f7fffffe          BL       GetValue
001216  eef00a49          VMOV.F32 s1,s18                ;344
00121a  ee400a28          VMLA.F32 s1,s0,s17             ;344
00121e  eebc0ae0          VCVT.U32.F32 s0,s1                 ;344
001222  ee100a10          VMOV     r0,s0                 ;344
001226  f8a60ece          STRH     r0,[r6,#0xece]        ;344
00122a  e7e5              B        |L1.4600|
                  |L1.4652|
00122c  2001              MOVS     r0,#1                 ;345
00122e  f7fffffe          BL       GetValue
001232  eef00a49          VMOV.F32 s1,s18                ;345
001236  ee400a08          VMLA.F32 s1,s0,s16             ;345
00123a  eebc0ae0          VCVT.U32.F32 s0,s1                 ;345
00123e  ee100a10          VMOV     r0,s0                 ;345
001242  f8a60ed0          STRH     r0,[r6,#0xed0]        ;345
001246  e7d7              B        |L1.4600|
                  |L1.4680|
;;;348    							} break;
;;;349    			case 6: {	FillData(0, SavePrms.RefSUmaxU/10  ,    5, 800, 1    ,22,0," [B]" ,0); 
001248  f2400600          MOVW     r6,#:LOWER16: Metro
00124c  f2c00600          MOVT     r6,#:UPPER16: Metro
001250  f8b60ed4          LDRH     r0,[r6,#0xed4]  ; Metro
001254  f64c41cd          MOV      r1,#0xcccd
001258  4348              MULS     r0,r1,r0
00125a  0cc0              LSRS     r0,r0,#19
00125c  ee000a10          VMOV     s0,r0
001260  2700              MOVS     r7,#0
001262  eeb80a40          VCVT.F32.U32 s0,s0
001266  f2af1388          ADR      r3,|L1.4320|
00126a  463a              MOV      r2,r7
00126c  2116              MOVS     r1,#0x16
00126e  eef71a00          VMOV.F32 s3,#1.00000000
001272  ed9f1abc          VLDR     s2,|L1.5476|
001276  eef10a04          VMOV.F32 s1,#5.00000000
00127a  4638              MOV      r0,r7
00127c  9700              STR      r7,[sp,#0]
00127e  f7fffffe          BL       FillData
;;;350    								FillData(1, SavePrms.RefSUmaxT/4.0f,0.25f,  10, 0.25f,21,2," [мс]",0);
001282  9700              STR      r7,[sp,#0]
001284  f8b60ed6          LDRH     r0,[r6,#0xed6]  ; Metro
001288  eef50a00          VMOV.F32 s1,#0.25000000
00128c  ee000a10          VMOV     s0,r0
001290  eeb80a40          VCVT.F32.U32 s0,s0
001294  ee200a20          VMUL.F32 s0,s0,s1
001298  f2af2384          ADR      r3,|L1.4120|
00129c  2202              MOVS     r2,#2
00129e  2115              MOVS     r1,#0x15
0012a0  eef51a00          VMOV.F32 s3,#0.25000000
0012a4  eeb21a04          VMOV.F32 s2,#10.00000000
0012a8  eef50a00          VMOV.F32 s1,#0.25000000
0012ac  2001              MOVS     r0,#1
0012ae  f7fffffe          BL       FillData
0012b2  eeb28a04          VMOV.F32 s16,#10.00000000      ;305
0012b6  eeb69a00          VMOV.F32 s18,#0.50000000       ;308
0012ba  eef18a00          VMOV.F32 s17,#4.00000000       ;309
                  |L1.4798|
;;;351    								do {res=ChangeParam(2,">>ВЫСОКОЕ Uсинхр","  Us:             t:            ");
0012be  a2aa              ADR      r2,|L1.5480|
0012c0  a1b7              ADR      r1,|L1.5536|
0012c2  2002              MOVS     r0,#2
0012c4  f7fffffe          BL       ChangeParam
;;;352    									switch (res) {
0012c8  2801              CMP      r0,#1
0012ca  d004              BEQ      |L1.4822|
0012cc  2802              CMP      r0,#2
0012ce  d010              BEQ      |L1.4850|
;;;353    										case 1: {SavePrms.RefSUmaxU = (GetValue(0) * 10.0f + 0.5f);} break;
;;;354    										case 2: {SavePrms.RefSUmaxT = (GetValue(1) *  4.0f + 0.5f);} break;
;;;355    									} //switch
;;;356    								} while (res); //do
0012d0  2800              CMP      r0,#0
0012d2  d1f4              BNE      |L1.4798|
0012d4  e537              B        |L1.3398|
                  |L1.4822|
0012d6  2000              MOVS     r0,#0                 ;353
0012d8  f7fffffe          BL       GetValue
0012dc  eef00a49          VMOV.F32 s1,s18                ;353
0012e0  ee400a08          VMLA.F32 s1,s0,s16             ;353
0012e4  eebc0ae0          VCVT.U32.F32 s0,s1                 ;353
0012e8  ee100a10          VMOV     r0,s0                 ;353
0012ec  f8a60ed4          STRH     r0,[r6,#0xed4]        ;353
0012f0  e7e5              B        |L1.4798|
                  |L1.4850|
0012f2  2001              MOVS     r0,#1                 ;354
0012f4  f7fffffe          BL       GetValue
0012f8  eef00a49          VMOV.F32 s1,s18                ;354
0012fc  ee400a28          VMLA.F32 s1,s0,s17             ;354
001300  eebc0ae0          VCVT.U32.F32 s0,s1                 ;354
001304  ee100a10          VMOV     r0,s0                 ;354
001308  f8a60ed6          STRH     r0,[r6,#0xed6]        ;354
00130c  e7d7              B        |L1.4798|
                  |L1.4878|
;;;357    							} break;			
;;;358    			case 7: {	FillData(0, SavePrms.RefTempr/10, 10, 120, 1, 21, 0, " [ °C]", 0); 
00130e  f2400600          MOVW     r6,#:LOWER16: Metro
001312  f2c00600          MOVT     r6,#:UPPER16: Metro
001316  f8b60ed2          LDRH     r0,[r6,#0xed2]  ; Metro
00131a  f64c41cd          MOV      r1,#0xcccd
00131e  4348              MULS     r0,r1,r0
001320  0cc0              LSRS     r0,r0,#19
001322  ee000a10          VMOV     s0,r0
001326  2000              MOVS     r0,#0
001328  a3a2              ADR      r3,|L1.5556|
00132a  eeb80a40          VCVT.F32.U32 s0,s0
00132e  4602              MOV      r2,r0
001330  2115              MOVS     r1,#0x15
001332  eef71a00          VMOV.F32 s3,#1.00000000
001336  ed9f1aa1          VLDR     s2,|L1.5564|
00133a  eef20a04          VMOV.F32 s1,#10.00000000
00133e  9000              STR      r0,[sp,#0]
001340  f7fffffe          BL       FillData
001344  eeb28a04          VMOV.F32 s16,#10.00000000      ;305
                  |L1.4936|
;;;359    								do {res=ChangeParam(1,">>ТЕМПЕРАТУРА   ","  T:            ");
001348  a29d              ADR      r2,|L1.5568|
00134a  a1a2              ADR      r1,|L1.5588|
00134c  2001              MOVS     r0,#1
00134e  f7fffffe          BL       ChangeParam
;;;360    									switch (res) {
001352  2801              CMP      r0,#1
001354  d002              BEQ      |L1.4956|
;;;361    										case 1: {SavePrms.RefTempr = (GetValue(0) * 10.0f);} break;
;;;362    									} //switch
;;;363    								} while (res); //do
001356  2800              CMP      r0,#0
001358  d1f6              BNE      |L1.4936|
00135a  e4f4              B        |L1.3398|
                  |L1.4956|
00135c  2000              MOVS     r0,#0                 ;361
00135e  f7fffffe          BL       GetValue
001362  ee200a08          VMUL.F32 s0,s0,s16             ;361
001366  eebc0ac0          VCVT.U32.F32 s0,s0                 ;361
00136a  ee100a10          VMOV     r0,s0                 ;361
00136e  f8a60ed2          STRH     r0,[r6,#0xed2]        ;361
001372  e7e9              B        |L1.4936|
                  |L1.4980|
;;;364    							} break;
;;;365    			case 8: {	FillData(0, SavePrms.RefMtzIVD/10     ,    5 , 1500,   1 ,21,0," [A]" ,0); 
001374  f2400600          MOVW     r6,#:LOWER16: Metro
001378  f2c00600          MOVT     r6,#:UPPER16: Metro
00137c  f8b60ed8          LDRH     r0,[r6,#0xed8]  ; Metro
001380  f64c41cd          MOV      r1,#0xcccd
001384  4348              MULS     r0,r1,r0
001386  0cc0              LSRS     r0,r0,#19
001388  ee000a10          VMOV     s0,r0
00138c  2700              MOVS     r7,#0
00138e  eeb80a40          VCVT.F32.U32 s0,s0
001392  f2af23f8          ADR      r3,|L1.4252|
001396  463a              MOV      r2,r7
001398  2115              MOVS     r1,#0x15
00139a  eef71a00          VMOV.F32 s3,#1.00000000
00139e  ed1f1abf          VLDR     s2,|L1.4260|
0013a2  eef10a04          VMOV.F32 s1,#5.00000000
0013a6  4638              MOV      r0,r7
0013a8  9700              STR      r7,[sp,#0]
0013aa  f7fffffe          BL       FillData
;;;366    								FillData(1, SavePrms.RefMtzTVD/4000.0f, 0.1f ,   15, 0.1f,21,1," [с]",0);
0013ae  f8b60eda          LDRH     r0,[r6,#0xeda]  ; Metro
0013b2  ee000a10          VMOV     s0,r0
0013b6  eef80a40          VCVT.F32.U32 s1,s0
0013ba  ed9f8a8b          VLDR     s16,|L1.5608|
0013be  2201              MOVS     r2,#1
0013c0  a38a              ADR      r3,|L1.5612|
0013c2  ee800a88          VDIV.F32 s0,s1,s16
0013c6  2115              MOVS     r1,#0x15
0013c8  eddf0a8a          VLDR     s1,|L1.5620|
0013cc  eeb21a0e          VMOV.F32 s2,#15.00000000
0013d0  4610              MOV      r0,r2
0013d2  eef01a60          VMOV.F32 s3,s1
0013d6  9700              STR      r7,[sp,#0]
0013d8  f7fffffe          BL       FillData
0013dc  eef28a04          VMOV.F32 s17,#10.00000000      ;305
0013e0  eeb69a00          VMOV.F32 s18,#0.50000000       ;308
                  |L1.5092|
;;;367    								do {res=ChangeParam(2,">>ЗАЩИТА ДИОДОВ ","  I:              t:            ");
0013e4  f2af3240          ADR      r2,|L1.4264|
0013e8  a183              ADR      r1,|L1.5624|
0013ea  2002              MOVS     r0,#2
0013ec  f7fffffe          BL       ChangeParam
;;;368    									switch (res) {
0013f0  2801              CMP      r0,#1
0013f2  d004              BEQ      |L1.5118|
0013f4  2802              CMP      r0,#2
0013f6  d010              BEQ      |L1.5146|
;;;369    										case 1: {SavePrms.RefMtzIVD = (GetValue(0) * 10.0f   + 0.5f);} break;
;;;370    										case 2: {SavePrms.RefMtzTVD = (GetValue(1) * 4000.0f + 0.5f);} break;
;;;371    									} //switch
;;;372    								} while (res); //do
0013f8  2800              CMP      r0,#0
0013fa  d1f3              BNE      |L1.5092|
0013fc  e4a3              B        |L1.3398|
                  |L1.5118|
0013fe  2000              MOVS     r0,#0                 ;369
001400  f7fffffe          BL       GetValue
001404  eef00a49          VMOV.F32 s1,s18                ;369
001408  ee400a28          VMLA.F32 s1,s0,s17             ;369
00140c  eebc0ae0          VCVT.U32.F32 s0,s1                 ;369
001410  ee100a10          VMOV     r0,s0                 ;369
001414  f8a60ed8          STRH     r0,[r6,#0xed8]        ;369
001418  e7e4              B        |L1.5092|
                  |L1.5146|
00141a  2001              MOVS     r0,#1                 ;370
00141c  f7fffffe          BL       GetValue
001420  eef00a49          VMOV.F32 s1,s18                ;370
001424  ee400a08          VMLA.F32 s1,s0,s16             ;370
001428  eebc0ae0          VCVT.U32.F32 s0,s1                 ;370
00142c  ee100a10          VMOV     r0,s0                 ;370
001430  f8a60eda          STRH     r0,[r6,#0xeda]        ;370
001434  e7d6              B        |L1.5092|
                  |L1.5174|
;;;373    							} break;
;;;374    			case 9: {	FillData(0, SavePrms.RefWorkRazrad /4000.0f,  0.1f,  10, 0.1f, 22, 1," [c]", 0); 
001436  f2400600          MOVW     r6,#:LOWER16: Metro
00143a  f2c00600          MOVT     r6,#:UPPER16: Metro
00143e  f8d60f80          LDR      r0,[r6,#0xf80]  ; Metro
001442  ee000a10          VMOV     s0,r0
001446  eef80ac0          VCVT.F32.S32 s1,s0
00144a  ed9f8a67          VLDR     s16,|L1.5608|
00144e  2700              MOVS     r7,#0
001450  2201              MOVS     r2,#1
001452  ee800a88          VDIV.F32 s0,s1,s16
001456  a36d              ADR      r3,|L1.5644|
001458  2116              MOVS     r1,#0x16
00145a  eddf0a66          VLDR     s1,|L1.5620|
00145e  eeb21a04          VMOV.F32 s2,#10.00000000
001462  4638              MOV      r0,r7
001464  eef01a60          VMOV.F32 s3,s1
001468  9700              STR      r7,[sp,#0]
00146a  f7fffffe          BL       FillData
;;;375    								FillData(1, SavePrms.RefPauseRazrad/4000	 ,    1, 120,   1 , 22, 0," [с]", 0);
00146e  f8d60f84          LDR      r0,[r6,#0xf84]  ; Metro
001472  f44f617a          MOV      r1,#0xfa0
001476  fb90f0f1          SDIV     r0,r0,r1
00147a  ee000a10          VMOV     s0,r0
00147e  a35b              ADR      r3,|L1.5612|
001480  2200              MOVS     r2,#0
001482  eeb80ac0          VCVT.F32.S32 s0,s0
001486  2116              MOVS     r1,#0x16
001488  eef71a00          VMOV.F32 s3,#1.00000000
00148c  ed9f1a4b          VLDR     s2,|L1.5564|
001490  eef70a00          VMOV.F32 s1,#1.00000000
001494  2001              MOVS     r0,#1
001496  9700              STR      r7,[sp,#0]
001498  f7fffffe          BL       FillData
00149c  eef68a00          VMOV.F32 s17,#0.50000000       ;308
                  |L1.5280|
;;;376    								do {res=ChangeParam(2,">>ЗАЩИТА РЕЗИСТ.","  tр:             tп:           ");
0014a0  a25c              ADR      r2,|L1.5652|
0014a2  a165              ADR      r1,|L1.5688|
0014a4  2002              MOVS     r0,#2
0014a6  f7fffffe          BL       ChangeParam
;;;377    									switch (res) {
0014aa  2801              CMP      r0,#1
0014ac  d004              BEQ      |L1.5304|
0014ae  2802              CMP      r0,#2
0014b0  d010              BEQ      |L1.5332|
;;;378    										case 1: {SavePrms.RefWorkRazrad  = (GetValue(0) * 4000.0f + 0.5f);} break;
;;;379    										case 2: {SavePrms.RefPauseRazrad = (GetValue(1) * 4000);} break;
;;;380    									} //switch
;;;381    								} while (res); //do
0014b2  2800              CMP      r0,#0
0014b4  d1f4              BNE      |L1.5280|
0014b6  e446              B        |L1.3398|
                  |L1.5304|
0014b8  2000              MOVS     r0,#0                 ;378
0014ba  f7fffffe          BL       GetValue
0014be  eef00a68          VMOV.F32 s1,s17                ;378
0014c2  ee400a08          VMLA.F32 s1,s0,s16             ;378
0014c6  eebd0ae0          VCVT.S32.F32 s0,s1                 ;378
0014ca  ee100a10          VMOV     r0,s0                 ;378
0014ce  f8c60f80          STR      r0,[r6,#0xf80]        ;378  ; Metro
0014d2  e7e5              B        |L1.5280|
                  |L1.5332|
0014d4  2001              MOVS     r0,#1                 ;379
0014d6  f7fffffe          BL       GetValue
0014da  ee200a08          VMUL.F32 s0,s0,s16             ;379
0014de  eebd0ac0          VCVT.S32.F32 s0,s0                 ;379
0014e2  ee100a10          VMOV     r0,s0                 ;379
0014e6  f8c60f84          STR      r0,[r6,#0xf84]        ;379  ; Metro
0014ea  e7d9              B        |L1.5280|
                  |L1.5356|
;;;382    							} break;
;;;383    			case 10:{	FillData(0, SavePrms.RefIHighFreq /10     ,    5 , 1500,   1 ,22,0," [A]" ,0); 
0014ec  f2400600          MOVW     r6,#:LOWER16: Metro
0014f0  f2c00600          MOVT     r6,#:UPPER16: Metro
0014f4  f8b60fb0          LDRH     r0,[r6,#0xfb0]  ; Metro
0014f8  f2466167          MOV      r1,#0x6667
0014fc  fb10f001          SMULBB   r0,r0,r1
001500  1481              ASRS     r1,r0,#18
001502  eba170e0          SUB      r0,r1,r0,ASR #31
001506  ee000a10          VMOV     s0,r0
00150a  2700              MOVS     r7,#0
00150c  eeb80ac0          VCVT.F32.S32 s0,s0
001510  f2af4378          ADR      r3,|L1.4252|
001514  463a              MOV      r2,r7
001516  2116              MOVS     r1,#0x16
001518  eef71a00          VMOV.F32 s3,#1.00000000
00151c  ed9f1a4b          VLDR     s2,|L1.5708|
001520  eef10a04          VMOV.F32 s1,#5.00000000
001524  4638              MOV      r0,r7
001526  9700              STR      r7,[sp,#0]
001528  f7fffffe          BL       FillData
;;;384    								FillData(1, SavePrms.RefTHighFreq /4.0f,0.25f,  10, 0.25f,21,2," [мс]",0);
00152c  9700              STR      r7,[sp,#0]
00152e  f9b60fb2          LDRSH    r0,[r6,#0xfb2]  ; Metro
001532  ee000a10          VMOV     s0,r0
001536  eeb80ac0          VCVT.F32.S32 s0,s0
00153a  e089              B        |L1.5712|
                  |L1.5436|
00153c  20205564          DCB      "  Udc:          ",0
001540  633a2020
001544  20202020
001548  20202020
00154c  00      
00154d  00                DCB      0
00154e  00                DCB      0
00154f  00                DCB      0
                  |L1.5456|
001550  3e3ed0c0          DCB      ">>",208,192,199,208,223,196," Udc    ",0
001554  c7d0dfc4
001558  20556463
00155c  20202020
001560  00      
001561  00                DCB      0
001562  00                DCB      0
001563  00                DCB      0
                  |L1.5476|
001564  44480000          DCFS     0x44480000 ; 800
                  |L1.5480|
001568  20205573          DCB      "  Us:             t:            ",0
00156c  3a202020
001570  20202020
001574  20202020
001578  2020743a
00157c  20202020
001580  20202020
001584  20202020
001588  00      
001589  00                DCB      0
00158a  00                DCB      0
00158b  00                DCB      0
                  |L1.5516|
00158c  3e3ecdc8          DCB      ">>",205,200,199,202,206,197," U",241,232,237,245,240,"."
001590  c7cacec5
001594  2055f1e8
001598  edf5f02e
00159c  00                DCB      0
00159d  00                DCB      0
00159e  00                DCB      0
00159f  00                DCB      0
                  |L1.5536|
0015a0  3e3ec2db          DCB      ">>",194,219,209,206,202,206,197," U",241,232,237,245,240
0015a4  d1cecace
0015a8  c52055f1
0015ac  e8edf5f0
0015b0  00                DCB      0
0015b1  00                DCB      0
0015b2  00                DCB      0
0015b3  00                DCB      0
                  |L1.5556|
0015b4  205b20b0          DCB      " [ ",176,"C]",0
0015b8  435d00  
0015bb  00                DCB      0
                  |L1.5564|
0015bc  42f00000          DCFS     0x42f00000 ; 120
                  |L1.5568|
0015c0  2020543a          DCB      "  T:            ",0
0015c4  20202020
0015c8  20202020
0015cc  20202020
0015d0  00      
0015d1  00                DCB      0
0015d2  00                DCB      0
0015d3  00                DCB      0
                  |L1.5588|
0015d4  3e3ed2c5          DCB      ">>",210,197,204,207,197,208,192,210,211,208,192,"   ",0
0015d8  cccfc5d0
0015dc  c0d2d3d0
0015e0  c0202020
0015e4  00      
0015e5  00                DCB      0
0015e6  00                DCB      0
0015e7  00                DCB      0
                  |L1.5608|
0015e8  457a0000          DCFS     0x457a0000 ; 4000
                  |L1.5612|
0015ec  205bf15d          DCB      " [",241,"]",0
0015f0  00      
0015f1  00                DCB      0
0015f2  00                DCB      0
0015f3  00                DCB      0
                  |L1.5620|
0015f4  3dcccccd          DCFS     0x3dcccccd ; 0.10000000149011612
                  |L1.5624|
0015f8  3e3ec7c0          DCB      ">>",199,192,217,200,210,192," ",196,200,206,196,206,194
0015fc  d9c8d2c0
001600  20c4c8ce
001604  c4cec2  
001607  2000              DCB      " ",0
001609  00                DCB      0
00160a  00                DCB      0
00160b  00                DCB      0
                  |L1.5644|
00160c  205b635d          DCB      " [c]",0
001610  00      
001611  00                DCB      0
001612  00                DCB      0
001613  00                DCB      0
                  |L1.5652|
001614  202074f0          DCB      "  t",240,":             t",239,":           ",0
001618  3a202020
00161c  20202020
001620  20202020
001624  202074ef
001628  3a202020
00162c  20202020
001630  20202020
001634  00      
001635  00                DCB      0
001636  00                DCB      0
001637  00                DCB      0
                  |L1.5688|
001638  3e3ec7c0          DCB      ">>",199,192,217,200,210,192," ",208,197,199,200,209,210
00163c  d9c8d2c0
001640  20d0c5c7
001644  c8d1d2  
001647  2e00              DCB      ".",0
001649  00                DCB      0
00164a  00                DCB      0
00164b  00                DCB      0
                  |L1.5708|
00164c  44bb8000          DCFS     0x44bb8000 ; 1500
                  |L1.5712|
001650  eef50a00          VMOV.F32 s1,#0.25000000
001654  ee200a20          VMUL.F32 s0,s0,s1
001658  f2af6344          ADR      r3,|L1.4120|
00165c  2202              MOVS     r2,#2
00165e  2115              MOVS     r1,#0x15
001660  eef51a00          VMOV.F32 s3,#0.25000000
001664  eeb21a04          VMOV.F32 s2,#10.00000000
001668  eef50a00          VMOV.F32 s1,#0.25000000
00166c  2001              MOVS     r0,#1
00166e  f7fffffe          BL       FillData
001672  eeb28a04          VMOV.F32 s16,#10.00000000      ;305
001676  eeb69a00          VMOV.F32 s18,#0.50000000       ;308
00167a  eef18a00          VMOV.F32 s17,#4.00000000       ;309
                  |L1.5758|
;;;385    								do {res=ChangeParam(2,">>ВЫСОКОЧАСТ.ТОК","  dI:             t:            ");
00167e  a2ee              ADR      r2,|L1.6712|
001680  a1f6              ADR      r1,|L1.6748|
001682  2002              MOVS     r0,#2
001684  f7fffffe          BL       ChangeParam
;;;386    									switch (res) {
001688  2801              CMP      r0,#1
00168a  d005              BEQ      |L1.5784|
00168c  2802              CMP      r0,#2
00168e  d011              BEQ      |L1.5812|
;;;387    										case 1: {SavePrms.RefIHighFreq = (GetValue(0) * 10.0f   + 0.5f);} break;
;;;388    										case 2: {SavePrms.RefTHighFreq = (GetValue(1) * 4.0f + 0.5f);} break;
;;;389    									} //switch
;;;390    								} while (res); //do
001690  2800              CMP      r0,#0
001692  d1f4              BNE      |L1.5758|
001694  f7ffbb57          B        |L1.3398|
                  |L1.5784|
001698  2000              MOVS     r0,#0                 ;387
00169a  f7fffffe          BL       GetValue
00169e  eef00a49          VMOV.F32 s1,s18                ;387
0016a2  ee400a08          VMLA.F32 s1,s0,s16             ;387
0016a6  eebd0ae0          VCVT.S32.F32 s0,s1                 ;387
0016aa  ee100a10          VMOV     r0,s0                 ;387
0016ae  f8a60fb0          STRH     r0,[r6,#0xfb0]        ;387
0016b2  e7e4              B        |L1.5758|
                  |L1.5812|
0016b4  2001              MOVS     r0,#1                 ;388
0016b6  f7fffffe          BL       GetValue
0016ba  eef00a49          VMOV.F32 s1,s18                ;388
0016be  ee400a28          VMLA.F32 s1,s0,s17             ;388
0016c2  eebd0ae0          VCVT.S32.F32 s0,s1                 ;388
0016c6  ee100a10          VMOV     r0,s0                 ;388
0016ca  f8a60fb2          STRH     r0,[r6,#0xfb2]        ;388
0016ce  e7d6              B        |L1.5758|
                  |L1.5840|
;;;391    							} break;
;;;392    							
;;;393    		} //switch
;;;394    	}//while	
;;;395    }
0016d0  b001              ADD      sp,sp,#4
0016d2  ecbd8b04          VPOP     {d8-d9}
0016d6  bdf0              POP      {r4-r7,pc}
;;;396    
                          ENDP

                  _SubMenuRefs PROC
;;;397    void _SubMenuRefs(void){
0016d8  b570              PUSH     {r4-r6,lr}
;;;398    int pos=1;
0016da  2401              MOVS     r4,#1
0016dc  ed2d8b0c          VPUSH    {d8-d13}              ;397
0016e0  b082              SUB      sp,sp,#8              ;397
;;;399    int res=0;
;;;400    	while (1) {
;;;401    		pos = SubItem(3, pos, STrefs, 0);
;;;402    		switch (pos) {
;;;403    			case 0: {return;} break;
;;;404    			case 1: {	FillData(0, SavePrms.RefUdc/10, 0, 1700, 1, 24, 0," B", 0);
0016e2  eddf9ae3          VLDR     s19,|L1.6768|
0016e6  ed9faae3          VLDR     s20,|L1.6772|
;;;405    								FillData(1, SavePrms.SoftStartUdc * 0.006103515625f, 1, 100, 1, 24, 0, " В/с", 0); 
0016ea  eddf8ae3          VLDR     s17,|L1.6776|
0016ee  eddfaae3          VLDR     s21,|L1.6780|
;;;406    								do {res=ChangeParam(2,">>УСТАВКА Udc   ","  Udc:            Udc':         ");
;;;407    									switch (res) {
;;;408    										case 1: {SavePrms.RefUdc = (GetValue(0) * 10.0f + 0.5f);} break;
;;;409    										case 2: {SavePrms.SoftStartUdc = (int)(GetValue(1) * 163.84f) & 0x0000FFFF;} break;
;;;410    									} //switch
;;;411    								} while (res); //do
;;;412    							} break;
;;;413    			case 2: {	FillData(0, SavePrms.RefQ * PQKoef, -500, 500, 1, 21, 0, " [кВАр]", 0);  
0016f2  ed9fbae3          VLDR     s22,|L1.6784|
0016f6  eddfbae3          VLDR     s23,|L1.6788|
0016fa  2600              MOVS     r6,#0
;;;414    								do {res=ChangeParam(1,">>УСТАВКА Q     ","  Q:            ");
;;;415    									switch (res) {
;;;416    										case 1: {SavePrms.RefQ = (GetValue(0) * (1.0f / PQKoef) + 0.5f);} break;
;;;417    									} //switch
;;;418    								} while (res); //do
;;;419    							} break;
;;;420    			case 3: {	FillData(0, SavePrms.RefFi1 * 0.0054931640625f, -180, 179, 0.05f, 21, 2, "", 0);  
0016fc  ed9f9ae2          VLDR     s18,|L1.6792|
001700  ed9fcae2          VLDR     s24,|L1.6796|
001704  eddfcae2          VLDR     s25,|L1.6800|
001708  f2400500          MOVW     r5,#:LOWER16: Metro
00170c  f2c00500          MOVT     r5,#:UPPER16: Metro
                  |L1.5904|
001710  2300              MOVS     r3,#0                 ;401
001712  f2400000          MOVW     r0,#:LOWER16: ||.data||;401
001716  f2c00000          MOVT     r0,#:UPPER16: ||.data||;401
00171a  6902              LDR      r2,[r0,#0x10]         ;401  ; STrefs
00171c  4621              MOV      r1,r4                 ;401
00171e  2003              MOVS     r0,#3                 ;401
001720  f7fffffe          BL       SubItem
001724  0004              MOVS     r4,r0                 ;401
;;;421    								do {res=ChangeParam(1,">>УСТАВКА ¦      ","  ¦:            ");
;;;422    									switch (res) {
;;;423    										case 1: {SavePrms.RefFi1 = (int)(GetValue(0) * 182.044444444f + 0.5f) & 0xFFFF;} break;
;;;424    									} //switch
;;;425    								} while (res); //do
;;;426    							} break;			
;;;427    							
;;;428    							
;;;429    		} //switch
;;;430    	}//while	
;;;431    }
001726  bf02              ITTT     EQ
001728  b002              ADDEQ    sp,sp,#8
00172a  ecbd8b0c          VPOPEQ   {d8-d13}
00172e  bd70              POPEQ    {r4-r6,pc}
001730  2c01              CMP      r4,#1                 ;402
001732  d026              BEQ      |L1.6018|
001734  2c02              CMP      r4,#2                 ;402
001736  d074              BEQ      |L1.6178|
001738  2c03              CMP      r4,#3                 ;402
00173a  d1e9              BNE      |L1.5904|
00173c  9600              STR      r6,[sp,#0]            ;420
00173e  f9b50ef6          LDRSH    r0,[r5,#0xef6]        ;420  ; Metro
001742  2202              MOVS     r2,#2                 ;420
001744  ee000a10          VMOV     s0,r0                 ;420
001748  a3c3              ADR      r3,|L1.6744|
00174a  2115              MOVS     r1,#0x15              ;420
00174c  eeb80ac0          VCVT.F32.S32 s0,s0                 ;420
001750  eef01a4c          VMOV.F32 s3,s24                ;420
001754  eeb01a6c          VMOV.F32 s2,s25                ;420
001758  ee200a09          VMUL.F32 s0,s0,s18             ;420
00175c  eddf0acd          VLDR     s1,|L1.6804|
001760  2000              MOVS     r0,#0                 ;420
001762  f7fffffe          BL       FillData
001766  eeb6da00          VMOV.F32 s26,#0.50000000       ;408
00176a  ed9f8acb          VLDR     s16,|L1.6808|
                  |L1.5998|
00176e  a2cb              ADR      r2,|L1.6812|
001770  a1cf              ADR      r1,|L1.6832|
001772  2001              MOVS     r0,#1                 ;421
001774  f7fffffe          BL       ChangeParam
001778  2801              CMP      r0,#1                 ;422
00177a  d07c              BEQ      |L1.6262|
00177c  2800              CMP      r0,#0                 ;425
00177e  d1f6              BNE      |L1.5998|
001780  e7c6              B        |L1.5904|
                  |L1.6018|
001782  f8b50ef2          LDRH     r0,[r5,#0xef2]        ;404  ; Metro
001786  f2466167          MOV      r1,#0x6667            ;404
00178a  fb10f001          SMULBB   r0,r0,r1              ;404
00178e  1481              ASRS     r1,r0,#18             ;404
001790  eba170e0          SUB      r0,r1,r0,ASR #31      ;404
001794  ee000a10          VMOV     s0,r0                 ;404
001798  eeb80ac0          VCVT.F32.S32 s0,s0                 ;404
00179c  f6af534c          ADR      r3,|L1.2644|
0017a0  2200              MOVS     r2,#0                 ;404
0017a2  2118              MOVS     r1,#0x18              ;404
0017a4  eef71a00          VMOV.F32 s3,#1.00000000        ;404
0017a8  eeb01a69          VMOV.F32 s2,s19                ;404
0017ac  eef00a4a          VMOV.F32 s1,s20                ;404
0017b0  4610              MOV      r0,r2                 ;404
0017b2  9600              STR      r6,[sp,#0]            ;404
0017b4  f7fffffe          BL       FillData
0017b8  9600              STR      r6,[sp,#0]            ;405
0017ba  f8d50ef8          LDR      r0,[r5,#0xef8]        ;405  ; Metro
0017be  a3c1              ADR      r3,|L1.6852|
0017c0  ee000a10          VMOV     s0,r0                 ;405
0017c4  2200              MOVS     r2,#0                 ;405
0017c6  2118              MOVS     r1,#0x18              ;405
0017c8  eeb80ac0          VCVT.F32.S32 s0,s0                 ;405
0017cc  eef71a00          VMOV.F32 s3,#1.00000000        ;405
0017d0  eeb01a6a          VMOV.F32 s2,s21                ;405
0017d4  eef70a00          VMOV.F32 s1,#1.00000000        ;405
0017d8  ee200a28          VMUL.F32 s0,s0,s17             ;405
0017dc  2001              MOVS     r0,#1                 ;405
0017de  f7fffffe          BL       FillData
0017e2  eeb28a04          VMOV.F32 s16,#10.00000000      ;408
0017e6  ed9fdab9          VLDR     s26,|L1.6860|
0017ea  eef6da00          VMOV.F32 s27,#0.50000000       ;408
                  |L1.6126|
0017ee  a2b8              ADR      r2,|L1.6864|
0017f0  a1c0              ADR      r1,|L1.6900|
0017f2  2002              MOVS     r0,#2                 ;406
0017f4  f7fffffe          BL       ChangeParam
0017f8  2801              CMP      r0,#1                 ;407
0017fa  d004              BEQ      |L1.6150|
0017fc  2802              CMP      r0,#2                 ;407
0017fe  d011              BEQ      |L1.6180|
001800  2800              CMP      r0,#0                 ;411
001802  d1f4              BNE      |L1.6126|
001804  e784              B        |L1.5904|
                  |L1.6150|
001806  2000              MOVS     r0,#0                 ;408
001808  f7fffffe          BL       GetValue
00180c  eeb02a6d          VMOV.F32 s4,s27                ;408
001810  ee002a08          VMLA.F32 s4,s0,s16             ;408
001814  eebd0ac2          VCVT.S32.F32 s0,s4                 ;408
001818  ee100a10          VMOV     r0,s0                 ;408
00181c  f8a50ef2          STRH     r0,[r5,#0xef2]        ;408
001820  e7e5              B        |L1.6126|
                  |L1.6178|
001822  e00c              B        |L1.6206|
                  |L1.6180|
001824  2001              MOVS     r0,#1                 ;409
001826  f7fffffe          BL       GetValue
00182a  ee200a0d          VMUL.F32 s0,s0,s26             ;409
00182e  eebd0ac0          VCVT.S32.F32 s0,s0                 ;409
001832  ee100a10          VMOV     r0,s0                 ;409
001836  b280              UXTH     r0,r0                 ;409
001838  f8c50ef8          STR      r0,[r5,#0xef8]        ;409  ; Metro
00183c  e7d7              B        |L1.6126|
                  |L1.6206|
00183e  ed9f0ab2          VLDR     s0,|L1.6920|
001842  f9b50ef4          LDRSH    r0,[r5,#0xef4]        ;413  ; Metro
001846  2200              MOVS     r2,#0                 ;413
001848  ee000a90          VMOV     s1,r0                 ;413
00184c  a3af              ADR      r3,|L1.6924|
00184e  2115              MOVS     r1,#0x15              ;413
001850  eef80ae0          VCVT.F32.S32 s1,s1                 ;413
001854  eef71a00          VMOV.F32 s3,#1.00000000        ;413
001858  eeb01a4b          VMOV.F32 s2,s22                ;413
00185c  4610              MOV      r0,r2                 ;413
00185e  ee200a20          VMUL.F32 s0,s0,s1              ;413
001862  eef00a6b          VMOV.F32 s1,s23                ;413
001866  9600              STR      r6,[sp,#0]            ;413
001868  f7fffffe          BL       FillData
00186c  ed9f8aa9          VLDR     s16,|L1.6932|
001870  eeb6da00          VMOV.F32 s26,#0.50000000       ;408
                  |L1.6260|
001874  e000              B        |L1.6264|
                  |L1.6262|
001876  e017              B        |L1.6312|
                  |L1.6264|
001878  a2a7              ADR      r2,|L1.6936|
00187a  a1ac              ADR      r1,|L1.6956|
00187c  2001              MOVS     r0,#1                 ;414
00187e  f7fffffe          BL       ChangeParam
001882  2801              CMP      r0,#1                 ;415
001884  d002              BEQ      |L1.6284|
001886  2800              CMP      r0,#0                 ;418
001888  d1f4              BNE      |L1.6260|
00188a  e741              B        |L1.5904|
                  |L1.6284|
00188c  2000              MOVS     r0,#0                 ;416
00188e  f7fffffe          BL       GetValue
001892  eeb02a4d          VMOV.F32 s4,s26                ;416
001896  ee002a08          VMLA.F32 s4,s0,s16             ;416
00189a  eebd0ac2          VCVT.S32.F32 s0,s4                 ;416
00189e  ee100a10          VMOV     r0,s0                 ;416
0018a2  f8a50ef4          STRH     r0,[r5,#0xef4]        ;416
0018a6  e7e5              B        |L1.6260|
                  |L1.6312|
0018a8  2000              MOVS     r0,#0                 ;423
0018aa  f7fffffe          BL       GetValue
0018ae  eeb02a4d          VMOV.F32 s4,s26                ;423
0018b2  ee002a08          VMLA.F32 s4,s0,s16             ;423
0018b6  eebd0ac2          VCVT.S32.F32 s0,s4                 ;423
0018ba  ee100a10          VMOV     r0,s0                 ;423
0018be  f8a50ef6          STRH     r0,[r5,#0xef6]        ;423
0018c2  e754              B        |L1.5998|
;;;432    
                          ENDP

                  _SubMenuZarad PROC
;;;433    void _SubMenuZarad(void){
0018c4  e92d41f0          PUSH     {r4-r8,lr}
;;;434    int pos=1;
0018c8  2401              MOVS     r4,#1
0018ca  ed2d8b08          VPUSH    {d8-d11}              ;433
0018ce  b082              SUB      sp,sp,#8              ;433
;;;435    int res=0;
;;;436    	while (1) {
;;;437    		pos = SubItem(3, pos, STzarad, 0);
0018d0  f2400700          MOVW     r7,#:LOWER16: ||.data||
0018d4  f2c00700          MOVT     r7,#:UPPER16: ||.data||
;;;438    		switch (pos) {
;;;439    			case 0: {return;} break;
;;;440    			case 1: {	FillData(0, SavePrms.RefUdcZarad/10, 0, 1200, 1, 23, 0," [B]", 0);
0018d8  ed9f9a99          VLDR     s18,|L1.6976|
0018dc  eddf9a65          VLDR     s19,|L1.6772|
;;;441    								do {res=ChangeParam(1,">>МИНИМАЛЬН. Udc","  Udc:          ");
;;;442    									switch (res) {
;;;443    										case 1: {SavePrms.RefUdcZarad = (GetValue(0) * 10.0f + 0.5f);} break;
;;;444    									} //switch
;;;445    								} while (res); //do
;;;446    							} break;
;;;447    			case 2: {	FillData(0, SavePrms.RefSUZarad/10, 0, 1000, 1, 23, 0," [B]", 0);
0018e0  ed9faa98          VLDR     s20,|L1.6980|
0018e4  eeb28a04          VMOV.F32 s16,#10.00000000      ;443
0018e8  eeb6ba00          VMOV.F32 s22,#0.50000000       ;443
0018ec  2600              MOVS     r6,#0                 ;443
;;;448    								do {res=ChangeParam(1,">>МИНИМАЛЬН. Us ","  Us:           ");
;;;449    									switch (res) {
;;;450    										case 1: {SavePrms.RefSUZarad = (GetValue(0) * 10.0f + 0.5f);} break;
;;;451    									} //switch
;;;452    								} while (res); //do
;;;453    							} break;
;;;454    			case 3: {	FillData(0, SavePrms.RefWorkKM1 / MainCycle, 1, 65.0, 1, 21, 0," [c]", 0);
0018ee  f44f68fa          MOV      r8,#0x7d0
0018f2  eddfaa95          VLDR     s21,|L1.6984|
0018f6  f2400500          MOVW     r5,#:LOWER16: Metro
0018fa  f2c00500          MOVT     r5,#:UPPER16: Metro
;;;455    								do {res=ChangeParam(1,">>ДЛИТЕЛЬН. КМ1 ","  t:            ");
;;;456    									switch (res) {
;;;457    										case 1: {SavePrms.RefWorkKM1 = (GetValue(0) * MainCycle);} break;
0018fe  eddf8a93          VLDR     s17,|L1.6988|
                  |L1.6402|
001902  2300              MOVS     r3,#0                 ;437
001904  4621              MOV      r1,r4                 ;437
001906  2003              MOVS     r0,#3                 ;437
001908  697a              LDR      r2,[r7,#0x14]         ;437  ; STzarad
00190a  f7fffffe          BL       SubItem
00190e  0004              MOVS     r4,r0                 ;437
;;;458    									} //switch
;;;459    								} while (res); //do
;;;460    							} break;
;;;461    		} //switch
;;;462    	}//while	
;;;463    } //void _SubMenuZarad(void)
001910  bf02              ITTT     EQ
001912  b002              ADDEQ    sp,sp,#8
001914  ecbd8b08          VPOPEQ   {d8-d11}
001918  e8bd81f0          POPEQ    {r4-r8,pc}
00191c  2c01              CMP      r4,#1                 ;438
00191e  d023              BEQ      |L1.6504|
001920  2c02              CMP      r4,#2                 ;438
001922  d055              BEQ      |L1.6608|
001924  2c03              CMP      r4,#3                 ;438
001926  d1ec              BNE      |L1.6402|
001928  f8d50eec          LDR      r0,[r5,#0xeec]        ;454  ; Metro
00192c  fbb0f0f8          UDIV     r0,r0,r8              ;454
001930  ee000a10          VMOV     s0,r0                 ;454
001934  eeb80a40          VCVT.F32.U32 s0,s0                 ;454
001938  f2af3330          ADR      r3,|L1.5644|
00193c  2200              MOVS     r2,#0                 ;454
00193e  2115              MOVS     r1,#0x15              ;454
001940  eef71a00          VMOV.F32 s3,#1.00000000        ;454
001944  eeb01a6a          VMOV.F32 s2,s21                ;454
001948  eef70a00          VMOV.F32 s1,#1.00000000        ;454
00194c  4610              MOV      r0,r2                 ;454
00194e  9600              STR      r6,[sp,#0]            ;454
001950  f7fffffe          BL       FillData
                  |L1.6484|
001954  a23c              ADR      r2,|L1.6728|
001956  a17e              ADR      r1,|L1.6992|
001958  2001              MOVS     r0,#1                 ;455
00195a  f7fffffe          BL       ChangeParam
00195e  2801              CMP      r0,#1                 ;456
001960  d069              BEQ      |L1.6710|
001962  2800              CMP      r0,#0                 ;459
001964  d1f6              BNE      |L1.6484|
001966  e7cc              B        |L1.6402|
                  |L1.6504|
001968  f8b50ee0          LDRH     r0,[r5,#0xee0]        ;440  ; Metro
00196c  f2466167          MOV      r1,#0x6667            ;440
001970  fb10f001          SMULBB   r0,r0,r1              ;440
001974  1481              ASRS     r1,r0,#18             ;440
001976  eba170e0          SUB      r0,r1,r0,ASR #31      ;440
00197a  ee000a10          VMOV     s0,r0                 ;440
00197e  eeb80ac0          VCVT.F32.S32 s0,s0                 ;440
001982  f6af03a4          ADR      r3,|L1.4320|
001986  2200              MOVS     r2,#0                 ;440
001988  2117              MOVS     r1,#0x17              ;440
00198a  eef71a00          VMOV.F32 s3,#1.00000000        ;440
00198e  eeb01a49          VMOV.F32 s2,s18                ;440
001992  eef00a69          VMOV.F32 s1,s19                ;440
001996  4610              MOV      r0,r2                 ;440
001998  9600              STR      r6,[sp,#0]            ;440
00199a  f7fffffe          BL       FillData
                  |L1.6558|
00199e  f2af4264          ADR      r2,|L1.5436|
0019a2  a170              ADR      r1,|L1.7012|
0019a4  2001              MOVS     r0,#1                 ;441
0019a6  f7fffffe          BL       ChangeParam
0019aa  2801              CMP      r0,#1                 ;442
0019ac  d002              BEQ      |L1.6580|
0019ae  2800              CMP      r0,#0                 ;445
0019b0  d1f5              BNE      |L1.6558|
0019b2  e7a6              B        |L1.6402|
                  |L1.6580|
0019b4  2000              MOVS     r0,#0                 ;443
0019b6  f7fffffe          BL       GetValue
0019ba  eef01a4b          VMOV.F32 s3,s22                ;443
0019be  ee401a08          VMLA.F32 s3,s0,s16             ;443
0019c2  eebd0ae1          VCVT.S32.F32 s0,s3                 ;443
0019c6  ee100a10          VMOV     r0,s0                 ;443
0019ca  f8a50ee0          STRH     r0,[r5,#0xee0]        ;443
0019ce  e7e6              B        |L1.6558|
                  |L1.6608|
0019d0  f8b50ee2          LDRH     r0,[r5,#0xee2]        ;447  ; Metro
0019d4  f2466167          MOV      r1,#0x6667            ;447
0019d8  fb10f001          SMULBB   r0,r0,r1              ;447
0019dc  1481              ASRS     r1,r0,#18             ;447
0019de  eba170e0          SUB      r0,r1,r0,ASR #31      ;447
0019e2  ee000a10          VMOV     s0,r0                 ;447
0019e6  eeb80ac0          VCVT.F32.S32 s0,s0                 ;447
0019ea  f6af130c          ADR      r3,|L1.4320|
0019ee  2200              MOVS     r2,#0                 ;447
0019f0  2117              MOVS     r1,#0x17              ;447
0019f2  eef71a00          VMOV.F32 s3,#1.00000000        ;447
0019f6  eeb01a4a          VMOV.F32 s2,s20                ;447
0019fa  eef00a69          VMOV.F32 s1,s19                ;447
0019fe  4610              MOV      r0,r2                 ;447
001a00  9600              STR      r6,[sp,#0]            ;447
001a02  f7fffffe          BL       FillData
                  |L1.6662|
001a06  a25c              ADR      r2,|L1.7032|
001a08  a160              ADR      r1,|L1.7052|
001a0a  2001              MOVS     r0,#1                 ;448
001a0c  f7fffffe          BL       ChangeParam
001a10  2801              CMP      r0,#1                 ;449
001a12  d002              BEQ      |L1.6682|
001a14  2800              CMP      r0,#0                 ;452
001a16  d1f6              BNE      |L1.6662|
001a18  e773              B        |L1.6402|
                  |L1.6682|
001a1a  2000              MOVS     r0,#0                 ;450
001a1c  f7fffffe          BL       GetValue
001a20  eef01a4b          VMOV.F32 s3,s22                ;450
001a24  ee401a08          VMLA.F32 s3,s0,s16             ;450
001a28  eebd0ae1          VCVT.S32.F32 s0,s3                 ;450
001a2c  ee100a10          VMOV     r0,s0                 ;450
001a30  f8a50ee2          STRH     r0,[r5,#0xee2]        ;450
001a34  e7e7              B        |L1.6662|
                  |L1.6710|
001a36  e0b3              B        |L1.7072|
                  |L1.6712|
001a38  20206449          DCB      "  dI:           "
001a3c  3a202020
001a40  20202020
001a44  20202020
                  |L1.6728|
001a48  2020743a          DCB      "  t:            "
001a4c  20202020
001a50  20202020
001a54  20202020
                  |L1.6744|
001a58  00                DCB      0
001a59  00                DCB      0
001a5a  00                DCB      0
001a5b  00                DCB      0
                  |L1.6748|
001a5c  3e3ec2db          DCB      ">>",194,219,209,206,202,206,215,192,209,210,".",210,206
001a60  d1cecace
001a64  d7c0d1d2
001a68  2ed2ce  
001a6b  ca00              DCB      202,0
001a6d  00                DCB      0
001a6e  00                DCB      0
001a6f  00                DCB      0
                  |L1.6768|
001a70  44d48000          DCFS     0x44d48000 ; 1700
                  |L1.6772|
001a74  00000000          DCFS     0x00000000 ; 0
                  |L1.6776|
001a78  3bc80000          DCFS     0x3bc80000 ; 0.006103515625
                  |L1.6780|
001a7c  42c80000          DCFS     0x42c80000 ; 100
                  |L1.6784|
001a80  43fa0000          DCFS     0x43fa0000 ; 500
                  |L1.6788|
001a84  c3fa0000          DCFS     0xc3fa0000 ; -500
                  |L1.6792|
001a88  3bb40000          DCFS     0x3bb40000 ; 0.0054931640625
                  |L1.6796|
001a8c  3d4ccccd          DCFS     0x3d4ccccd ; 0.05000000074505806
                  |L1.6800|
001a90  43330000          DCFS     0x43330000 ; 179
                  |L1.6804|
001a94  c3340000          DCFS     0xc3340000 ; -180
                  |L1.6808|
001a98  43360b61          DCFS     0x43360b61 ; 182.04444885253906
                  |L1.6812|
001a9c  2020a63a          DCB      "  ",166,":            ",0
001aa0  20202020
001aa4  20202020
001aa8  20202020
001aac  00      
001aad  00                DCB      0
001aae  00                DCB      0
001aaf  00                DCB      0
                  |L1.6832|
001ab0  3e3ed3d1          DCB      ">>",211,209,210,192,194,202,192," ",166,"      ",0
001ab4  d2c0c2ca
001ab8  c020a620
001abc  20202020
001ac0  2000    
001ac2  00                DCB      0
001ac3  00                DCB      0
                  |L1.6852|
001ac4  20c22ff1          DCB      " ",194,"/",241,0
001ac8  00      
001ac9  00                DCB      0
001aca  00                DCB      0
001acb  00                DCB      0
                  |L1.6860|
001acc  4323d70a          DCFS     0x4323d70a ; 163.83999633789062
                  |L1.6864|
001ad0  20205564          DCB      "  Udc:            Udc':         ",0
001ad4  633a2020
001ad8  20202020
001adc  20202020
001ae0  20205564
001ae4  63273a20
001ae8  20202020
001aec  20202020
001af0  00      
001af1  00                DCB      0
001af2  00                DCB      0
001af3  00                DCB      0
                  |L1.6900|
001af4  3e3ed3d1          DCB      ">>",211,209,210,192,194,202,192," Udc   ",0
001af8  d2c0c2ca
001afc  c0205564
001b00  63202020
001b04  00      
001b05  00                DCB      0
001b06  00                DCB      0
001b07  00                DCB      0
                  |L1.6920|
001b08  3d914b82          DCFS     0x3d914b82 ; 0.070944800972938538
                  |L1.6924|
001b0c  205beac2          DCB      " [",234,194,192,240,"]",0
001b10  c0f05d00
                  |L1.6932|
001b14  41618707          DCFS     0x41618707 ; 14.095465660095215
                  |L1.6936|
001b18  2020513a          DCB      "  Q:            ",0
001b1c  20202020
001b20  20202020
001b24  20202020
001b28  00      
001b29  00                DCB      0
001b2a  00                DCB      0
001b2b  00                DCB      0
                  |L1.6956|
001b2c  3e3ed3d1          DCB      ">>",211,209,210,192,194,202,192," Q     ",0
001b30  d2c0c2ca
001b34  c0205120
001b38  20202020
001b3c  00      
001b3d  00                DCB      0
001b3e  00                DCB      0
001b3f  00                DCB      0
                  |L1.6976|
001b40  44960000          DCFS     0x44960000 ; 1200
                  |L1.6980|
001b44  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.6984|
001b48  42820000          DCFS     0x42820000 ; 65
                  |L1.6988|
001b4c  44fa0000          DCFS     0x44fa0000 ; 2000
                  |L1.6992|
001b50  3e3ec4cb          DCB      ">>",196,203,200,210,197,203,220,205,". ",202,204,"1 ",0
001b54  c8d2c5cb
001b58  dccd2e20
001b5c  cacc3120
001b60  00      
001b61  00                DCB      0
001b62  00                DCB      0
001b63  00                DCB      0
                  |L1.7012|
001b64  3e3eccc8          DCB      ">>",204,200,205,200,204,192,203,220,205,". Udc",0
001b68  cdc8ccc0
001b6c  cbdccd2e
001b70  20556463
001b74  00      
001b75  00                DCB      0
001b76  00                DCB      0
001b77  00                DCB      0
                  |L1.7032|
001b78  20205573          DCB      "  Us:           ",0
001b7c  3a202020
001b80  20202020
001b84  20202020
001b88  00      
001b89  00                DCB      0
001b8a  00                DCB      0
001b8b  00                DCB      0
                  |L1.7052|
001b8c  3e3eccc8          DCB      ">>",204,200,205,200,204,192,203,220,205,". Us ",0
001b90  cdc8ccc0
001b94  cbdccd2e
001b98  20557320
001b9c  00      
001b9d  00                DCB      0
001b9e  00                DCB      0
001b9f  00                DCB      0
                  |L1.7072|
001ba0  2000              MOVS     r0,#0                 ;457
001ba2  f7fffffe          BL       GetValue
001ba6  ee200a28          VMUL.F32 s0,s0,s17             ;457
001baa  eebc0ac0          VCVT.U32.F32 s0,s0                 ;457
001bae  ee100a10          VMOV     r0,s0                 ;457
001bb2  f8c50eec          STR      r0,[r5,#0xeec]        ;457  ; Metro
001bb6  e6cd              B        |L1.6484|
;;;464    
                          ENDP

                  _SubMenuIntGen PROC
;;;465    
;;;466    void _SubMenuIntGen(void){
001bb8  e92d43f0          PUSH     {r4-r9,lr}
;;;467    int pos=1;
001bbc  2501              MOVS     r5,#1
001bbe  ed2d8b04          VPUSH    {d8-d9}               ;466
001bc2  b081              SUB      sp,sp,#4              ;466
;;;468    int res=0;
;;;469    	while (1) {
;;;470    		pos = SubItem(4, pos, STintgen, 0);
001bc4  f2400800          MOVW     r8,#:LOWER16: ||.data||
001bc8  f2c00800          MOVT     r8,#:UPPER16: ||.data||
;;;471    		switch (pos) {
;;;472    			case 0: {return;} break;
;;;473    			case 1: {	res = (SavePrms.EnaIntGen == 0) ? 1 : (SavePrms.EnaIntGen + 1);
;;;474    								res = SubItem(3, res, STintgenena, res);
;;;475    								if (res) {SavePrms.EnaIntGen = res - 1;}
;;;476    							} break;
;;;477    			case 2: {	FillData(0, 0x4000 / SavePrms.T1dPhase, 1, 1000, 1, 22, 0, " [мс]", TiFlag);
001bcc  ed1f8a23          VLDR     s16,|L1.6980|
001bd0  03af              LSLS     r7,r5,#14
001bd2  46a9              MOV      r9,r5                 ;467
001bd4  2600              MOVS     r6,#0
;;;478    								do {res = ChangeParam(1,">>ФИЛЬТРАЦИЯ    ","  Тф:           ");
;;;479    									switch (res) {
;;;480    										case 1: {SavePrms.T1dPhase = 0x4000 / (unsigned short)GetValue(0);} break;
;;;481    									} //switch
;;;482    								} while (res); //do
;;;483    							} break;
;;;484    			case 3: {	FillData(0, SavePrms.K1dPhase, 0, 32767, 1, 22, 0, "", 0);
001bd6  eddf8afe          VLDR     s17,|L1.8144|
001bda  ed1f9a5a          VLDR     s18,|L1.6772|
001bde  f2400400          MOVW     r4,#:LOWER16: Metro
001be2  f2c00400          MOVT     r4,#:UPPER16: Metro
                  |L1.7142|
001be6  2300              MOVS     r3,#0                 ;470
001be8  4629              MOV      r1,r5                 ;470
001bea  2004              MOVS     r0,#4                 ;470
001bec  f8d82038          LDR      r2,[r8,#0x38]         ;470  ; STintgen
001bf0  f7fffffe          BL       SubItem
001bf4  4605              MOV      r5,r0                 ;470
001bf6  2d05              CMP      r5,#5                 ;471
001bf8  d2f5              BCS      |L1.7142|
001bfa  e8dff005          TBB      [pc,r5]               ;471
001bfe  9103              DCB      0x91,0x03
001c00  15436a00          DCB      0x15,0x43,0x6a,0x00
001c04  f9b40e6c          LDRSH    r0,[r4,#0xe6c]        ;473  ; Metro
001c08  2800              CMP      r0,#0                 ;473
001c0a  bf0c              ITE      EQ                    ;473
001c0c  2101              MOVEQ    r1,#1                 ;473
001c0e  1c41              ADDNE    r1,r0,#1              ;473
001c10  460b              MOV      r3,r1                 ;474
001c12  2003              MOVS     r0,#3                 ;474
001c14  f8d8203c          LDR      r2,[r8,#0x3c]         ;474  ; STintgenena
001c18  f7fffffe          BL       SubItem
001c1c  2800              CMP      r0,#0                 ;475
001c1e  bf1c              ITT      NE                    ;475
001c20  1e40              SUBNE    r0,r0,#1              ;475
001c22  f8a40e6c          STRHNE   r0,[r4,#0xe6c]        ;475
001c26  e7de              B        |L1.7142|
001c28  f8d40e64          LDR      r0,[r4,#0xe64]        ;477  ; Metro
001c2c  fb97f0f0          SDIV     r0,r7,r0              ;477
001c30  ee000a10          VMOV     s0,r0                 ;477
001c34  eeb80ac0          VCVT.F32.S32 s0,s0                 ;477
001c38  f6af4324          ADR      r3,|L1.4120|
001c3c  2200              MOVS     r2,#0                 ;477
001c3e  2116              MOVS     r1,#0x16              ;477
001c40  eef71a00          VMOV.F32 s3,#1.00000000        ;477
001c44  eeb01a48          VMOV.F32 s2,s16                ;477
001c48  eef70a00          VMOV.F32 s1,#1.00000000        ;477
001c4c  4610              MOV      r0,r2                 ;477
001c4e  f8cd9000          STR      r9,[sp,#0]            ;477
001c52  f7fffffe          BL       FillData
                  |L1.7254|
001c56  a2df              ADR      r2,|L1.8148|
001c58  a1e3              ADR      r1,|L1.8168|
001c5a  2001              MOVS     r0,#1                 ;478
001c5c  f7fffffe          BL       ChangeParam
001c60  2801              CMP      r0,#1                 ;479
001c62  d002              BEQ      |L1.7274|
001c64  2800              CMP      r0,#0                 ;482
001c66  d1f6              BNE      |L1.7254|
001c68  e7bd              B        |L1.7142|
                  |L1.7274|
001c6a  2000              MOVS     r0,#0                 ;480
001c6c  f7fffffe          BL       GetValue
001c70  eebc0ac0          VCVT.U32.F32 s0,s0                 ;480
001c74  ee100a10          VMOV     r0,s0                 ;480
001c78  b280              UXTH     r0,r0                 ;480
001c7a  fbb7f0f0          UDIV     r0,r7,r0              ;480
001c7e  f8c40e64          STR      r0,[r4,#0xe64]        ;480  ; Metro
001c82  e7e8              B        |L1.7254|
001c84  9600              STR      r6,[sp,#0]
001c86  f8d40e60          LDR      r0,[r4,#0xe60]  ; Metro
001c8a  2200              MOVS     r2,#0
001c8c  ee000a10          VMOV     s0,r0
001c90  a3d4              ADR      r3,|L1.8164|
001c92  2116              MOVS     r1,#0x16
001c94  eeb80ac0          VCVT.F32.S32 s0,s0
001c98  eef71a00          VMOV.F32 s3,#1.00000000
001c9c  eeb01a68          VMOV.F32 s2,s17
001ca0  eef00a49          VMOV.F32 s1,s18
001ca4  4610              MOV      r0,r2
001ca6  f7fffffe          BL       FillData
                  |L1.7338|
;;;485    								do {res = ChangeParam(1,">>КОЭФФИЦИЕНТ K1","  K1:           ");
001caa  a2d4              ADR      r2,|L1.8188|
001cac  a1d8              ADR      r1,|L1.8208|
001cae  2001              MOVS     r0,#1
001cb0  f7fffffe          BL       ChangeParam
;;;486    									switch (res) {
001cb4  2801              CMP      r0,#1
001cb6  d002              BEQ      |L1.7358|
;;;487    										case 1: {SavePrms.K1dPhase  = GetValue(0);} break;
;;;488    									} //switch
;;;489    								} while (res); //do
001cb8  2800              CMP      r0,#0
001cba  d1f6              BNE      |L1.7338|
001cbc  e793              B        |L1.7142|
                  |L1.7358|
001cbe  2000              MOVS     r0,#0                 ;487
001cc0  f7fffffe          BL       GetValue
001cc4  eebd0ac0          VCVT.S32.F32 s0,s0                 ;487
001cc8  ee100a10          VMOV     r0,s0                 ;487
001ccc  f8c40e60          STR      r0,[r4,#0xe60]        ;487  ; Metro
001cd0  e7eb              B        |L1.7338|
;;;490    							} break;
;;;491    			case 4: {	FillData(0, SavePrms.K2dPhase, 0, 32767, 1, 22, 0, "", 0);
001cd2  9600              STR      r6,[sp,#0]
001cd4  f8d40e68          LDR      r0,[r4,#0xe68]  ; Metro
001cd8  2200              MOVS     r2,#0
001cda  ee000a10          VMOV     s0,r0
001cde  a3c1              ADR      r3,|L1.8164|
001ce0  2116              MOVS     r1,#0x16
001ce2  eeb80ac0          VCVT.F32.S32 s0,s0
001ce6  eef71a00          VMOV.F32 s3,#1.00000000
001cea  eeb01a68          VMOV.F32 s2,s17
001cee  eef00a49          VMOV.F32 s1,s18
001cf2  4610              MOV      r0,r2
001cf4  f7fffffe          BL       FillData
                  |L1.7416|
;;;492    								do {res = ChangeParam(1,">>КОЭФФИЦИЕНТ K2","  K2:           ");
001cf8  a2ca              ADR      r2,|L1.8228|
001cfa  a1cf              ADR      r1,|L1.8248|
001cfc  2001              MOVS     r0,#1
001cfe  f7fffffe          BL       ChangeParam
;;;493    									switch (res) {
001d02  2801              CMP      r0,#1
001d04  d002              BEQ      |L1.7436|
;;;494    										case 1: {SavePrms.K2dPhase  = GetValue(0);} break;
;;;495    									} //switch
;;;496    								} while (res); //do
001d06  2800              CMP      r0,#0
001d08  d1f6              BNE      |L1.7416|
001d0a  e76c              B        |L1.7142|
                  |L1.7436|
001d0c  2000              MOVS     r0,#0                 ;494
001d0e  f7fffffe          BL       GetValue
001d12  eebd0ac0          VCVT.S32.F32 s0,s0                 ;494
001d16  ee100a10          VMOV     r0,s0                 ;494
001d1a  f8c40e68          STR      r0,[r4,#0xe68]        ;494  ; Metro
001d1e  e7eb              B        |L1.7416|
;;;497    							} break;
;;;498    			
;;;499    		} //switch
;;;500    	}//while	
;;;501    } //_SubMenuIntGen(void)
001d20  b001              ADD      sp,sp,#4
001d22  ecbd8b04          VPOP     {d8-d9}
001d26  e8bd83f0          POP      {r4-r9,pc}
;;;502    
                          ENDP

                  _SubMenuFiltrs PROC
;;;503    void _SubMenuFiltrs(void){
001d2a  e92d41f0          PUSH     {r4-r8,lr}
;;;504    int pos=1;
001d2e  2701              MOVS     r7,#1
001d30  ed2d8b02          VPUSH    {d8}                  ;503
001d34  b082              SUB      sp,sp,#8              ;503
;;;505    int res=0;
;;;506    	while (1) {
;;;507    		pos = SubItem(8, pos, STfiltrs, 0);
001d36  f2400800          MOVW     r8,#:LOWER16: ||.data||
001d3a  f2c00800          MOVT     r8,#:UPPER16: ||.data||
001d3e  463e              MOV      r6,r7                 ;504
;;;508    		switch (pos) {
;;;509    			case 0: {return;} break;
;;;510    			case 1: {	FillData(0, (0x3E80000 / MainCycle) / SavePrms.ParamFiltUdc, 1, 100, 1, 23, 0, " [мс]", TiFlag);
001d40  ed1f8ab2          VLDR     s16,|L1.6780|
001d44  f2400400          MOVW     r4,#:LOWER16: Metro
001d48  f2c00400          MOVT     r4,#:UPPER16: Metro
001d4c  03fd              LSLS     r5,r7,#15
                  |L1.7502|
001d4e  2300              MOVS     r3,#0                 ;507
001d50  4639              MOV      r1,r7                 ;507
001d52  2008              MOVS     r0,#8                 ;507
001d54  f8d82040          LDR      r2,[r8,#0x40]         ;507  ; STfiltrs
001d58  f7fffffe          BL       SubItem
001d5c  4607              MOV      r7,r0                 ;507
001d5e  2f09              CMP      r7,#9                 ;508
001d60  d2f5              BCS      |L1.7502|
001d62  e8dff007          TBB      [pc,r7]               ;508
001d66  fd05              DCB      0xfd,0x05
001d68  325f8cb9          DCB      0x32,0x5f,0x8c,0xb9
001d6c  e6fcfb00          DCB      0xe6,0xfc,0xfb,0x00
001d70  f8b40eae          LDRH     r0,[r4,#0xeae]  ; Metro
001d74  fbb5f0f0          UDIV     r0,r5,r0
001d78  ee000a10          VMOV     s0,r0
001d7c  eeb80a40          VCVT.F32.U32 s0,s0
001d80  f6af536c          ADR      r3,|L1.4120|
001d84  2200              MOVS     r2,#0
001d86  2117              MOVS     r1,#0x17
001d88  eef71a00          VMOV.F32 s3,#1.00000000
001d8c  eeb01a48          VMOV.F32 s2,s16
001d90  eef70a00          VMOV.F32 s1,#1.00000000
001d94  4610              MOV      r0,r2
001d96  9600              STR      r6,[sp,#0]
001d98  f7fffffe          BL       FillData
                  |L1.7580|
;;;511    								do {res = ChangeParam(1,">>>ФИЛЬТРАЦИЯ DC","   Тф:          ");
001d9c  a2ab              ADR      r2,|L1.8268|
001d9e  a1b0              ADR      r1,|L1.8288|
001da0  2001              MOVS     r0,#1
001da2  f7fffffe          BL       ChangeParam
;;;512    									switch (res) {
001da6  2801              CMP      r0,#1
001da8  d002              BEQ      |L1.7600|
;;;513    										case 1: {SavePrms.ParamFiltUdc = (0x3E80000 / MainCycle) / (unsigned short)GetValue(0);} break;
;;;514    									} //switch
;;;515    								} while (res); //do
001daa  2800              CMP      r0,#0
001dac  d1f6              BNE      |L1.7580|
001dae  e7ce              B        |L1.7502|
                  |L1.7600|
001db0  2000              MOVS     r0,#0                 ;513
001db2  f7fffffe          BL       GetValue
001db6  eebc0ac0          VCVT.U32.F32 s0,s0                 ;513
001dba  ee100a10          VMOV     r0,s0                 ;513
001dbe  b280              UXTH     r0,r0                 ;513
001dc0  fbb5f0f0          UDIV     r0,r5,r0              ;513
001dc4  f8a40eae          STRH     r0,[r4,#0xeae]        ;513
001dc8  e7e8              B        |L1.7580|
;;;516    							} break;
;;;517    			case 2: {	FillData(0, (0x3E80000 / MainCycle) / SavePrms.ParamFiltI1, 1, 100, 1, 23, 0, " [мс]", TiFlag);
001dca  f8b40ea2          LDRH     r0,[r4,#0xea2]  ; Metro
001dce  fbb5f0f0          UDIV     r0,r5,r0
001dd2  ee000a10          VMOV     s0,r0
001dd6  eeb80a40          VCVT.F32.U32 s0,s0
001dda  f6af53c4          ADR      r3,|L1.4120|
001dde  2200              MOVS     r2,#0
001de0  2117              MOVS     r1,#0x17
001de2  eef71a00          VMOV.F32 s3,#1.00000000
001de6  eeb01a48          VMOV.F32 s2,s16
001dea  eef70a00          VMOV.F32 s1,#1.00000000
001dee  4610              MOV      r0,r2
001df0  9600              STR      r6,[sp,#0]
001df2  f7fffffe          BL       FillData
                  |L1.7670|
;;;518    								do {res = ChangeParam(1,">>>ФИЛЬТРАЦИЯ I1","   Тф:          ");
001df6  a295              ADR      r2,|L1.8268|
001df8  a19e              ADR      r1,|L1.8308|
001dfa  2001              MOVS     r0,#1
001dfc  f7fffffe          BL       ChangeParam
;;;519    									switch (res) {
001e00  2801              CMP      r0,#1
001e02  d002              BEQ      |L1.7690|
;;;520    										case 1: {SavePrms.ParamFiltI1 = (0x3E80000 / MainCycle) / (unsigned short)GetValue(0);} break;
;;;521    									} //switch
;;;522    								} while (res); //do
001e04  2800              CMP      r0,#0
001e06  d1f6              BNE      |L1.7670|
001e08  e7a1              B        |L1.7502|
                  |L1.7690|
001e0a  2000              MOVS     r0,#0                 ;520
001e0c  f7fffffe          BL       GetValue
001e10  eebc0ac0          VCVT.U32.F32 s0,s0                 ;520
001e14  ee100a10          VMOV     r0,s0                 ;520
001e18  b280              UXTH     r0,r0                 ;520
001e1a  fbb5f0f0          UDIV     r0,r5,r0              ;520
001e1e  f8a40ea2          STRH     r0,[r4,#0xea2]        ;520
001e22  e7e8              B        |L1.7670|
;;;523    							} break;
;;;524    			case 3: {	FillData(0, (0x3E80000 / MainCycle) / SavePrms.ParamFiltP1, 1, 100, 1, 23, 0, " [мс]", TiFlag);
001e24  f8b40ea6          LDRH     r0,[r4,#0xea6]  ; Metro
001e28  fbb5f0f0          UDIV     r0,r5,r0
001e2c  ee000a10          VMOV     s0,r0
001e30  eeb80a40          VCVT.F32.U32 s0,s0
001e34  f6af6320          ADR      r3,|L1.4120|
001e38  2200              MOVS     r2,#0
001e3a  2117              MOVS     r1,#0x17
001e3c  eef71a00          VMOV.F32 s3,#1.00000000
001e40  eeb01a48          VMOV.F32 s2,s16
001e44  eef70a00          VMOV.F32 s1,#1.00000000
001e48  4610              MOV      r0,r2
001e4a  9600              STR      r6,[sp,#0]
001e4c  f7fffffe          BL       FillData
                  |L1.7760|
;;;525    								do {res = ChangeParam(1,">>>ФИЛЬТРАЦИЯ P1","   Тф:          ");
001e50  a27e              ADR      r2,|L1.8268|
001e52  a18d              ADR      r1,|L1.8328|
001e54  2001              MOVS     r0,#1
001e56  f7fffffe          BL       ChangeParam
;;;526    									switch (res) {
001e5a  2801              CMP      r0,#1
001e5c  d002              BEQ      |L1.7780|
;;;527    										case 1: {SavePrms.ParamFiltP1 = (0x3E80000 / MainCycle) / (unsigned short)GetValue(0);} break;
;;;528    									} //switch
;;;529    								} while (res); //do
001e5e  2800              CMP      r0,#0
001e60  d1f6              BNE      |L1.7760|
001e62  e774              B        |L1.7502|
                  |L1.7780|
001e64  2000              MOVS     r0,#0                 ;527
001e66  f7fffffe          BL       GetValue
001e6a  eebc0ac0          VCVT.U32.F32 s0,s0                 ;527
001e6e  ee100a10          VMOV     r0,s0                 ;527
001e72  b280              UXTH     r0,r0                 ;527
001e74  fbb5f0f0          UDIV     r0,r5,r0              ;527
001e78  f8a40ea6          STRH     r0,[r4,#0xea6]        ;527
001e7c  e7e8              B        |L1.7760|
;;;530    							} break;
;;;531    			case 4: {	FillData(0, (0x3E80000 / MainCycle) / SavePrms.ParamFiltQ1, 1, 100, 1, 23, 0, " [мс]", TiFlag);
001e7e  f8b40eaa          LDRH     r0,[r4,#0xeaa]  ; Metro
001e82  fbb5f0f0          UDIV     r0,r5,r0
001e86  ee000a10          VMOV     s0,r0
001e8a  eeb80a40          VCVT.F32.U32 s0,s0
001e8e  f6af6378          ADR      r3,|L1.4120|
001e92  2200              MOVS     r2,#0
001e94  2117              MOVS     r1,#0x17
001e96  eef71a00          VMOV.F32 s3,#1.00000000
001e9a  eeb01a48          VMOV.F32 s2,s16
001e9e  eef70a00          VMOV.F32 s1,#1.00000000
001ea2  4610              MOV      r0,r2
001ea4  9600              STR      r6,[sp,#0]
001ea6  f7fffffe          BL       FillData
                  |L1.7850|
;;;532    								do {res = ChangeParam(1,">>>ФИЛЬТРАЦИЯ Q1","   Тф:          ");
001eaa  a268              ADR      r2,|L1.8268|
001eac  a17b              ADR      r1,|L1.8348|
001eae  2001              MOVS     r0,#1
001eb0  f7fffffe          BL       ChangeParam
;;;533    									switch (res) {
001eb4  2801              CMP      r0,#1
001eb6  d002              BEQ      |L1.7870|
;;;534    										case 1: {SavePrms.ParamFiltQ1 = (0x3E80000 / MainCycle) / (unsigned short)GetValue(0);} break;
;;;535    									} //switch
;;;536    								} while (res); //do
001eb8  2800              CMP      r0,#0
001eba  d1f6              BNE      |L1.7850|
001ebc  e747              B        |L1.7502|
                  |L1.7870|
001ebe  2000              MOVS     r0,#0                 ;534
001ec0  f7fffffe          BL       GetValue
001ec4  eebc0ac0          VCVT.U32.F32 s0,s0                 ;534
001ec8  ee100a10          VMOV     r0,s0                 ;534
001ecc  b280              UXTH     r0,r0                 ;534
001ece  fbb5f0f0          UDIV     r0,r5,r0              ;534
001ed2  f8a40eaa          STRH     r0,[r4,#0xeaa]        ;534
001ed6  e7e8              B        |L1.7850|
;;;537    							} break;
;;;538    			case 5: {	FillData(0, (0x3E80000 / MainCycle) / SavePrms.ParamFiltI2, 1, 100, 1, 23, 0, " [мс]", TiFlag);
001ed8  f8b40ea4          LDRH     r0,[r4,#0xea4]  ; Metro
001edc  fbb5f0f0          UDIV     r0,r5,r0
001ee0  ee000a10          VMOV     s0,r0
001ee4  eeb80a40          VCVT.F32.U32 s0,s0
001ee8  f6af63d4          ADR      r3,|L1.4120|
001eec  2200              MOVS     r2,#0
001eee  2117              MOVS     r1,#0x17
001ef0  eef71a00          VMOV.F32 s3,#1.00000000
001ef4  eeb01a48          VMOV.F32 s2,s16
001ef8  eef70a00          VMOV.F32 s1,#1.00000000
001efc  4610              MOV      r0,r2
001efe  9600              STR      r6,[sp,#0]
001f00  f7fffffe          BL       FillData
                  |L1.7940|
;;;539    								do {res = ChangeParam(1,">>>ФИЛЬТРАЦИЯ I2","   Тф:          ");
001f04  a251              ADR      r2,|L1.8268|
001f06  a16a              ADR      r1,|L1.8368|
001f08  2001              MOVS     r0,#1
001f0a  f7fffffe          BL       ChangeParam
;;;540    									switch (res) {
001f0e  2801              CMP      r0,#1
001f10  d002              BEQ      |L1.7960|
;;;541    										case 1: {SavePrms.ParamFiltI2 = (0x3E80000 / MainCycle) / (unsigned short)GetValue(0);} break;
;;;542    									} //switch
;;;543    								} while (res); //do
001f12  2800              CMP      r0,#0
001f14  d1f6              BNE      |L1.7940|
001f16  e71a              B        |L1.7502|
                  |L1.7960|
001f18  2000              MOVS     r0,#0                 ;541
001f1a  f7fffffe          BL       GetValue
001f1e  eebc0ac0          VCVT.U32.F32 s0,s0                 ;541
001f22  ee100a10          VMOV     r0,s0                 ;541
001f26  b280              UXTH     r0,r0                 ;541
001f28  fbb5f0f0          UDIV     r0,r5,r0              ;541
001f2c  f8a40ea4          STRH     r0,[r4,#0xea4]        ;541
001f30  e7e8              B        |L1.7940|
;;;544    							} break;
;;;545    			case 6: {	FillData(0, (0x3E80000 / MainCycle) / SavePrms.ParamFiltP2, 1, 100, 1, 23, 0, " [мс]", TiFlag);
001f32  f8b40ea8          LDRH     r0,[r4,#0xea8]  ; Metro
001f36  fbb5f0f0          UDIV     r0,r5,r0
001f3a  ee000a10          VMOV     s0,r0
001f3e  eeb80a40          VCVT.F32.U32 s0,s0
001f42  f6af732c          ADR      r3,|L1.4120|
001f46  2200              MOVS     r2,#0
001f48  2117              MOVS     r1,#0x17
001f4a  eef71a00          VMOV.F32 s3,#1.00000000
001f4e  eeb01a48          VMOV.F32 s2,s16
001f52  eef70a00          VMOV.F32 s1,#1.00000000
001f56  4610              MOV      r0,r2
001f58  9600              STR      r6,[sp,#0]
001f5a  e002              B        |L1.8034|
001f5c  e0d8              B        |L1.8464|
001f5e  e019              B        |L1.8084|
001f60  e103              B        |L1.8554|
                  |L1.8034|
001f62  f7fffffe          BL       FillData
                  |L1.8038|
;;;546    								do {res = ChangeParam(1,">>>ФИЛЬТРАЦИЯ P2","   Тф:          ");
001f66  a239              ADR      r2,|L1.8268|
001f68  a156              ADR      r1,|L1.8388|
001f6a  2001              MOVS     r0,#1
001f6c  f7fffffe          BL       ChangeParam
;;;547    									switch (res) {
001f70  2801              CMP      r0,#1
001f72  d002              BEQ      |L1.8058|
;;;548    										case 1: {SavePrms.ParamFiltP2 = (0x3E80000 / MainCycle) / (unsigned short)GetValue(0);} break;
;;;549    									} //switch
;;;550    								} while (res); //do
001f74  2800              CMP      r0,#0
001f76  d1f6              BNE      |L1.8038|
001f78  e6e9              B        |L1.7502|
                  |L1.8058|
001f7a  2000              MOVS     r0,#0                 ;548
001f7c  f7fffffe          BL       GetValue
001f80  eebc0ac0          VCVT.U32.F32 s0,s0                 ;548
001f84  ee100a10          VMOV     r0,s0                 ;548
001f88  b280              UXTH     r0,r0                 ;548
001f8a  fbb5f0f0          UDIV     r0,r5,r0              ;548
001f8e  f8a40ea8          STRH     r0,[r4,#0xea8]        ;548
001f92  e7e8              B        |L1.8038|
                  |L1.8084|
;;;551    							} break;
;;;552    			case 7: {	FillData(0, (0x3E80000 / MainCycle) / SavePrms.ParamFiltQ2, 1, 100, 1, 23, 0, " [мс]", TiFlag);
001f94  f8b40eac          LDRH     r0,[r4,#0xeac]  ; Metro
001f98  fbb5f0f0          UDIV     r0,r5,r0
001f9c  ee000a10          VMOV     s0,r0
001fa0  eeb80a40          VCVT.F32.U32 s0,s0
001fa4  f6af7390          ADR      r3,|L1.4120|
001fa8  2200              MOVS     r2,#0
001faa  2117              MOVS     r1,#0x17
001fac  eef71a00          VMOV.F32 s3,#1.00000000
001fb0  eeb01a48          VMOV.F32 s2,s16
001fb4  eef70a00          VMOV.F32 s1,#1.00000000
001fb8  4610              MOV      r0,r2
001fba  9600              STR      r6,[sp,#0]
001fbc  f7fffffe          BL       FillData
                  |L1.8128|
;;;553    								do {res = ChangeParam(1,">>>ФИЛЬТРАЦИЯ Q2","   Тф:          ");
001fc0  a222              ADR      r2,|L1.8268|
001fc2  a145              ADR      r1,|L1.8408|
001fc4  2001              MOVS     r0,#1
001fc6  f7fffffe          BL       ChangeParam
;;;554    									switch (res) {
001fca  2801              CMP      r0,#1
001fcc  e08e              B        |L1.8428|
001fce  0000              DCW      0x0000
                  |L1.8144|
001fd0  46fffe00          DCFS     0x46fffe00 ; 32767
                  |L1.8148|
001fd4  2020d2f4          DCB      "  ",210,244,":           "
001fd8  3a202020
001fdc  20202020
001fe0  20202020
                  |L1.8164|
001fe4  00                DCB      0
001fe5  00                DCB      0
001fe6  00                DCB      0
001fe7  00                DCB      0
                  |L1.8168|
001fe8  3e3ed4c8          DCB      ">>",212,200,203,220,210,208,192,214,200,223,"    ",0
001fec  cbdcd2d0
001ff0  c0d6c8df
001ff4  20202020
001ff8  00      
001ff9  00                DCB      0
001ffa  00                DCB      0
001ffb  00                DCB      0
                  |L1.8188|
001ffc  20204b31          DCB      "  K1:           ",0
002000  3a202020
002004  20202020
002008  20202020
00200c  00      
00200d  00                DCB      0
00200e  00                DCB      0
00200f  00                DCB      0
                  |L1.8208|
002010  3e3ecace          DCB      ">>",202,206,221,212,212,200,214,200,197,205,210," K1",0
002014  ddd4d4c8
002018  d6c8c5cd
00201c  d2204b31
002020  00      
002021  00                DCB      0
002022  00                DCB      0
002023  00                DCB      0
                  |L1.8228|
002024  20204b32          DCB      "  K2:           ",0
002028  3a202020
00202c  20202020
002030  20202020
002034  00      
002035  00                DCB      0
002036  00                DCB      0
002037  00                DCB      0
                  |L1.8248|
002038  3e3ecace          DCB      ">>",202,206,221,212,212,200,214,200,197,205,210," K2",0
00203c  ddd4d4c8
002040  d6c8c5cd
002044  d2204b32
002048  00      
002049  00                DCB      0
00204a  00                DCB      0
00204b  00                DCB      0
                  |L1.8268|
00204c  202020d2          DCB      "   ",210,244,":          ",0
002050  f43a2020
002054  20202020
002058  20202020
00205c  00      
00205d  00                DCB      0
00205e  00                DCB      0
00205f  00                DCB      0
                  |L1.8288|
002060  3e3e3ed4          DCB      ">>>",212,200,203,220,210,208,192,214,200,223," DC",0
002064  c8cbdcd2
002068  d0c0d6c8
00206c  df204443
002070  00      
002071  00                DCB      0
002072  00                DCB      0
002073  00                DCB      0
                  |L1.8308|
002074  3e3e3ed4          DCB      ">>>",212,200,203,220,210,208,192,214,200,223," I1",0
002078  c8cbdcd2
00207c  d0c0d6c8
002080  df204931
002084  00      
002085  00                DCB      0
002086  00                DCB      0
002087  00                DCB      0
                  |L1.8328|
002088  3e3e3ed4          DCB      ">>>",212,200,203,220,210,208,192,214,200,223," P1",0
00208c  c8cbdcd2
002090  d0c0d6c8
002094  df205031
002098  00      
002099  00                DCB      0
00209a  00                DCB      0
00209b  00                DCB      0
                  |L1.8348|
00209c  3e3e3ed4          DCB      ">>>",212,200,203,220,210,208,192,214,200,223," Q1",0
0020a0  c8cbdcd2
0020a4  d0c0d6c8
0020a8  df205131
0020ac  00      
0020ad  00                DCB      0
0020ae  00                DCB      0
0020af  00                DCB      0
                  |L1.8368|
0020b0  3e3e3ed4          DCB      ">>>",212,200,203,220,210,208,192,214,200,223," I2",0
0020b4  c8cbdcd2
0020b8  d0c0d6c8
0020bc  df204932
0020c0  00      
0020c1  00                DCB      0
0020c2  00                DCB      0
0020c3  00                DCB      0
                  |L1.8388|
0020c4  3e3e3ed4          DCB      ">>>",212,200,203,220,210,208,192,214,200,223," P2",0
0020c8  c8cbdcd2
0020cc  d0c0d6c8
0020d0  df205032
0020d4  00      
0020d5  00                DCB      0
0020d6  00                DCB      0
0020d7  00                DCB      0
                  |L1.8408|
0020d8  3e3e3ed4          DCB      ">>>",212,200,203,220,210,208,192,214,200,223," Q2",0
0020dc  c8cbdcd2
0020e0  d0c0d6c8
0020e4  df205132
0020e8  00      
0020e9  00                DCB      0
0020ea  00                DCB      0
0020eb  00                DCB      0
                  |L1.8428|
0020ec  d003              BEQ      |L1.8438|
;;;555    										case 1: {SavePrms.ParamFiltQ2 = (0x3E80000 / MainCycle) / (unsigned short)GetValue(0);} break;
;;;556    									} //switch
;;;557    								} while (res); //do
0020ee  2800              CMP      r0,#0
0020f0  f47faf66          BNE      |L1.8128|
0020f4  e62b              B        |L1.7502|
                  |L1.8438|
0020f6  2000              MOVS     r0,#0                 ;555
0020f8  f7fffffe          BL       GetValue
0020fc  eebc0ac0          VCVT.U32.F32 s0,s0                 ;555
002100  ee100a10          VMOV     r0,s0                 ;555
002104  b280              UXTH     r0,r0                 ;555
002106  fbb5f0f0          UDIV     r0,r5,r0              ;555
00210a  f8a40eac          STRH     r0,[r4,#0xeac]        ;555
00210e  e757              B        |L1.8128|
                  |L1.8464|
;;;558    							} break;
;;;559    			case 8: {	FillData(0, (0x3E80000 / MainCycle) / SavePrms.ParamFiltSU, 1, 100, 1, 23, 0, " [мс]", TiFlag);
002110  f8b40ea0          LDRH     r0,[r4,#0xea0]  ; Metro
002114  2200              MOVS     r2,#0
002116  fbb5f0f0          UDIV     r0,r5,r0
00211a  ee000a10          VMOV     s0,r0
00211e  a3fa              ADR      r3,|L1.9480|
002120  2117              MOVS     r1,#0x17
002122  eeb80a40          VCVT.F32.U32 s0,s0
002126  eef71a00          VMOV.F32 s3,#1.00000000
00212a  eeb01a48          VMOV.F32 s2,s16
00212e  eef70a00          VMOV.F32 s1,#1.00000000
002132  4610              MOV      r0,r2
002134  9600              STR      r6,[sp,#0]
002136  f7fffffe          BL       FillData
                  |L1.8506|
;;;560    								do {res = ChangeParam(1,">>>ФИЛЬТРАЦИЯ Us","   Тф:          ");
00213a  f2af02f0          ADR      r2,|L1.8268|
00213e  a1f4              ADR      r1,|L1.9488|
002140  2001              MOVS     r0,#1
002142  f7fffffe          BL       ChangeParam
;;;561    									switch (res) {
002146  2801              CMP      r0,#1
002148  d002              BEQ      |L1.8528|
;;;562    										case 1: {SavePrms.ParamFiltSU = (0x3E80000 / MainCycle) / (unsigned short)GetValue(0);} break;
;;;563    									} //switch
;;;564    								} while (res); //do
00214a  2800              CMP      r0,#0
00214c  d1f5              BNE      |L1.8506|
00214e  e5fe              B        |L1.7502|
                  |L1.8528|
002150  2000              MOVS     r0,#0                 ;562
002152  f7fffffe          BL       GetValue
002156  eebc0ac0          VCVT.U32.F32 s0,s0                 ;562
00215a  ee100a10          VMOV     r0,s0                 ;562
00215e  b280              UXTH     r0,r0                 ;562
002160  fbb5f0f0          UDIV     r0,r5,r0              ;562
002164  f8a40ea0          STRH     r0,[r4,#0xea0]        ;562
002168  e7e7              B        |L1.8506|
                  |L1.8554|
;;;565    							} break;		
;;;566    		} //switch
;;;567    	}//while	
;;;568    } //SubMenuFiltrs()
00216a  b002              ADD      sp,sp,#8
00216c  ecbd8b02          VPOP     {d8}
002170  e8bd81f0          POP      {r4-r8,pc}
;;;569    
                          ENDP

                  _SubMenuVent PROC
;;;570    void _SubMenuVent(void){
002174  b5f0              PUSH     {r4-r7,lr}
;;;571    int pos=1;
002176  2401              MOVS     r4,#1
002178  ed2d8b02          VPUSH    {d8}                  ;570
00217c  b081              SUB      sp,sp,#4              ;570
;;;572    int res=0;
;;;573    	while (1) {
;;;574    		pos = SubItem(2, pos, STvent, 0);
00217e  f2400700          MOVW     r7,#:LOWER16: ||.data||
002182  f2c00700          MOVT     r7,#:UPPER16: ||.data||
002186  2600              MOVS     r6,#0
;;;575    		switch (pos) {
;;;576    			case 0: {return;} break;
;;;577    			case 1: {	FillData(0, SavePrms.RefTemprEnaVent / 10, 10, 100, 1, 22, 0, " [ °C]", 0); 
002188  eddf8ae6          VLDR     s17,|L1.9508|
00218c  f2400500          MOVW     r5,#:LOWER16: Metro
002190  f2c00500          MOVT     r5,#:UPPER16: Metro
002194  eeb28a04          VMOV.F32 s16,#10.00000000
                  |L1.8600|
002198  2300              MOVS     r3,#0                 ;574
00219a  4621              MOV      r1,r4                 ;574
00219c  2002              MOVS     r0,#2                 ;574
00219e  6c7a              LDR      r2,[r7,#0x44]         ;574  ; STvent
0021a0  f7fffffe          BL       SubItem
0021a4  0004              MOVS     r4,r0                 ;574
;;;578    								do {res=ChangeParam(1,">>>ВКЛ.ВЕНТИЛЯТ.","   Т:           ");
;;;579    									switch (res) {
;;;580    										case 1: {SavePrms.RefTemprEnaVent = (GetValue(0) * 10.0f);} break;
;;;581    									} //switch
;;;582    								} while (res); //do
;;;583    							} break;	
;;;584    			case 2: {	FillData(0, SavePrms.RefTemprDisVent / 10, 10, 100, 1, 22, 0, " [ °C]", 0); 
;;;585    								do {res=ChangeParam(1,">>>ОТКЛ.ВЕНТИЛЯТ","   T:            ");
;;;586    									switch (res) {
;;;587    										case 1: {SavePrms.RefTemprDisVent = (GetValue(0) * 10.0f);} break;
;;;588    									} //switch
;;;589    								} while (res); //do
;;;590    							} break;			
;;;591    		} //switch
;;;592    	}//while	
;;;593    } //void _SubMenuVent(void)
0021a6  bf02              ITTT     EQ
0021a8  b001              ADDEQ    sp,sp,#4
0021aa  ecbd8b02          VPOPEQ   {d8}
0021ae  bdf0              POPEQ    {r4-r7,pc}
0021b0  2c01              CMP      r4,#1                 ;575
0021b2  d023              BEQ      |L1.8700|
0021b4  2c02              CMP      r4,#2                 ;575
0021b6  d1ef              BNE      |L1.8600|
0021b8  f8b50ede          LDRH     r0,[r5,#0xede]        ;584  ; Metro
0021bc  f64c41cd          MOV      r1,#0xcccd            ;584
0021c0  4348              MULS     r0,r1,r0              ;584
0021c2  0cc0              LSRS     r0,r0,#19             ;584
0021c4  ee000a10          VMOV     s0,r0                 ;584
0021c8  eeb80a40          VCVT.F32.U32 s0,s0                 ;584
0021cc  f6af431c          ADR      r3,|L1.5556|
0021d0  2200              MOVS     r2,#0                 ;584
0021d2  2116              MOVS     r1,#0x16              ;584
0021d4  eef71a00          VMOV.F32 s3,#1.00000000        ;584
0021d8  eeb01a68          VMOV.F32 s2,s17                ;584
0021dc  eef20a04          VMOV.F32 s1,#10.00000000       ;584
0021e0  4610              MOV      r0,r2                 ;584
0021e2  9600              STR      r6,[sp,#0]            ;584
0021e4  f7fffffe          BL       FillData
                  |L1.8680|
0021e8  a2cf              ADR      r2,|L1.9512|
0021ea  a1d4              ADR      r1,|L1.9532|
0021ec  2001              MOVS     r0,#1                 ;585
0021ee  f7fffffe          BL       ChangeParam
0021f2  2801              CMP      r0,#1                 ;586
0021f4  d030              BEQ      |L1.8792|
0021f6  2800              CMP      r0,#0                 ;589
0021f8  d1f6              BNE      |L1.8680|
0021fa  e7cd              B        |L1.8600|
                  |L1.8700|
0021fc  f8b50edc          LDRH     r0,[r5,#0xedc]        ;577  ; Metro
002200  f64c41cd          MOV      r1,#0xcccd            ;577
002204  4348              MULS     r0,r1,r0              ;577
002206  0cc0              LSRS     r0,r0,#19             ;577
002208  ee000a10          VMOV     s0,r0                 ;577
00220c  eeb80a40          VCVT.F32.U32 s0,s0                 ;577
002210  f6af4360          ADR      r3,|L1.5556|
002214  2200              MOVS     r2,#0                 ;577
002216  2116              MOVS     r1,#0x16              ;577
002218  eef71a00          VMOV.F32 s3,#1.00000000        ;577
00221c  eeb01a68          VMOV.F32 s2,s17                ;577
002220  eef20a04          VMOV.F32 s1,#10.00000000       ;577
002224  4610              MOV      r0,r2                 ;577
002226  9600              STR      r6,[sp,#0]            ;577
002228  f7fffffe          BL       FillData
                  |L1.8748|
00222c  a2c8              ADR      r2,|L1.9552|
00222e  a1cd              ADR      r1,|L1.9572|
002230  2001              MOVS     r0,#1                 ;578
002232  f7fffffe          BL       ChangeParam
002236  2801              CMP      r0,#1                 ;579
002238  d002              BEQ      |L1.8768|
00223a  2800              CMP      r0,#0                 ;582
00223c  d1f6              BNE      |L1.8748|
00223e  e7ab              B        |L1.8600|
                  |L1.8768|
002240  2000              MOVS     r0,#0                 ;580
002242  f7fffffe          BL       GetValue
002246  ee200a08          VMUL.F32 s0,s0,s16             ;580
00224a  eebc0ac0          VCVT.U32.F32 s0,s0                 ;580
00224e  ee100a10          VMOV     r0,s0                 ;580
002252  f8a50edc          STRH     r0,[r5,#0xedc]        ;580
002256  e7e9              B        |L1.8748|
                  |L1.8792|
002258  2000              MOVS     r0,#0                 ;587
00225a  f7fffffe          BL       GetValue
00225e  ee200a08          VMUL.F32 s0,s0,s16             ;587
002262  eebc0ac0          VCVT.U32.F32 s0,s0                 ;587
002266  ee100a10          VMOV     r0,s0                 ;587
00226a  f8a50ede          STRH     r0,[r5,#0xede]        ;587
00226e  e7bb              B        |L1.8680|
;;;594    
                          ENDP

                  _SubMenuStandBy PROC
;;;595    void _SubMenuStandBy(void){
002270  e92d41f0          PUSH     {r4-r8,lr}
;;;596    int pos=1;
002274  2401              MOVS     r4,#1
002276  ed2d8b06          VPUSH    {d8-d10}              ;595
00227a  b082              SUB      sp,sp,#8              ;595
;;;597    int res=0;
;;;598    	while (1) {
;;;599    		pos = SubItem(2, pos, STstandby, 0);
00227c  f2400700          MOVW     r7,#:LOWER16: ||.data||
002280  f2c00700          MOVT     r7,#:UPPER16: ||.data||
;;;600    		switch (pos) {
;;;601    			case 0: {return;} break;
;;;602    			case 1: {	FillData(0, SavePrms.RefStandByEnaT / 4000 , 10, 600, 1, 21, 0, " [с]", 0);  
002284  f44f687a          MOV      r8,#0xfa0
002288  eddf9abb          VLDR     s19,|L1.9592|
00228c  2600              MOVS     r6,#0
;;;603    								do {res=ChangeParam(1,">>ВКЛЮЧЕНИЕ     ","  t:            ");
;;;604    									switch (res) {
;;;605    										case 1: {SavePrms.RefStandByEnaT = (GetValue(0) * 4000);} break;
;;;606    									} //switch
;;;607    								} while (res); //do
;;;608    							} break;
;;;609    			case 2: {	FillData(0, SavePrms.RefStandByIvdI / 10, 1, 100, 1, 24, 0," [A]", 0);
00228e  ed9faaa5          VLDR     s20,|L1.9508|
;;;610    								FillData(1, SavePrms.RefStandByIvdT / 4000.0f, 0.1f, 1.0f, 0.1f, 21, 1," [c]", 0); 
002292  ed9f9aba          VLDR     s18,|L1.9596|
002296  eef28a04          VMOV.F32 s17,#10.00000000      ;602
00229a  f2400500          MOVW     r5,#:LOWER16: Metro
00229e  f2c00500          MOVT     r5,#:UPPER16: Metro
0022a2  ed9f8ab7          VLDR     s16,|L1.9600|
;;;611    								do {res=ChangeParam(2,">>ОТКЛЮЧЕНИЕ    ","  Ivd:            t:            ");
;;;612    									switch (res) {
;;;613    										case 1: {SavePrms.RefStandByIvdI = (GetValue(0) * 10.0f);} break;
;;;614    										case 2: {SavePrms.RefStandByIvdT = (GetValue(1) * 4000.0f + 0.5f);} break;
0022a6  eef6aa00          VMOV.F32 s21,#0.50000000
                  |L1.8874|
0022aa  2300              MOVS     r3,#0                 ;599
0022ac  4621              MOV      r1,r4                 ;599
0022ae  2002              MOVS     r0,#2                 ;599
0022b0  69ba              LDR      r2,[r7,#0x18]         ;599  ; STstandby
0022b2  f7fffffe          BL       SubItem
0022b6  0004              MOVS     r4,r0                 ;599
;;;615    									} //switch
;;;616    								} while (res); //do
;;;617    							} break;
;;;618    		} //switch
;;;619    	}//while	
;;;620    }
0022b8  bf02              ITTT     EQ
0022ba  b002              ADDEQ    sp,sp,#8
0022bc  ecbd8b06          VPOPEQ   {d8-d10}
0022c0  e8bd81f0          POPEQ    {r4-r8,pc}
0022c4  2c01              CMP      r4,#1                 ;600
0022c6  d03d              BEQ      |L1.9028|
0022c8  2c02              CMP      r4,#2                 ;600
0022ca  d1ee              BNE      |L1.8874|
0022cc  f8b50e70          LDRH     r0,[r5,#0xe70]        ;609  ; Metro
0022d0  f2466167          MOV      r1,#0x6667            ;609
0022d4  fb10f001          SMULBB   r0,r0,r1              ;609
0022d8  1481              ASRS     r1,r0,#18             ;609
0022da  eba170e0          SUB      r0,r1,r0,ASR #31      ;609
0022de  ee000a10          VMOV     s0,r0                 ;609
0022e2  2200              MOVS     r2,#0                 ;609
0022e4  a3a7              ADR      r3,|L1.9604|
0022e6  eeb80ac0          VCVT.F32.S32 s0,s0                 ;609
0022ea  2118              MOVS     r1,#0x18              ;609
0022ec  eef71a00          VMOV.F32 s3,#1.00000000        ;609
0022f0  eeb01a4a          VMOV.F32 s2,s20                ;609
0022f4  eef70a00          VMOV.F32 s1,#1.00000000        ;609
0022f8  4610              MOV      r0,r2                 ;609
0022fa  9600              STR      r6,[sp,#0]            ;609
0022fc  f7fffffe          BL       FillData
002300  f8b50e72          LDRH     r0,[r5,#0xe72]        ;610  ; Metro
002304  ee000a10          VMOV     s0,r0                 ;610
002308  eef80a40          VCVT.F32.U32 s1,s0                 ;610
00230c  ee800a88          VDIV.F32 s0,s1,s16             ;610
002310  f6af5308          ADR      r3,|L1.5644|
002314  eef00a49          VMOV.F32 s1,s18                ;610
002318  2201              MOVS     r2,#1                 ;610
00231a  2115              MOVS     r1,#0x15              ;610
00231c  eef01a60          VMOV.F32 s3,s1                 ;610
002320  eeb71a00          VMOV.F32 s2,#1.00000000        ;610
002324  4610              MOV      r0,r2                 ;610
002326  9600              STR      r6,[sp,#0]            ;610
002328  f7fffffe          BL       FillData
                  |L1.9004|
00232c  a297              ADR      r2,|L1.9612|
00232e  a1a0              ADR      r1,|L1.9648|
002330  2002              MOVS     r0,#2                 ;611
002332  f7fffffe          BL       ChangeParam
002336  2801              CMP      r0,#1                 ;612
002338  d030              BEQ      |L1.9116|
00233a  2802              CMP      r0,#2                 ;612
00233c  d03a              BEQ      |L1.9140|
00233e  2800              CMP      r0,#0                 ;616
002340  d1f4              BNE      |L1.9004|
002342  e7b2              B        |L1.8874|
                  |L1.9028|
002344  f8d50e74          LDR      r0,[r5,#0xe74]        ;602  ; Metro
002348  fb90f0f8          SDIV     r0,r0,r8              ;602
00234c  ee000a10          VMOV     s0,r0                 ;602
002350  eeb80ac0          VCVT.F32.S32 s0,s0                 ;602
002354  f6af536c          ADR      r3,|L1.5612|
002358  2200              MOVS     r2,#0                 ;602
00235a  2115              MOVS     r1,#0x15              ;602
00235c  eef71a00          VMOV.F32 s3,#1.00000000        ;602
002360  eeb01a69          VMOV.F32 s2,s19                ;602
002364  eef20a04          VMOV.F32 s1,#10.00000000       ;602
002368  4610              MOV      r0,r2                 ;602
00236a  9600              STR      r6,[sp,#0]            ;602
00236c  f7fffffe          BL       FillData
                  |L1.9072|
002370  a28a              ADR      r2,|L1.9628|
002372  a194              ADR      r1,|L1.9668|
002374  2001              MOVS     r0,#1                 ;603
002376  f7fffffe          BL       ChangeParam
00237a  2801              CMP      r0,#1                 ;604
00237c  d002              BEQ      |L1.9092|
00237e  2800              CMP      r0,#0                 ;607
002380  d1f6              BNE      |L1.9072|
002382  e792              B        |L1.8874|
                  |L1.9092|
002384  2000              MOVS     r0,#0                 ;605
002386  f7fffffe          BL       GetValue
00238a  ee200a08          VMUL.F32 s0,s0,s16             ;605
00238e  eebd0ac0          VCVT.S32.F32 s0,s0                 ;605
002392  ee100a10          VMOV     r0,s0                 ;605
002396  f8c50e74          STR      r0,[r5,#0xe74]        ;605  ; Metro
00239a  e7e9              B        |L1.9072|
                  |L1.9116|
00239c  2000              MOVS     r0,#0                 ;613
00239e  f7fffffe          BL       GetValue
0023a2  ee200a28          VMUL.F32 s0,s0,s17             ;613
0023a6  eebd0ac0          VCVT.S32.F32 s0,s0                 ;613
0023aa  ee100a10          VMOV     r0,s0                 ;613
0023ae  f8a50e70          STRH     r0,[r5,#0xe70]        ;613
0023b2  e7bb              B        |L1.9004|
                  |L1.9140|
0023b4  2001              MOVS     r0,#1                 ;614
0023b6  f7fffffe          BL       GetValue
0023ba  eef00a6a          VMOV.F32 s1,s21                ;614
0023be  ee400a08          VMLA.F32 s1,s0,s16             ;614
0023c2  eebc0ae0          VCVT.U32.F32 s0,s1                 ;614
0023c6  ee100a10          VMOV     r0,s0                 ;614
0023ca  f8a50e72          STRH     r0,[r5,#0xe72]        ;614
0023ce  e7ad              B        |L1.9004|
;;;621    
                          ENDP

                  _SubMenuBridge PROC
;;;622    void _SubMenuBridge(void){
0023d0  e92d41f0          PUSH     {r4-r8,lr}
;;;623    int pos=1;
0023d4  2501              MOVS     r5,#1
0023d6  ed2d8b0e          VPUSH    {d8-d14}              ;622
0023da  b082              SUB      sp,sp,#8              ;622
;;;624    int res=0;
;;;625    	while (1) {
;;;626    		pos = SubItem(6, pos, STbridge, 0);
;;;627    		switch (pos) {
;;;628    			case 0: {return;} break;
;;;629    			case 1: {	res = (SavePrms.EnaAuto2ndBridge == 0) ? 1 : 2;
;;;630    								res = SubItem(2, res, STAutoBridge, res);
;;;631    								if (res) {SavePrms.EnaAuto2ndBridge = res - 1;}
;;;632    							} break;
;;;633    			case 2: {	FillData(0, SavePrms.RefPEna2ndBridge * 0.070944801f, 0, 1000, 1, 21, 0, " [кВт]", 0);
0023dc  ed9faa7e          VLDR     s20,|L1.9688|
0023e0  eddfba7e          VLDR     s23,|L1.9692|
0023e4  ed9fca7e          VLDR     s24,|L1.9696|
;;;634    								FillData(1, SavePrms.RefTEna2ndBridge / 4000.0f, 0.1f, 60.0f, 0.1f, 21, 1," [c]", 0); 
0023e8  eddf9a64          VLDR     s19,|L1.9596|
0023ec  eddfca7d          VLDR     s25,|L1.9700|
;;;635    								do {res=ChangeParam(2,">>УСТАВКА ВКЛ.  ","  P:              t:            ");
;;;636    									switch (res) {
;;;637    										case 1: {SavePrms.RefPEna2ndBridge = (GetValue(0) * 14.095465572f + 0.5f);} break;
0023f0  eddf8a7d          VLDR     s17,|L1.9704|
0023f4  ed9f9a62          VLDR     s18,|L1.9600|
0023f8  462e              MOV      r6,r5                 ;623
;;;638    										case 2: {SavePrms.RefTEna2ndBridge = (GetValue(1) * 4000.0f + 0.5f);} break;
;;;639    									} //switch
;;;640    								} while (res); //do
;;;641    							} break;
;;;642    			case 3: {	FillData(0, SavePrms.RefPDis2ndBridge * 0.070944801f, 0, 1000, 1, 21, 0, " [кВт]", 0);
;;;643    								FillData(1, SavePrms.RefTDis2ndBridge / 4000.0f, 0.1f, 60.0f, 0.1f, 21, 1," [c]", 0); 
;;;644    								do {res=ChangeParam(2,">>УСТАВКА ОТКЛ. ","  P:              t:            ");
;;;645    									switch (res) {
;;;646    										case 1: {SavePrms.RefPDis2ndBridge = (GetValue(0) * 14.095465572f + 0.5f);} break;
;;;647    										case 2: {SavePrms.RefTDis2ndBridge = (GetValue(1) * 4000.0f + 0.5f);} break;
;;;648    									} //switch
;;;649    								} while (res); //do
;;;650    							} break;
;;;651    			case 4: {	res = (SavePrms.DefMode == 0x07) ? 2 : 1;
0023fa  2707              MOVS     r7,#7
;;;652    								res = SubItem(2, res, STManBridge, res);
;;;653    								if (res == 1) {SavePrms.DefMode = 1;}	else if (res == 2) {SavePrms.DefMode = 7;}
;;;654    							} break;
;;;655    
;;;656      		case 5: {	FillData(0, SavePrms.BridgeUgolCorrect * 0.0054931640625f, -90, 90, 0.05f, 21, 2, "", 0);  
0023fc  ed9fba7b          VLDR     s22,|L1.9708|
002400  ed9fda7b          VLDR     s26,|L1.9712|
002404  eddfda7b          VLDR     s27,|L1.9716|
002408  ed9fea7b          VLDR     s28,|L1.9720|
00240c  eeb68a00          VMOV.F32 s16,#0.50000000       ;637
;;;657    								do {res=ChangeParam(1,">>КОРРЕКЦИЯ УГЛА ","  ¦:            ");
;;;658    									switch (res) {
;;;659    										case 1: {SavePrms.BridgeUgolCorrect  = (int)(GetValue(0) * 182.044444444f + 0.5f) & 0xFFFF;} break;
002410  eddfaa7a          VLDR     s21,|L1.9724|
002414  f2400400          MOVW     r4,#:LOWER16: Metro
002418  f2c00400          MOVT     r4,#:UPPER16: Metro
                  |L1.9244|
00241c  2300              MOVS     r3,#0                 ;626
00241e  f2400800          MOVW     r8,#:LOWER16: ||.data||;626
002422  f2c00800          MOVT     r8,#:UPPER16: ||.data||;626
002426  4629              MOV      r1,r5                 ;626
002428  2006              MOVS     r0,#6                 ;626
00242a  f8d8201c          LDR      r2,[r8,#0x1c]         ;626  ; STbridge
00242e  f7fffffe          BL       SubItem
002432  4605              MOV      r5,r0                 ;626
002434  2d07              CMP      r5,#7                 ;627
002436  d2f1              BCS      |L1.9244|
002438  e8dff005          TBB      [pc,r5]               ;627
00243c  64041663          DCB      0x64,0x04,0x16,0x63
002440  62616000          DCB      0x62,0x61,0x60,0x00
002444  f8b40e7c          LDRH     r0,[r4,#0xe7c]        ;629  ; Metro
002448  2800              CMP      r0,#0                 ;629
00244a  bf0c              ITE      EQ                    ;629
00244c  2101              MOVEQ    r1,#1                 ;629
00244e  2102              MOVNE    r1,#2                 ;629
002450  460b              MOV      r3,r1                 ;630
002452  2002              MOVS     r0,#2                 ;630
002454  f8d82020          LDR      r2,[r8,#0x20]         ;630  ; STAutoBridge
002458  f7fffffe          BL       SubItem
00245c  2800              CMP      r0,#0                 ;631
00245e  bf1c              ITT      NE                    ;631
002460  1e40              SUBNE    r0,r0,#1              ;631
002462  f8a40e7c          STRHNE   r0,[r4,#0xe7c]        ;631
002466  e7d9              B        |L1.9244|
002468  f04f0800          MOV      r8,#0                 ;633
00246c  f8cd8000          STR      r8,[sp,#0]            ;633
002470  f9b40e78          LDRSH    r0,[r4,#0xe78]        ;633  ; Metro
002474  a362              ADR      r3,|L1.9728|
002476  ee000a10          VMOV     s0,r0                 ;633
00247a  4642              MOV      r2,r8                 ;633
00247c  2115              MOVS     r1,#0x15              ;633
00247e  eeb80ac0          VCVT.F32.S32 s0,s0                 ;633
002482  eef71a00          VMOV.F32 s3,#1.00000000        ;633
002486  eeb01a6b          VMOV.F32 s2,s23                ;633
00248a  eef00a4c          VMOV.F32 s1,s24                ;633
00248e  ee200a0a          VMUL.F32 s0,s0,s20             ;633
002492  4640              MOV      r0,r8                 ;633
002494  f7fffffe          BL       FillData
002498  f8d40f98          LDR      r0,[r4,#0xf98]        ;634  ; Metro
00249c  ee000a10          VMOV     s0,r0                 ;634
0024a0  eef80ac0          VCVT.F32.S32 s1,s0                 ;634
0024a4  ee800a89          VDIV.F32 s0,s1,s18             ;634
0024a8  f6af63a0          ADR      r3,|L1.5644|
0024ac  eef00a69          VMOV.F32 s1,s19                ;634
0024b0  2201              MOVS     r2,#1                 ;634
0024b2  2115              MOVS     r1,#0x15              ;634
0024b4  eef01a60          VMOV.F32 s3,s1                 ;634
0024b8  eeb01a6c          VMOV.F32 s2,s25                ;634
0024bc  4610              MOV      r0,r2                 ;634
0024be  f8cd8000          STR      r8,[sp,#0]            ;634
0024c2  f7fffffe          BL       FillData
                  |L1.9414|
0024c6  a250              ADR      r2,|L1.9736|
0024c8  a158              ADR      r1,|L1.9772|
0024ca  2002              MOVS     r0,#2                 ;635
0024cc  f7fffffe          BL       ChangeParam
0024d0  2801              CMP      r0,#1                 ;636
0024d2  d004              BEQ      |L1.9438|
0024d4  2802              CMP      r0,#2                 ;636
0024d6  d010              BEQ      |L1.9466|
0024d8  2800              CMP      r0,#0                 ;640
0024da  d1f4              BNE      |L1.9414|
0024dc  e79e              B        |L1.9244|
                  |L1.9438|
0024de  2000              MOVS     r0,#0                 ;637
0024e0  f7fffffe          BL       GetValue
0024e4  eef00a48          VMOV.F32 s1,s16                ;637
0024e8  ee400a28          VMLA.F32 s1,s0,s17             ;637
0024ec  eebd0ae0          VCVT.S32.F32 s0,s1                 ;637
0024f0  ee100a10          VMOV     r0,s0                 ;637
0024f4  f8a40e78          STRH     r0,[r4,#0xe78]        ;637
0024f8  e7e5              B        |L1.9414|
                  |L1.9466|
0024fa  e0a1              B        |L1.9792|
0024fc  e14c              B        |L1.10136|
0024fe  e11c              B        |L1.10042|
002500  e104              B        |L1.9996|
002502  e0ab              B        |L1.9820|
002504  e15a              B        |L1.10172|
002506  0000              DCW      0x0000
                  |L1.9480|
002508  205becf1          DCB      " [",236,241,"]",0
00250c  5d00    
00250e  00                DCB      0
00250f  00                DCB      0
                  |L1.9488|
002510  3e3e3ed4          DCB      ">>>",212,200,203,220,210,208,192,214,200,223," Us",0
002514  c8cbdcd2
002518  d0c0d6c8
00251c  df205573
002520  00      
002521  00                DCB      0
002522  00                DCB      0
002523  00                DCB      0
                  |L1.9508|
002524  42c80000          DCFS     0x42c80000 ; 100
                  |L1.9512|
002528  20202054          DCB      "   T:            ",0
00252c  3a202020
002530  20202020
002534  20202020
002538  2000    
00253a  00                DCB      0
00253b  00                DCB      0
                  |L1.9532|
00253c  3e3e3ece          DCB      ">>>",206,210,202,203,".",194,197,205,210,200,203,223,210
002540  d2cacb2e
002544  c2c5cdd2
002548  c8cbdfd2
00254c  00                DCB      0
00254d  00                DCB      0
00254e  00                DCB      0
00254f  00                DCB      0
                  |L1.9552|
002550  202020d2          DCB      "   ",210,":           ",0
002554  3a202020
002558  20202020
00255c  20202020
002560  00      
002561  00                DCB      0
002562  00                DCB      0
002563  00                DCB      0
                  |L1.9572|
002564  3e3e3ec2          DCB      ">>>",194,202,203,".",194,197,205,210,200,203,223,210,"."
002568  cacb2ec2
00256c  c5cdd2c8
002570  cbdfd22e
002574  00                DCB      0
002575  00                DCB      0
002576  00                DCB      0
002577  00                DCB      0
                  |L1.9592|
002578  44160000          DCFS     0x44160000 ; 600
                  |L1.9596|
00257c  3dcccccd          DCFS     0x3dcccccd ; 0.10000000149011612
                  |L1.9600|
002580  457a0000          DCFS     0x457a0000 ; 4000
                  |L1.9604|
002584  205b415d          DCB      " [A]",0
002588  00      
002589  00                DCB      0
00258a  00                DCB      0
00258b  00                DCB      0
                  |L1.9612|
00258c  20204976          DCB      "  Ivd:          "
002590  643a2020
002594  20202020
002598  20202020
                  |L1.9628|
00259c  2020743a          DCB      "  t:            ",0
0025a0  20202020
0025a4  20202020
0025a8  20202020
0025ac  00      
0025ad  00                DCB      0
0025ae  00                DCB      0
0025af  00                DCB      0
                  |L1.9648|
0025b0  3e3eced2          DCB      ">>",206,210,202,203,222,215,197,205,200,197,"    ",0
0025b4  cacbded7
0025b8  c5cdc8c5
0025bc  20202020
0025c0  00      
0025c1  00                DCB      0
0025c2  00                DCB      0
0025c3  00                DCB      0
                  |L1.9668|
0025c4  3e3ec2ca          DCB      ">>",194,202,203,222,215,197,205,200,197,"     ",0
0025c8  cbded7c5
0025cc  cdc8c520
0025d0  20202020
0025d4  00      
0025d5  00                DCB      0
0025d6  00                DCB      0
0025d7  00                DCB      0
                  |L1.9688|
0025d8  3d914b82          DCFS     0x3d914b82 ; 0.070944800972938538
                  |L1.9692|
0025dc  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.9696|
0025e0  00000000          DCFS     0x00000000 ; 0
                  |L1.9700|
0025e4  42700000          DCFS     0x42700000 ; 60
                  |L1.9704|
0025e8  41618707          DCFS     0x41618707 ; 14.095465660095215
                  |L1.9708|
0025ec  3bb40000          DCFS     0x3bb40000 ; 0.0054931640625
                  |L1.9712|
0025f0  3d4ccccd          DCFS     0x3d4ccccd ; 0.05000000074505806
                  |L1.9716|
0025f4  42b40000          DCFS     0x42b40000 ; 90
                  |L1.9720|
0025f8  c2b40000          DCFS     0xc2b40000 ; -90
                  |L1.9724|
0025fc  43360b61          DCFS     0x43360b61 ; 182.04444885253906
                  |L1.9728|
002600  205beac2          DCB      " [",234,194,242,"]",0
002604  f25d00  
002607  00                DCB      0
                  |L1.9736|
002608  2020503a          DCB      "  P:              t:            ",0
00260c  20202020
002610  20202020
002614  20202020
002618  2020743a
00261c  20202020
002620  20202020
002624  20202020
002628  00      
002629  00                DCB      0
00262a  00                DCB      0
00262b  00                DCB      0
                  |L1.9772|
00262c  3e3ed3d1          DCB      ">>",211,209,210,192,194,202,192," ",194,202,203,".  ",0
002630  d2c0c2ca
002634  c020c2ca
002638  cb2e2020
00263c  00      
00263d  00                DCB      0
00263e  00                DCB      0
00263f  00                DCB      0
                  |L1.9792|
002640  2001              MOVS     r0,#1                 ;638
002642  f7fffffe          BL       GetValue
002646  eef00a48          VMOV.F32 s1,s16                ;638
00264a  ee400a09          VMLA.F32 s1,s0,s18             ;638
00264e  eebd0ae0          VCVT.S32.F32 s0,s1                 ;638
002652  ee100a10          VMOV     r0,s0                 ;638
002656  f8c40f98          STR      r0,[r4,#0xf98]        ;638  ; Metro
00265a  e734              B        |L1.9414|
                  |L1.9820|
00265c  f04f0800          MOV      r8,#0                 ;642
002660  f8cd8000          STR      r8,[sp,#0]            ;642
002664  f9b40e7a          LDRSH    r0,[r4,#0xe7a]        ;642  ; Metro
002668  ee000a10          VMOV     s0,r0                 ;642
00266c  eeb80ac0          VCVT.F32.S32 s0,s0                 ;642
002670  ee200a0a          VMUL.F32 s0,s0,s20             ;642
002674  f2af0378          ADR      r3,|L1.9728|
002678  4642              MOV      r2,r8                 ;642
00267a  2115              MOVS     r1,#0x15              ;642
00267c  eef71a00          VMOV.F32 s3,#1.00000000        ;642
002680  eeb01a6b          VMOV.F32 s2,s23                ;642
002684  eef00a4c          VMOV.F32 s1,s24                ;642
002688  4640              MOV      r0,r8                 ;642
00268a  f7fffffe          BL       FillData
00268e  f8d40f9c          LDR      r0,[r4,#0xf9c]        ;643  ; Metro
002692  2201              MOVS     r2,#1                 ;643
002694  ee000a10          VMOV     s0,r0                 ;643
002698  a3f8              ADR      r3,|L1.10876|
00269a  2115              MOVS     r1,#0x15              ;643
00269c  eef80ac0          VCVT.F32.S32 s1,s0                 ;643
0026a0  eeb01a6c          VMOV.F32 s2,s25                ;643
0026a4  4610              MOV      r0,r2                 ;643
0026a6  f8cd8000          STR      r8,[sp,#0]            ;643
0026aa  ee800a89          VDIV.F32 s0,s1,s18             ;643
0026ae  eef00a69          VMOV.F32 s1,s19                ;643
0026b2  eef01a60          VMOV.F32 s3,s1                 ;643
0026b6  f7fffffe          BL       FillData
                  |L1.9914|
0026ba  f2af02b4          ADR      r2,|L1.9736|
0026be  a1f1              ADR      r1,|L1.10884|
0026c0  2002              MOVS     r0,#2                 ;644
0026c2  f7fffffe          BL       ChangeParam
0026c6  2801              CMP      r0,#1                 ;645
0026c8  d004              BEQ      |L1.9940|
0026ca  2802              CMP      r0,#2                 ;645
0026cc  d010              BEQ      |L1.9968|
0026ce  2800              CMP      r0,#0                 ;649
0026d0  d1f3              BNE      |L1.9914|
0026d2  e6a3              B        |L1.9244|
                  |L1.9940|
0026d4  2000              MOVS     r0,#0                 ;646
0026d6  f7fffffe          BL       GetValue
0026da  eef00a48          VMOV.F32 s1,s16                ;646
0026de  ee400a28          VMLA.F32 s1,s0,s17             ;646
0026e2  eebd0ae0          VCVT.S32.F32 s0,s1                 ;646
0026e6  ee100a10          VMOV     r0,s0                 ;646
0026ea  f8a40e7a          STRH     r0,[r4,#0xe7a]        ;646
0026ee  e7e4              B        |L1.9914|
                  |L1.9968|
0026f0  2001              MOVS     r0,#1                 ;647
0026f2  f7fffffe          BL       GetValue
0026f6  eef00a48          VMOV.F32 s1,s16                ;647
0026fa  ee400a09          VMLA.F32 s1,s0,s18             ;647
0026fe  eebd0ae0          VCVT.S32.F32 s0,s1                 ;647
002702  ee100a10          VMOV     r0,s0                 ;647
002706  f8c40f9c          STR      r0,[r4,#0xf9c]        ;647  ; Metro
00270a  e7d6              B        |L1.9914|
                  |L1.9996|
00270c  f8b40e7e          LDRH     r0,[r4,#0xe7e]        ;651  ; Metro
002710  2807              CMP      r0,#7                 ;651
002712  bf0c              ITE      EQ                    ;651
002714  2102              MOVEQ    r1,#2                 ;651
002716  2101              MOVNE    r1,#1                 ;651
002718  460b              MOV      r3,r1                 ;652
00271a  2002              MOVS     r0,#2                 ;652
00271c  f8d82024          LDR      r2,[r8,#0x24]         ;652  ; STManBridge
002720  f7fffffe          BL       SubItem
002724  2801              CMP      r0,#1                 ;653
002726  bf08              IT       EQ                    ;653
002728  f8a46e7e          STRHEQ   r6,[r4,#0xe7e]        ;653
00272c  f43fae76          BEQ      |L1.9244|
002730  2802              CMP      r0,#2                 ;653
002732  bf08              IT       EQ                    ;653
002734  f8a47e7e          STRHEQ   r7,[r4,#0xe7e]        ;653
002738  e670              B        |L1.9244|
                  |L1.10042|
00273a  2000              MOVS     r0,#0                 ;656
00273c  9000              STR      r0,[sp,#0]            ;656
00273e  f9b40fa0          LDRSH    r0,[r4,#0xfa0]        ;656  ; Metro
002742  a3cf              ADR      r3,|L1.10880|
002744  ee000a10          VMOV     s0,r0                 ;656
002748  2202              MOVS     r2,#2                 ;656
00274a  2115              MOVS     r1,#0x15              ;656
00274c  eeb80ac0          VCVT.F32.S32 s0,s0                 ;656
002750  eef01a4d          VMOV.F32 s3,s26                ;656
002754  eeb01a6d          VMOV.F32 s2,s27                ;656
002758  eef00a4e          VMOV.F32 s1,s28                ;656
00275c  ee200a0b          VMUL.F32 s0,s0,s22             ;656
002760  2000              MOVS     r0,#0                 ;656
002762  f7fffffe          BL       FillData
                  |L1.10086|
002766  f6af42cc          ADR      r2,|L1.6812|
00276a  a1cb              ADR      r1,|L1.10904|
00276c  2001              MOVS     r0,#1                 ;657
00276e  f7fffffe          BL       ChangeParam
002772  2801              CMP      r0,#1                 ;658
002774  d002              BEQ      |L1.10108|
;;;660    									} //switch
;;;661    								} while (res); //do
002776  2800              CMP      r0,#0
002778  d1f5              BNE      |L1.10086|
00277a  e64f              B        |L1.9244|
                  |L1.10108|
00277c  2000              MOVS     r0,#0                 ;659
00277e  f7fffffe          BL       GetValue
002782  eef00a48          VMOV.F32 s1,s16                ;659
002786  ee400a2a          VMLA.F32 s1,s0,s21             ;659
00278a  eebd0ae0          VCVT.S32.F32 s0,s1                 ;659
00278e  ee100a10          VMOV     r0,s0                 ;659
002792  f8a40fa0          STRH     r0,[r4,#0xfa0]        ;659
002796  e7e6              B        |L1.10086|
                  |L1.10136|
;;;662    							} break;
;;;663    			case 6: {	res = (SavePrms.EnaRegParamsCorrect == 0) ? 1 : 2;
002798  f8b40fa2          LDRH     r0,[r4,#0xfa2]  ; Metro
00279c  2800              CMP      r0,#0
00279e  bf0c              ITE      EQ
0027a0  2101              MOVEQ    r1,#1
0027a2  2102              MOVNE    r1,#2
;;;664    								res = SubItem(2, res, STparamcorr, res);
0027a4  460b              MOV      r3,r1
0027a6  2002              MOVS     r0,#2
0027a8  f8d8202c          LDR      r2,[r8,#0x2c]  ; STparamcorr
0027ac  f7fffffe          BL       SubItem
;;;665    								if (res) {SavePrms.EnaRegParamsCorrect = res - 1;}
0027b0  2800              CMP      r0,#0
0027b2  bf1c              ITT      NE
0027b4  1e40              SUBNE    r0,r0,#1
0027b6  f8a40fa2          STRHNE   r0,[r4,#0xfa2]
0027ba  e62f              B        |L1.9244|
                  |L1.10172|
;;;666    							} break;			
;;;667    							
;;;668    		} //switch
;;;669    	}//while	
;;;670    }
0027bc  b002              ADD      sp,sp,#8
0027be  ecbd8b0e          VPOP     {d8-d14}
0027c2  e8bd81f0          POP      {r4-r8,pc}
;;;671    void _SubMenuDiodeMode(void){
                          ENDP

                  _SubMenuDiodeMode PROC
0027c6  b5f0              PUSH     {r4-r7,lr}
;;;672    int pos=1;
0027c8  2401              MOVS     r4,#1
0027ca  ed2d8b0a          VPUSH    {d8-d12}              ;671
0027ce  b081              SUB      sp,sp,#4              ;671
;;;673    int res=0;
;;;674    	while (1) {
;;;675    		pos = SubItem(3, pos, STDiodeMode, 0);
0027d0  f2400700          MOVW     r7,#:LOWER16: ||.data||
0027d4  f2c00700          MOVT     r7,#:UPPER16: ||.data||
0027d8  2600              MOVS     r6,#0
;;;676    		switch (pos) {
;;;677    			case 0: {return;} break;
;;;678    			case 1: {	res = (SavePrms.EnaDiodeMode == 0) ? 1 : 2;
;;;679    								res = SubItem(2, res, STEnaDiodeMode, res);
;;;680    								if (res) {SavePrms.EnaDiodeMode = res - 1;}
;;;681    							} break;
;;;682    			case 2: {	FillData(0, SavePrms.RefPEnaDiodeMode * 0.070944801f, 0, 1000, 1, 21, 0, " [кВт]", 0);
0027da  ed5faa81          VLDR     s21,|L1.9688|
0027de  ed5fba81          VLDR     s23,|L1.9692|
0027e2  ed1fba81          VLDR     s22,|L1.9696|
;;;683    								FillData(1, SavePrms.RefTEnaDiodeMode / 4000.0f, 0.1f, 60.0f, 0.1f, 21, 1," [c]", 0); 
0027e6  ed1faa9b          VLDR     s20,|L1.9596|
0027ea  ed1fca82          VLDR     s24,|L1.9700|
;;;684    								do {res=ChangeParam(2,">>УСТАВКА ВКЛ.  ","  P:              t:            ");
;;;685    									switch (res) {
;;;686    										case 1: {SavePrms.RefPEnaDiodeMode = (GetValue(0) * 14.095465572f + 0.5f);} break;
;;;687    										case 2: {SavePrms.RefTEnaDiodeMode = (GetValue(1) * 4000.0f + 0.5f);} break;
;;;688    									} //switch
;;;689    								} while (res); //do
;;;690    							} break;
;;;691    			case 3: {	FillData(0, SavePrms.RefPDisDiodeMode * 0.070944801f, 0, 1000, 1, 21, 0, " [кВт]", 0);
;;;692    								FillData(1, SavePrms.RefTDisDiodeMode / 4000.0f, 0.1f, 60.0f, 0.1f, 21, 1," [c]", 0);
;;;693    								FillData(2, SavePrms.RefUdcDisDiodeMode/10, 0, 700, 1, 23, 0," [B]", 0);
0027ee  eddfcaaf          VLDR     s25,|L1.10924|
0027f2  ed1f9a83          VLDR     s18,|L1.9704|
0027f6  ed5f8a9e          VLDR     s17,|L1.9600|
0027fa  f2400500          MOVW     r5,#:LOWER16: Metro
0027fe  f2c00500          MOVT     r5,#:UPPER16: Metro
002802  eeb68a00          VMOV.F32 s16,#0.50000000       ;686
;;;694    								do {res=ChangeParam(3,">>УСТАВКА ОТКЛ. ","  P:              t:              Udc:          ");
;;;695    									switch (res) {
;;;696    										case 1: {SavePrms.RefPDisDiodeMode = (GetValue(0) * 14.095465572f + 0.5f);} break;
;;;697    										case 2: {SavePrms.RefTDisDiodeMode = (GetValue(1) * 4000.0f + 0.5f);} break;
;;;698    										case 3: {SavePrms.RefUdcDisDiodeMode = (GetValue(2) * 10.0f + 0.5f);} break;
002806  eef29a04          VMOV.F32 s19,#10.00000000
                  |L1.10250|
00280a  2300              MOVS     r3,#0                 ;675
00280c  4621              MOV      r1,r4                 ;675
00280e  2003              MOVS     r0,#3                 ;675
002810  6b3a              LDR      r2,[r7,#0x30]         ;675  ; STDiodeMode
002812  f7fffffe          BL       SubItem
002816  0004              MOVS     r4,r0                 ;675
;;;699    									} //switch
;;;700    								} while (res); //do
;;;701    							} break;
;;;702    		} //switch
;;;703    	}//while	
;;;704    }
002818  bf02              ITTT     EQ
00281a  b001              ADDEQ    sp,sp,#4
00281c  ecbd8b0a          VPOPEQ   {d8-d12}
002820  bdf0              POPEQ    {r4-r7,pc}
002822  2c01              CMP      r4,#1                 ;676
002824  d056              BEQ      |L1.10452|
002826  2c02              CMP      r4,#2                 ;676
002828  d065              BEQ      |L1.10486|
00282a  2c03              CMP      r4,#3                 ;676
00282c  d1ed              BNE      |L1.10250|
00282e  9600              STR      r6,[sp,#0]            ;691
002830  f9b50fa6          LDRSH    r0,[r5,#0xfa6]        ;691  ; Metro
002834  ee000a10          VMOV     s0,r0                 ;691
002838  eeb80ac0          VCVT.F32.S32 s0,s0                 ;691
00283c  ee200a2a          VMUL.F32 s0,s0,s21             ;691
002840  f2af2344          ADR      r3,|L1.9728|
002844  2200              MOVS     r2,#0                 ;691
002846  2115              MOVS     r1,#0x15              ;691
002848  eef71a00          VMOV.F32 s3,#1.00000000        ;691
00284c  eeb01a6b          VMOV.F32 s2,s23                ;691
002850  eef00a4b          VMOV.F32 s1,s22                ;691
002854  4610              MOV      r0,r2                 ;691
002856  f7fffffe          BL       FillData
00285a  f9b50faa          LDRSH    r0,[r5,#0xfaa]        ;692  ; Metro
00285e  2201              MOVS     r2,#1                 ;692
002860  ee000a10          VMOV     s0,r0                 ;692
002864  a385              ADR      r3,|L1.10876|
002866  2115              MOVS     r1,#0x15              ;692
002868  eef80ac0          VCVT.F32.S32 s1,s0                 ;692
00286c  eeb01a4c          VMOV.F32 s2,s24                ;692
002870  4610              MOV      r0,r2                 ;692
002872  9600              STR      r6,[sp,#0]            ;692
002874  ee800aa8          VDIV.F32 s0,s1,s17             ;692
002878  eef00a4a          VMOV.F32 s1,s20                ;692
00287c  eef01a60          VMOV.F32 s3,s1                 ;692
002880  f7fffffe          BL       FillData
002884  f8b50fac          LDRH     r0,[r5,#0xfac]        ;693  ; Metro
002888  f2466167          MOV      r1,#0x6667            ;693
00288c  fb10f001          SMULBB   r0,r0,r1              ;693
002890  1481              ASRS     r1,r0,#18             ;693
002892  eba170e0          SUB      r0,r1,r0,ASR #31      ;693
002896  ee000a10          VMOV     s0,r0                 ;693
00289a  a385              ADR      r3,|L1.10928|
00289c  2200              MOVS     r2,#0                 ;693
00289e  eeb80ac0          VCVT.F32.S32 s0,s0                 ;693
0028a2  2117              MOVS     r1,#0x17              ;693
0028a4  eef71a00          VMOV.F32 s3,#1.00000000        ;693
0028a8  eeb01a6c          VMOV.F32 s2,s25                ;693
0028ac  eef00a4b          VMOV.F32 s1,s22                ;693
0028b0  2002              MOVS     r0,#2                 ;693
0028b2  9600              STR      r6,[sp,#0]            ;693
0028b4  f7fffffe          BL       FillData
                  |L1.10424|
0028b8  a27f              ADR      r2,|L1.10936|
0028ba  a172              ADR      r1,|L1.10884|
0028bc  2003              MOVS     r0,#3                 ;694
0028be  f7fffffe          BL       ChangeParam
0028c2  2801              CMP      r0,#1                 ;695
0028c4  d06c              BEQ      |L1.10656|
0028c6  2802              CMP      r0,#2                 ;695
0028c8  d07a              BEQ      |L1.10688|
0028ca  2803              CMP      r0,#3                 ;695
0028cc  d077              BEQ      |L1.10686|
0028ce  2800              CMP      r0,#0                 ;700
0028d0  d1f2              BNE      |L1.10424|
0028d2  e79a              B        |L1.10250|
                  |L1.10452|
0028d4  f8b50fae          LDRH     r0,[r5,#0xfae]        ;678  ; Metro
0028d8  2800              CMP      r0,#0                 ;678
0028da  bf14              ITE      NE                    ;678
0028dc  2102              MOVNE    r1,#2                 ;678
0028de  2101              MOVEQ    r1,#1                 ;678
0028e0  460b              MOV      r3,r1                 ;679
0028e2  2002              MOVS     r0,#2                 ;679
0028e4  6b7a              LDR      r2,[r7,#0x34]         ;679  ; STEnaDiodeMode
0028e6  f7fffffe          BL       SubItem
0028ea  2800              CMP      r0,#0                 ;680
0028ec  bf1c              ITT      NE                    ;680
0028ee  1e40              SUBNE    r0,r0,#1              ;680
0028f0  f8a50fae          STRHNE   r0,[r5,#0xfae]        ;680
0028f4  e789              B        |L1.10250|
                  |L1.10486|
0028f6  9600              STR      r6,[sp,#0]            ;682
0028f8  f9b50fa4          LDRSH    r0,[r5,#0xfa4]        ;682  ; Metro
0028fc  ee000a10          VMOV     s0,r0                 ;682
002900  eeb80ac0          VCVT.F32.S32 s0,s0                 ;682
002904  ee200a2a          VMUL.F32 s0,s0,s21             ;682
002908  f2af330c          ADR      r3,|L1.9728|
00290c  2200              MOVS     r2,#0                 ;682
00290e  2115              MOVS     r1,#0x15              ;682
002910  eef71a00          VMOV.F32 s3,#1.00000000        ;682
002914  eeb01a6b          VMOV.F32 s2,s23                ;682
002918  eef00a4b          VMOV.F32 s1,s22                ;682
00291c  4610              MOV      r0,r2                 ;682
00291e  f7fffffe          BL       FillData
002922  f9b50fa8          LDRSH    r0,[r5,#0xfa8]        ;683  ; Metro
002926  2201              MOVS     r2,#1                 ;683
002928  ee000a10          VMOV     s0,r0                 ;683
00292c  a353              ADR      r3,|L1.10876|
00292e  2115              MOVS     r1,#0x15              ;683
002930  eef80ac0          VCVT.F32.S32 s1,s0                 ;683
002934  eeb01a4c          VMOV.F32 s2,s24                ;683
002938  4610              MOV      r0,r2                 ;683
00293a  9600              STR      r6,[sp,#0]            ;683
00293c  ee800aa8          VDIV.F32 s0,s1,s17             ;683
002940  eef00a4a          VMOV.F32 s1,s20                ;683
002944  eef01a60          VMOV.F32 s3,s1                 ;683
002948  f7fffffe          BL       FillData
                  |L1.10572|
00294c  f2af3248          ADR      r2,|L1.9736|
002950  f2af3128          ADR      r1,|L1.9772|
002954  2002              MOVS     r0,#2                 ;684
002956  f7fffffe          BL       ChangeParam
00295a  2801              CMP      r0,#1                 ;685
00295c  d004              BEQ      |L1.10600|
00295e  2802              CMP      r0,#2                 ;685
002960  d010              BEQ      |L1.10628|
002962  2800              CMP      r0,#0                 ;689
002964  d1f2              BNE      |L1.10572|
002966  e750              B        |L1.10250|
                  |L1.10600|
002968  2000              MOVS     r0,#0                 ;686
00296a  f7fffffe          BL       GetValue
00296e  eef00a48          VMOV.F32 s1,s16                ;686
002972  ee400a09          VMLA.F32 s1,s0,s18             ;686
002976  eebd0ae0          VCVT.S32.F32 s0,s1                 ;686
00297a  ee100a10          VMOV     r0,s0                 ;686
00297e  f8a50fa4          STRH     r0,[r5,#0xfa4]        ;686
002982  e7e3              B        |L1.10572|
                  |L1.10628|
002984  2001              MOVS     r0,#1                 ;687
002986  f7fffffe          BL       GetValue
00298a  eef00a48          VMOV.F32 s1,s16                ;687
00298e  ee400a28          VMLA.F32 s1,s0,s17             ;687
002992  eebd0ae0          VCVT.S32.F32 s0,s1                 ;687
002996  ee100a10          VMOV     r0,s0                 ;687
00299a  f8a50fa8          STRH     r0,[r5,#0xfa8]        ;687
00299e  e7d5              B        |L1.10572|
                  |L1.10656|
0029a0  2000              MOVS     r0,#0                 ;696
0029a2  f7fffffe          BL       GetValue
0029a6  eef00a48          VMOV.F32 s1,s16                ;696
0029aa  ee400a09          VMLA.F32 s1,s0,s18             ;696
0029ae  eebd0ae0          VCVT.S32.F32 s0,s1                 ;696
0029b2  ee100a10          VMOV     r0,s0                 ;696
0029b6  f8a50fa6          STRH     r0,[r5,#0xfa6]        ;696
0029ba  e77d              B        |L1.10424|
0029bc  e000              B        |L1.10688|
                  |L1.10686|
0029be  e00d              B        |L1.10716|
                  |L1.10688|
0029c0  2001              MOVS     r0,#1                 ;697
0029c2  f7fffffe          BL       GetValue
0029c6  eef00a48          VMOV.F32 s1,s16                ;697
0029ca  ee400a28          VMLA.F32 s1,s0,s17             ;697
0029ce  eebd0ae0          VCVT.S32.F32 s0,s1                 ;697
0029d2  ee100a10          VMOV     r0,s0                 ;697
0029d6  f8a50faa          STRH     r0,[r5,#0xfaa]        ;697
0029da  e76d              B        |L1.10424|
                  |L1.10716|
0029dc  2002              MOVS     r0,#2                 ;698
0029de  f7fffffe          BL       GetValue
0029e2  eef00a48          VMOV.F32 s1,s16                ;698
0029e6  ee400a29          VMLA.F32 s1,s0,s19             ;698
0029ea  eebd0ae0          VCVT.S32.F32 s0,s1                 ;698
0029ee  ee100a10          VMOV     r0,s0                 ;698
0029f2  f8a50fac          STRH     r0,[r5,#0xfac]        ;698
0029f6  e75f              B        |L1.10424|
;;;705    void SubMenuConfig(void) {
                          ENDP

                  SubMenuConfig PROC
0029f8  b570              PUSH     {r4-r6,lr}
;;;706    int pos = 1;
0029fa  2601              MOVS     r6,#1
0029fc  ed2d8b02          VPUSH    {d8}                  ;705
002a00  b082              SUB      sp,sp,#8              ;705
;;;707    int res = 0;	
;;;708    	while (1) {
;;;709    		pos = SubItem(13, pos, STconfig, 0);
002a02  f2400500          MOVW     r5,#:LOWER16: ||.data||
002a06  f2c00500          MOVT     r5,#:UPPER16: ||.data||
                  |L1.10762|
002a0a  2300              MOVS     r3,#0
002a0c  4631              MOV      r1,r6
002a0e  200d              MOVS     r0,#0xd
002a10  68ea              LDR      r2,[r5,#0xc]  ; STconfig
002a12  f7fffffe          BL       SubItem
002a16  4606              MOV      r6,r0
;;;710    		switch (pos) {
002a18  2e0e              CMP      r6,#0xe
002a1a  d2f6              BCS      |L1.10762|
002a1c  e8dff006          TBB      [pc,r6]
002a20  ee070a0d          DCB      0xee,0x07,0x0a,0x0d
002a24  24272a66          DCB      0x24,0x27,0x2a,0x66
002a28  696c8184          DCB      0x69,0x6c,0x81,0x84
002a2c  9ed9              DCB      0x9e,0xd9
;;;711    			case 0: return;
;;;712    			case 1: {_SubMenuRefs();} break;
002a2e  f7fffffe          BL       _SubMenuRefs
002a32  e7ea              B        |L1.10762|
;;;713    			case 2: {_SubMenuZarad();} break;
002a34  f7fffffe          BL       _SubMenuZarad
002a38  e7e7              B        |L1.10762|
;;;714    			case 3: {	res = (Metro.FixUgolMode == 0) ? 1 : 2;
002a3a  f2400400          MOVW     r4,#:LOWER16: Metro+8192
002a3e  f2c00400          MOVT     r4,#:UPPER16: Metro+8192
002a42  f8b4030e          LDRH     r0,[r4,#0x30e]  ; Metro
002a46  2800              CMP      r0,#0
002a48  bf0c              ITE      EQ
002a4a  2101              MOVEQ    r1,#1
002a4c  2102              MOVNE    r1,#2
;;;715    								res = SubItem(2, res, STfixugol, res);
002a4e  460b              MOV      r3,r1
002a50  2002              MOVS     r0,#2
002a52  6d2a              LDR      r2,[r5,#0x50]  ; STfixugol
002a54  f7fffffe          BL       SubItem
;;;716    								if (res) {Metro.FixUgolMode = res - 1; PrgData.OscilCmnd.OscilNeed = 1;}
002a58  2800              CMP      r0,#0
002a5a  d0d6              BEQ      |L1.10762|
002a5c  1e40              SUBS     r0,r0,#1
002a5e  f8a4030e          STRH     r0,[r4,#0x30e]
002a62  2001              MOVS     r0,#1
002a64  8120              STRH     r0,[r4,#8]
002a66  e7d0              B        |L1.10762|
;;;717    							} break;
;;;718    			case 4:	{_SubMenuIntGen();} break;
002a68  f7fffffe          BL       _SubMenuIntGen
002a6c  e7cd              B        |L1.10762|
;;;719    			case 5: {_SubMenuFiltrs();} break;
002a6e  f7fffffe          BL       _SubMenuFiltrs
002a72  e7ca              B        |L1.10762|
;;;720    			case 6: {_SubMenuVent();} break;
002a74  f7fffffe          BL       _SubMenuVent
002a78  e7c7              B        |L1.10762|
002a7a  0000              DCW      0x0000
                  |L1.10876|
002a7c  205b635d          DCB      " [c]"
                  |L1.10880|
002a80  00                DCB      0
002a81  00                DCB      0
002a82  00                DCB      0
002a83  00                DCB      0
                  |L1.10884|
002a84  3e3ed3d1          DCB      ">>",211,209,210,192,194,202,192," ",206,210,202,203,". "
002a88  d2c0c2ca
002a8c  c020ced2
002a90  cacb2e20
002a94  00                DCB      0
002a95  00                DCB      0
002a96  00                DCB      0
002a97  00                DCB      0
                  |L1.10904|
002a98  3e3ecace          DCB      ">>",202,206,208,208,197,202,214,200,223," ",211,195,203
002a9c  d0d0c5ca
002aa0  d6c8df20
002aa4  d3c3cb  
002aa7  c02000            DCB      192," ",0
002aaa  00                DCB      0
002aab  00                DCB      0
                  |L1.10924|
002aac  442f0000          DCFS     0x442f0000 ; 700
                  |L1.10928|
002ab0  205b425d          DCB      " [B]",0
002ab4  00      
002ab5  00                DCB      0
002ab6  00                DCB      0
002ab7  00                DCB      0
                  |L1.10936|
002ab8  2020503a          DCB      "  P:              t:              Udc:          ",0
002abc  20202020
002ac0  20202020
002ac4  20202020
002ac8  2020743a
002acc  20202020
002ad0  20202020
002ad4  20202020
002ad8  20205564
002adc  633a2020
002ae0  20202020
002ae4  20202020
002ae8  00      
002ae9  00                DCB      0
002aea  00                DCB      0
002aeb  00                DCB      0
;;;721    			case 7: {_SubMenuStandBy();} break;
002aec  f7fffffe          BL       _SubMenuStandBy
002af0  e78b              B        |L1.10762|
;;;722    			case 8: {_SubMenuBridge();} break;
002af2  f7fffffe          BL       _SubMenuBridge
002af6  e788              B        |L1.10762|
;;;723    			case 9: {	res = (SavePrms.MainCh == 0) ? 1 : 2;
002af8  f2400400          MOVW     r4,#:LOWER16: Metro
002afc  f2c00400          MOVT     r4,#:UPPER16: Metro
002b00  f8b40efc          LDRH     r0,[r4,#0xefc]  ; Metro
002b04  2800              CMP      r0,#0
002b06  bf0c              ITE      EQ
002b08  2101              MOVEQ    r1,#1
002b0a  2102              MOVNE    r1,#2
;;;724    								res = SubItem(2, res, STmainch, res);
002b0c  460b              MOV      r3,r1
002b0e  2002              MOVS     r0,#2
002b10  6aaa              LDR      r2,[r5,#0x28]  ; STmainch
002b12  f7fffffe          BL       SubItem
;;;725    								if (res) {SavePrms.MainCh = res - 1;}
002b16  2800              CMP      r0,#0
002b18  bf1c              ITT      NE
002b1a  1e40              SUBNE    r0,r0,#1
002b1c  f8a40efc          STRHNE   r0,[r4,#0xefc]
002b20  e773              B        |L1.10762|
;;;726    							} break;
;;;727    			case 10:{_SubMenuDiodeMode();} break;
002b22  f7fffffe          BL       _SubMenuDiodeMode
002b26  e770              B        |L1.10762|
;;;728    
;;;729    			case 11:{	res = ((SavePrms.ENATIMOffset >> 1) + 1) & 0x03;
002b28  f2400400          MOVW     r4,#:LOWER16: Metro
002b2c  f2c00400          MOVT     r4,#:UPPER16: Metro
002b30  f8940efe          LDRB     r0,[r4,#0xefe]  ; Metro
002b34  2101              MOVS     r1,#1
002b36  eb010060          ADD      r0,r1,r0,ASR #1
002b3a  f0000103          AND      r1,r0,#3
;;;730    								res = SubItem(3, res, STTIMOffset, res);
002b3e  460b              MOV      r3,r1
002b40  2003              MOVS     r0,#3
002b42  6d6a              LDR      r2,[r5,#0x54]  ; STTIMOffset
002b44  f7fffffe          BL       SubItem
;;;731    								if (res) {SavePrms.ENATIMOffset = (res - 1) * 2;}
002b48  2800              CMP      r0,#0
002b4a  f43faf5e          BEQ      |L1.10762|
002b4e  0440              LSLS     r0,r0,#17
002b50  f5a03000          SUB      r0,r0,#0x20000
002b54  1400              ASRS     r0,r0,#16
002b56  f8a40efe          STRH     r0,[r4,#0xefe]
002b5a  e756              B        |L1.10762|
;;;732    							} break;
;;;733    			case 12:{ FillData(0, SavePrms.RefDeltaUdc/10, 0, 500, 1, 24, 0," [B]", 0);
002b5c  f2400400          MOVW     r4,#:LOWER16: Metro
002b60  f2c00400          MOVT     r4,#:UPPER16: Metro
002b64  f8b40eea          LDRH     r0,[r4,#0xeea]  ; Metro
002b68  f2466167          MOV      r1,#0x6667
002b6c  fb10f001          SMULBB   r0,r0,r1
002b70  1481              ASRS     r1,r0,#18
002b72  eba170e0          SUB      r0,r1,r0,ASR #31
002b76  ee000a10          VMOV     s0,r0
002b7a  2000              MOVS     r0,#0
002b7c  eeb80ac0          VCVT.F32.S32 s0,s0
002b80  f2af03d4          ADR      r3,|L1.10928|
002b84  4602              MOV      r2,r0
002b86  2118              MOVS     r1,#0x18
002b88  eef71a00          VMOV.F32 s3,#1.00000000
002b8c  ed9f1af7          VLDR     s2,|L1.12140|
002b90  eddf0af7          VLDR     s1,|L1.12144|
002b94  9000              STR      r0,[sp,#0]
002b96  f7fffffe          BL       FillData
;;;734    								do {res=ChangeParam(1,">>РАЗНИЦА Udc1&2","  dUdc<         ");
;;;735    									switch (res) {
;;;736    										case 1: {SavePrms.RefDeltaUdc = (GetValue(0) * 10.0f + 0.5f);} break;
002b9a  eeb28a04          VMOV.F32 s16,#10.00000000
002b9e  eef68a00          VMOV.F32 s17,#0.50000000
                  |L1.11170|
002ba2  a2f4              ADR      r2,|L1.12148|
002ba4  a1f8              ADR      r1,|L1.12168|
002ba6  2001              MOVS     r0,#1                 ;734
002ba8  f7fffffe          BL       ChangeParam
002bac  2801              CMP      r0,#1                 ;735
002bae  d002              BEQ      |L1.11190|
;;;737    									} //switch
;;;738    								} while (res); //do
002bb0  2800              CMP      r0,#0
002bb2  d1f6              BNE      |L1.11170|
002bb4  e729              B        |L1.10762|
                  |L1.11190|
002bb6  2000              MOVS     r0,#0                 ;736
002bb8  f7fffffe          BL       GetValue
002bbc  eef00a68          VMOV.F32 s1,s17                ;736
002bc0  ee400a08          VMLA.F32 s1,s0,s16             ;736
002bc4  eebd0ae0          VCVT.S32.F32 s0,s1                 ;736
002bc8  ee100a10          VMOV     r0,s0                 ;736
002bcc  f8a40eea          STRH     r0,[r4,#0xeea]        ;736
002bd0  e7e7              B        |L1.11170|
;;;739    							} break;
;;;740    			case 13:{ res = (SavePrms.EnaFixCorrect == 0) ? 1 : 2;
002bd2  f2400400          MOVW     r4,#:LOWER16: Metro
002bd6  f2c00400          MOVT     r4,#:UPPER16: Metro
002bda  f8b40e6e          LDRH     r0,[r4,#0xe6e]  ; Metro
002bde  2800              CMP      r0,#0
002be0  bf0c              ITE      EQ
002be2  2101              MOVEQ    r1,#1
002be4  2102              MOVNE    r1,#2
;;;741    								res = SubItem(2, res, STFixCorrect, res);
002be6  460b              MOV      r3,r1
002be8  2002              MOVS     r0,#2
002bea  6daa              LDR      r2,[r5,#0x58]  ; STFixCorrect
002bec  f7fffffe          BL       SubItem
;;;742    								if (res) {SavePrms.EnaFixCorrect = res - 1;}
002bf0  2800              CMP      r0,#0
002bf2  bf1c              ITT      NE
002bf4  1e40              SUBNE    r0,r0,#1
002bf6  f8a40e6e          STRHNE   r0,[r4,#0xe6e]
002bfa  e706              B        |L1.10762|
;;;743    							} break;			
;;;744    
;;;745    
;;;746    							
;;;747    			
;;;748    		} //switch 
;;;749    	}//while	
;;;750    }
002bfc  b002              ADD      sp,sp,#8
002bfe  ecbd8b02          VPOP     {d8}
002c02  bd70              POP      {r4-r6,pc}
;;;751    
                          ENDP

                  CalibSens PROC
;;;752    static __inline void CalibSens(int Sens, int *Correct, char *Str, char *Str2) {
002c04  e92d41f0          PUSH     {r4-r8,lr}
002c08  461f              MOV      r7,r3
002c0a  460e              MOV      r6,r1
;;;753    unsigned short Temp;
;;;754    int Temp2;	 
;;;755    	Metro.CalibrData = &StdPrms.ADCDataNorm[Sens];
002c0c  f2400100          MOVW     r1,#:LOWER16: Metro
002c10  f2c00100          MOVT     r1,#:UPPER16: Metro
002c14  eb010440          ADD      r4,r1,r0,LSL #1
002c18  f5015500          ADD      r5,r1,#0x2000
002c1c  f5047058          ADD      r0,r4,#0x360
;;;756    	lcdout(0,22,Str); lcdouttextl(22, Metro.RMSData * 0.1f, 1, Str2);
002c20  f8c503f8          STR      r0,[r5,#0x3f8]  ; Metro
002c24  2116              MOVS     r1,#0x16
002c26  2000              MOVS     r0,#0
002c28  f7fffffe          BL       lcdout
002c2c  ed950aff          VLDR     s0,[r5,#0x3fc]
002c30  eeb80ac0          VCVT.F32.S32 s0,s0
002c34  eddf0ad9          VLDR     s1,|L1.12188|
002c38  463a              MOV      r2,r7
002c3a  2101              MOVS     r1,#1
002c3c  ee200a20          VMUL.F32 s0,s0,s1
002c40  2016              MOVS     r0,#0x16
002c42  f7fffffe          BL       lcdouttextl
;;;757    	if (*Correct) {
002c46  6830              LDR      r0,[r6,#0]
002c48  2800              CMP      r0,#0
;;;758    	  Temp = SavePrms.ADCK[Sens]; 
002c4a  bf14              ITE      NE
002c4c  f8b42e00          LDRHNE   r2,[r4,#0xe00]
;;;759    	  if (*Correct > 0) {Temp = __UQADD16(Temp,  *Correct);}
;;;760    	  if (*Correct < 0) {Temp = __UQSUB16(Temp, -*Correct);}
;;;761    		SavePrms.ADCK[Sens] = Temp;
;;;762    	  *Correct = 0;
;;;763    	}
;;;764    } //static __inline void CalibExtSens
002c50  e8bd81f0          POPEQ    {r4-r8,pc}
002c54  bfae              ITEE     GE                    ;759
002c56  fa92f050          UQADD16GE r0,r2,r0              ;759
002c5a  4240              RSBLT    r0,r0,#0              ;760
002c5c  fad2f050          UQSUB16LT r0,r2,r0              ;760
002c60  f8a40e00          STRH     r0,[r4,#0xe00]        ;761
002c64  f04f0000          MOV      r0,#0                 ;762
002c68  6030              STR      r0,[r6,#0]            ;762
002c6a  e8bd81f0          POP      {r4-r8,pc}
;;;765    
                          ENDP

                  SubMenuSensorsCalib PROC
;;;766    void SubMenuSensorsCalib(void) {
002c6e  e92d43f8          PUSH     {r3-r9,lr}
;;;767    static int ViewStr = 1;	
;;;768    int Inc = 0;
;;;769    int Correct = 0;
002c72  2700              MOVS     r7,#0
;;;770    int Pause = 0;
002c74  463d              MOV      r5,r7
;;;771    int Repeat = 0;	
;;;772    int PultKeyb = 0;
;;;773    
;;;774    ClearPultKeyb();
002c76  f2400000          MOVW     r0,#:LOWER16: WorkPultKeyb
002c7a  f2c00000          MOVT     r0,#:UPPER16: WorkPultKeyb
002c7e  9700              STR      r7,[sp,#0]
;;;775    while (1) {
;;;776    	/* Ожидаем завершения передачи и получения нажатых кнопок на пульте	*/
;;;777    	do {PultKeyb = WaitPultReady();} while (PultKeyb == 0);
;;;778    
;;;779    	Inc = 0;
;;;780    	Correct = 0;
;;;781    	switch (PultKeyb & (0x7F & ~K_Shift)) {
;;;782    		case K_Plus:	Correct = +1; break;
002c80  f04f0801          MOV      r8,#1
;;;783    		case K_Minus:	Correct = -1; break;
002c84  f04f39ff          MOV      r9,#0xffffffff
;;;784    		case K_Up:		Inc = -1; break;
;;;785    		case K_Down:	Inc = +1; break;
;;;786    		case K_Left:	return;
;;;787    	} /* switch (PultKeyb & 0x7F) */
;;;788    
;;;789    	if (PultKeyb & K_Shift) Correct *= 10;
;;;790    	
;;;791    	if ((Pause == 0) || (Inc)) {
;;;792    		Pause = 4;
;;;793    		ClearScreen();					/* Очищаем экран пульта */
;;;794    		do {
;;;795    			Repeat = 0;
;;;796    			ViewStr += Inc;
002c88  f2400600          MOVW     r6,#:LOWER16: ||.data||
002c8c  f2c00600          MOVT     r6,#:UPPER16: ||.data||
002c90  6007              STR      r7,[r0,#0]  ; WorkPultKeyb
                  |L1.11410|
002c92  f7fffffe          BL       WaitPultReady
002c96  2800              CMP      r0,#0                 ;777
002c98  d0fb              BEQ      |L1.11410|
002c9a  2400              MOVS     r4,#0                 ;779
002c9c  f000013f          AND      r1,r0,#0x3f           ;781
002ca0  9700              STR      r7,[sp,#0]            ;781
002ca2  2909              CMP      r1,#9                 ;781
002ca4  d210              BCS      |L1.11464|
002ca6  e8dff001          TBB      [pc,r1]               ;781
002caa  0f08              DCB      0x0f,0x08
002cac  0e74050f          DCB      0x0e,0x74,0x05,0x0f
002cb0  0f0f0b00          DCB      0x0f,0x0f,0x0b,0x00
002cb4  f8cd8000          STR      r8,[sp,#0]            ;782
002cb8  e006              B        |L1.11464|
002cba  f8cd9000          STR      r9,[sp,#0]            ;783
002cbe  e003              B        |L1.11464|
002cc0  f04f34ff          MOV      r4,#0xffffffff        ;784
002cc4  e000              B        |L1.11464|
002cc6  2401              MOVS     r4,#1                 ;785
                  |L1.11464|
002cc8  f0100f40          TST      r0,#0x40              ;789
002ccc  d004              BEQ      |L1.11480|
002cce  9800              LDR      r0,[sp,#0]            ;789
002cd0  eb000080          ADD      r0,r0,r0,LSL #2       ;789
002cd4  0040              LSLS     r0,r0,#1              ;789
002cd6  9000              STR      r0,[sp,#0]            ;789
                  |L1.11480|
002cd8  b125              CBZ      r5,|L1.11492|
002cda  2c00              CMP      r4,#0                 ;791
002cdc  bf08              IT       EQ                    ;791
002cde  1e6d              SUBEQ    r5,r5,#1              ;791
002ce0  f000804d          BEQ.W    |L1.11646|
                  |L1.11492|
002ce4  2504              MOVS     r5,#4                 ;792
002ce6  f7fffffe          BL       ClearScreen
                  |L1.11498|
002cea  6fb0              LDR      r0,[r6,#0x78]  ; ViewStr
002cec  4420              ADD      r0,r0,r4
;;;797    			switch (ViewStr) {
002cee  67b0              STR      r0,[r6,#0x78]  ; ViewStr
002cf0  280c              CMP      r0,#0xc
002cf2  f0808049          BCS.W    |L1.11656|
002cf6  e8dff000          TBB      [pc,r0]
002cfa  0608              DCB      0x06,0x08
002cfc  0d12171c          DCB      0x0d,0x12,0x17,0x1c
002d00  21262b30          DCB      0x21,0x26,0x2b,0x30
002d04  353c              DCB      0x35,0x3c
;;;798    				case  0:	{Inc =  1;	Repeat = 1;} break;
002d06  2401              MOVS     r4,#1
002d08  e7ef              B        |L1.11498|
;;;799    				case  1:	CalibSens(_Ia1,  &Correct, "Ток 1 Фаза А    I1a:  ", " A"); break;
002d0a  a3a5              ADR      r3,|L1.12192|
002d0c  a2a5              ADR      r2,|L1.12196|
002d0e  4669              MOV      r1,sp
002d10  2005              MOVS     r0,#5
002d12  e02b              B        |L1.11628|
;;;800    				case  2:	CalibSens(_Ib1,  &Correct, "Ток 1 Фаза B    I1b:  ", " A"); break;
002d14  a3a2              ADR      r3,|L1.12192|
002d16  a2a9              ADR      r2,|L1.12220|
002d18  4669              MOV      r1,sp
002d1a  2009              MOVS     r0,#9
002d1c  e026              B        |L1.11628|
;;;801    				case  3:	CalibSens(_Ic1,  &Correct, "Ток 1 Фаза C    I1c:  ", " A"); break;
002d1e  a3a0              ADR      r3,|L1.12192|
002d20  a2ac              ADR      r2,|L1.12244|
002d22  4669              MOV      r1,sp
002d24  200d              MOVS     r0,#0xd
002d26  e021              B        |L1.11628|
;;;802    				case  4:	CalibSens(_Ia2,  &Correct, "Ток 2 Фаза А    I2a:  ", " A"); break;
002d28  a39d              ADR      r3,|L1.12192|
002d2a  a2b0              ADR      r2,|L1.12268|
002d2c  4669              MOV      r1,sp
002d2e  2004              MOVS     r0,#4
002d30  e01c              B        |L1.11628|
;;;803    				case  5:	CalibSens(_Ib2,  &Correct, "Ток 2 Фаза B    I2b:  ", " A"); break;
002d32  a39b              ADR      r3,|L1.12192|
002d34  a2b3              ADR      r2,|L1.12292|
002d36  4669              MOV      r1,sp
002d38  2008              MOVS     r0,#8
002d3a  e017              B        |L1.11628|
;;;804    				case  6:	CalibSens(_Ic2,  &Correct, "Ток 2 Фаза C    I2c:  ", " A"); break;
002d3c  a398              ADR      r3,|L1.12192|
002d3e  a2b7              ADR      r2,|L1.12316|
002d40  4669              MOV      r1,sp
002d42  200c              MOVS     r0,#0xc
002d44  e012              B        |L1.11628|
;;;805    				case  7:	CalibSens(_Udc1, &Correct, "Напряжение Udc1 Udc1: ", " B"); break;
002d46  a3bb              ADR      r3,|L1.12340|
002d48  a2bb              ADR      r2,|L1.12344|
002d4a  4669              MOV      r1,sp
002d4c  2000              MOVS     r0,#0
002d4e  e00d              B        |L1.11628|
;;;806    				case  8:	CalibSens(_Udc2, &Correct, "Напряжение Udc2 Udc2: ", " B"); break;
002d50  a3b8              ADR      r3,|L1.12340|
002d52  a2bf              ADR      r2,|L1.12368|
002d54  4669              MOV      r1,sp
002d56  2001              MOVS     r0,#1
002d58  e008              B        |L1.11628|
;;;807    				case  9:	CalibSens(_Uab,  &Correct, "Напряжение Uab  Uab:  ", " B"); break;
002d5a  a3b6              ADR      r3,|L1.12340|
002d5c  a2c2              ADR      r2,|L1.12392|
002d5e  4669              MOV      r1,sp
002d60  2010              MOVS     r0,#0x10
002d62  e003              B        |L1.11628|
;;;808    				case 10:	CalibSens(_Ubc,  &Correct, "Напряжение Ubc  Ubc:  ", " B"); break;
002d64  a3b3              ADR      r3,|L1.12340|
002d66  a2c6              ADR      r2,|L1.12416|
002d68  4669              MOV      r1,sp
002d6a  2011              MOVS     r0,#0x11
                  |L1.11628|
002d6c  f7fffffe          BL       CalibSens
002d70  e005              B        |L1.11646|
;;;809    				case 11:	CalibSens(_Uca,  &Correct, "Напряжение Uca  Uca:  ", " B"); break;
002d72  a3b0              ADR      r3,|L1.12340|
002d74  a2c8              ADR      r2,|L1.12440|
002d76  4669              MOV      r1,sp
002d78  2012              MOVS     r0,#0x12
002d7a  f7fffffe          BL       CalibSens
                  |L1.11646|
;;;810    				default: 	{if (ViewStr > 11) {Inc = -1;}	Repeat = 1; } break;
;;;811    			}
;;;812    		} while (Repeat);
;;;813    	} else Pause--;
;;;814    	while (PultRefresh());
002d7e  f7fffffe          BL       PultRefresh
002d82  2800              CMP      r0,#0
002d84  d1fb              BNE      |L1.11646|
002d86  e784              B        |L1.11410|
                  |L1.11656|
002d88  280b              CMP      r0,#0xb               ;810
002d8a  bfc8              IT       GT                    ;810
002d8c  f04f34ff          MOVGT    r4,#0xffffffff        ;810
002d90  e7ab              B        |L1.11498|
;;;815    	} /* while (1) */
;;;816    }	/* void Monitor(struct EventLog_type DispPrms) */
002d92  e8bd83f8          POP      {r3-r9,pc}
;;;817    
                          ENDP

                  SubMenuSensors PROC
;;;818    void SubMenuSensors(void) {
002d96  e92d5ff0          PUSH     {r4-r12,lr}
;;;819    int pos = 1;
002d9a  f04f0b01          MOV      r11,#1
;;;820    	while (1) {
;;;821    		pos = SubItem(7,pos,STsensors,0);
002d9e  f2400500          MOVW     r5,#:LOWER16: ||.data||
002da2  f2c00500          MOVT     r5,#:UPPER16: ||.data||
002da6  2603              MOVS     r6,#3                 ;819
;;;822    		switch (pos) {
;;;823    			case 0: return;
;;;824    			case 1: SubMenuSensorsCalib(); break;
;;;825    			case 2: if ((StdPrms.SetZeroCmd == 0) && SubMenuAsk("УСТАНОВ.НУЛИ DC?")) {StdPrms.SetZeroCmd = (1ul<<_Udc1)|(1ul<<_Udc2);} break;
;;;826    			case 3: if ((StdPrms.SetZeroCmd == 0) && SubMenuAsk("УСТАНОВ.НУЛИ Us?")) {StdPrms.SetZeroCmd = (1ul<<_Uab)|(1ul<<_Ubc)|(1ul<<_Uca);} break;
002da8  f44f27e0          MOV      r7,#0x70000
;;;827    			case 4: if ((StdPrms.SetZeroCmd == 0) && SubMenuAsk("УСТАНОВ.НУЛИ I1?")) {StdPrms.SetZeroCmd = (1ul<<_Ia1)|(1ul<<_Ib1)|(1ul<<_Ic1);} break;
002dac  f2422820          MOV      r8,#0x2220
;;;828    			case 5: if ((StdPrms.SetZeroCmd == 0) && SubMenuAsk("УСТАНОВ.НУЛИ I2?")) {StdPrms.SetZeroCmd = (1ul<<_Ia2)|(1ul<<_Ib2)|(1ul<<_Ic2);} break;
002db0  f2411910          MOV      r9,#0x1110
;;;829    			case 6: if ((StdPrms.SetZeroCmd == 0) && SubMenuAsk("УСТАНОВ.НУЛИ I3?")) {StdPrms.SetZeroCmd = (1ul<<_Ia3)|(1ul<<_Ib3)|(1ul<<_Ic3);} break;
002db4  f6480a80          MOV      r10,#0x8880
002db8  f2400400          MOVW     r4,#:LOWER16: Metro
002dbc  f2c00400          MOVT     r4,#:UPPER16: Metro
                  |L1.11712|
002dc0  2300              MOVS     r3,#0                 ;821
002dc2  4659              MOV      r1,r11                ;821
002dc4  2007              MOVS     r0,#7                 ;821
002dc6  6cea              LDR      r2,[r5,#0x4c]         ;821  ; STsensors
002dc8  f7fffffe          BL       SubItem
002dcc  4683              MOV      r11,r0                ;821
002dce  f1bb0f08          CMP      r11,#8                ;822
002dd2  d2f5              BCS      |L1.11712|
002dd4  e8dff00b          TBB      [pc,r11]              ;822
002dd8  51040713          DCB      0x51,0x04,0x07,0x13
002ddc  1f2b3743          DCB      0x1f,0x2b,0x37,0x43
002de0  f7fffffe          BL       SubMenuSensorsCalib
002de4  e7ec              B        |L1.11712|
002de6  f8d40214          LDR      r0,[r4,#0x214]        ;825  ; Metro
002dea  2800              CMP      r0,#0                 ;825
002dec  d1e8              BNE      |L1.11712|
002dee  a0b0              ADR      r0,|L1.12464|
002df0  f7fffffe          BL       SubMenuAsk
002df4  2800              CMP      r0,#0                 ;825
002df6  bf18              IT       NE                    ;825
002df8  f8c46214          STRNE    r6,[r4,#0x214]        ;825  ; Metro
002dfc  e7e0              B        |L1.11712|
002dfe  f8d40214          LDR      r0,[r4,#0x214]        ;826  ; Metro
002e02  2800              CMP      r0,#0                 ;826
002e04  d1dc              BNE      |L1.11712|
002e06  a0af              ADR      r0,|L1.12484|
002e08  f7fffffe          BL       SubMenuAsk
002e0c  2800              CMP      r0,#0                 ;826
002e0e  bf18              IT       NE                    ;826
002e10  f8c47214          STRNE    r7,[r4,#0x214]        ;826  ; Metro
002e14  e7d4              B        |L1.11712|
002e16  f8d40214          LDR      r0,[r4,#0x214]        ;827  ; Metro
002e1a  2800              CMP      r0,#0                 ;827
002e1c  d1d0              BNE      |L1.11712|
002e1e  a0ae              ADR      r0,|L1.12504|
002e20  f7fffffe          BL       SubMenuAsk
002e24  2800              CMP      r0,#0                 ;827
002e26  bf18              IT       NE                    ;827
002e28  f8c48214          STRNE    r8,[r4,#0x214]        ;827  ; Metro
002e2c  e7c8              B        |L1.11712|
002e2e  f8d40214          LDR      r0,[r4,#0x214]        ;828  ; Metro
002e32  2800              CMP      r0,#0                 ;828
002e34  d1c4              BNE      |L1.11712|
002e36  a0ad              ADR      r0,|L1.12524|
002e38  f7fffffe          BL       SubMenuAsk
002e3c  2800              CMP      r0,#0                 ;828
002e3e  bf18              IT       NE                    ;828
002e40  f8c49214          STRNE    r9,[r4,#0x214]        ;828  ; Metro
002e44  e7bc              B        |L1.11712|
002e46  f8d40214          LDR      r0,[r4,#0x214]  ; Metro
002e4a  2800              CMP      r0,#0
002e4c  d1b8              BNE      |L1.11712|
002e4e  a0ac              ADR      r0,|L1.12544|
002e50  f7fffffe          BL       SubMenuAsk
002e54  2800              CMP      r0,#0
002e56  bf18              IT       NE
002e58  f8c4a214          STRNE    r10,[r4,#0x214]  ; Metro
002e5c  e7b0              B        |L1.11712|
;;;830    			case 7: if ((StdPrms.SetZeroCmd == 0) && SubMenuAsk("УСТАНОВ.НУЛИ I4?")) {StdPrms.SetZeroCmd = (1ul<<_Ia4)|(1ul<<_Ib4)|(1ul<<_Ic4);} break;
002e5e  f8d40214          LDR      r0,[r4,#0x214]  ; Metro
002e62  2800              CMP      r0,#0
002e64  d1ac              BNE      |L1.11712|
002e66  a0ab              ADR      r0,|L1.12564|
002e68  f7fffffe          BL       SubMenuAsk
002e6c  2800              CMP      r0,#0
002e6e  bf1c              ITT      NE
002e70  f2444040          MOVNE    r0,#0x4440
002e74  f8c40214          STRNE    r0,[r4,#0x214]  ; Metro
002e78  e7a2              B        |L1.11712|
;;;831    		} //switch
;;;832    	}//while	
;;;833    }
002e7a  e8bd9ff0          POP      {r4-r12,pc}
;;;834    
                          ENDP

                  SubMenuService PROC
;;;835    void SubMenuService(void) {
002e7e  e92d41f0          PUSH     {r4-r8,lr}
;;;836    int pos = 1;
002e82  2401              MOVS     r4,#1
;;;837    	while (1) {
;;;838    		pos = SubItem(3,pos,STservice,0);
002e84  f2400500          MOVW     r5,#:LOWER16: ||.data||
002e88  f2c00500          MOVT     r5,#:UPPER16: ||.data||
002e8c  4626              MOV      r6,r4                 ;836
;;;839    		switch (pos) {
;;;840    			case 0: return;
;;;841    		  case 1: {} break;
;;;842    			case 2: {if (SubMenuAsk("СОХР. ПАРАМЕТРЫ?")) {StdPrms.SaveParam = 1;}} break;
002e8e  f2400700          MOVW     r7,#:LOWER16: Metro
002e92  f2c00700          MOVT     r7,#:UPPER16: Metro
                  |L1.11926|
002e96  2300              MOVS     r3,#0                 ;838
002e98  4621              MOV      r1,r4                 ;838
002e9a  2003              MOVS     r0,#3                 ;838
002e9c  6caa              LDR      r2,[r5,#0x48]         ;838  ; STservice
002e9e  f7fffffe          BL       SubItem
002ea2  0004              MOVS     r4,r0                 ;838
;;;843    			case 3: {SubMenuSensors();} break;
;;;844    		} //switch
;;;845    	}//while	
;;;846    }
002ea4  bf08              IT       EQ
002ea6  e8bd81f0          POPEQ    {r4-r8,pc}
002eaa  2c01              CMP      r4,#1                 ;839
002eac  d0f3              BEQ      |L1.11926|
002eae  2c02              CMP      r4,#2                 ;839
002eb0  d004              BEQ      |L1.11964|
002eb2  2c03              CMP      r4,#3                 ;839
002eb4  bf08              IT       EQ                    ;843
002eb6  f7fffffe          BLEQ     SubMenuSensors
002eba  e7ec              B        |L1.11926|
                  |L1.11964|
002ebc  a09a              ADR      r0,|L1.12584|
002ebe  f7fffffe          BL       SubMenuAsk
002ec2  2800              CMP      r0,#0                 ;842
002ec4  bf18              IT       NE                    ;842
002ec6  f8a76200          STRHNE   r6,[r7,#0x200]        ;842
002eca  e7e4              B        |L1.11926|
;;;847    
                          ENDP

                  __SubMenuProtocol PROC
;;;848    void __SubMenuProtocol(int Port) {
002ecc  e92d4ff0          PUSH     {r4-r11,lr}
002ed0  4683              MOV      r11,r0
002ed2  ed2d8b02          VPUSH    {d8}
;;;849    int pos = 1;
;;;850    int res = 0;
;;;851    union UsartPrms_union OldPrms, NewPrms;
;;;852    
;;;853    	if ((Port < 1) || (Port > 8)) return;
002ed6  1e40              SUBS     r0,r0,#1
002ed8  b081              SUB      sp,sp,#4              ;848
002eda  f04f0801          MOV      r8,#1                 ;849
002ede  2808              CMP      r0,#8
;;;854    	
;;;855    	OldPrms.AllParams = NewPrms.AllParams = GetSavedUartParams(Port);
;;;856    	
;;;857    	while (1) {
;;;858    		pos = SubItem(4, pos, STuartparams, 0);
;;;859    		switch (pos) {
;;;860    			case 0: return;
;;;861    			case 1: {	res = (NewPrms.Params.BaudRate & 0x07) + 1;
;;;862    								res = SubItem(6, res, STuartSpeed, res);
;;;863    								if (res) {
;;;864    									NewPrms.Params.BaudRate = res - 1;
;;;865    									if (NewPrms.Params.BaudRate != OldPrms.Params.BaudRate) {
;;;866    										SetUartSpeed(Port, NewPrms.AllParams);
;;;867    										OldPrms.Params.BaudRate = NewPrms.Params.BaudRate;
;;;868    										PutSavedUartParams(Port, NewPrms.AllParams);
;;;869    									}
;;;870    								}
;;;871    							} break;		  
;;;872    			case 2: {	res = ((NewPrms.Params.Parity_Stop & 0x06) >> 1) + 1;
;;;873    								res = SubItem(3, res, STuartParity, res);
;;;874    								if (res) { 
;;;875    									NewPrms.Params.Parity_Stop = (NewPrms.Params.Parity_Stop & ~0x06ul) | ((res - 1) << 1);
;;;876    									if (OldPrms.Params.Parity_Stop != NewPrms.Params.Parity_Stop) {
;;;877    										SetUartParity(Port, NewPrms.AllParams);
;;;878    										OldPrms.Params.Parity_Stop = NewPrms.Params.Parity_Stop;
;;;879    										PutSavedUartParams(Port, NewPrms.AllParams);
;;;880    									}
;;;881    								}	
;;;882    							} break;
;;;883    			case 3: {	res = (NewPrms.Params.Parity_Stop & 0x01) + 1;
;;;884    								res = SubItem(2, res, STuartStop, res);
;;;885    								if (res) {
;;;886    									NewPrms.Params.Parity_Stop = (NewPrms.Params.Parity_Stop & ~0x01ul) | (res - 1);
;;;887    									if (OldPrms.Params.Parity_Stop != NewPrms.Params.Parity_Stop) {
;;;888    										SetUartStopBits(Port, NewPrms.AllParams);
;;;889    										OldPrms.Params.Parity_Stop = NewPrms.Params.Parity_Stop;
;;;890    										PutSavedUartParams(Port, NewPrms.AllParams);								
;;;891    									}
;;;892    								}
;;;893    							} break;
;;;894    			case 4: {	FillData(0, NewPrms.Params.Addr1, 1 ,127, 1, 26, 0, "",0); 
;;;895    								do {res = ChangeParam(1,">>>АДРЕС MODBUS ","   Адрес:       ");
;;;896    									switch (res) {
;;;897    										case 1: {
;;;898    											OldPrms.Params.Addr1 = NewPrms.Params.Addr1 = GetValue(0);
;;;899    											PutSavedUartParams(Port, NewPrms.AllParams);
;;;900    										} break;
;;;901    									} //switch
;;;902    								} while (res); //do
;;;903    							} break;
;;;904    		} //switch
;;;905    	}//while	
;;;906    }
002ee0  bf22              ITTT     CS
002ee2  b001              ADDCS    sp,sp,#4
002ee4  ecbd8b02          VPOPCS   {d8}
002ee8  e8bd8ff0          POPCS    {r4-r11,pc}
002eec  4658              MOV      r0,r11                ;855
002eee  f7fffffe          BL       GetSavedUartParams
002ef2  4604              MOV      r4,r0                 ;855
002ef4  4625              MOV      r5,r4                 ;855
002ef6  f06f0901          MVN      r9,#1                 ;875
002efa  f2400600          MOVW     r6,#:LOWER16: ||.data||;858
002efe  f2c00600          MOVT     r6,#:UPPER16: ||.data||;858
002f02  f04f0a00          MOV      r10,#0                ;858
002f06  ed9f8a8d          VLDR     s16,|L1.12604|
                  |L1.12042|
002f0a  2300              MOVS     r3,#0                 ;858
002f0c  4641              MOV      r1,r8                 ;858
002f0e  2004              MOVS     r0,#4                 ;858
002f10  6e32              LDR      r2,[r6,#0x60]         ;858  ; STuartparams
002f12  f7fffffe          BL       SubItem
002f16  4680              MOV      r8,r0                 ;858
002f18  f1b80f05          CMP      r8,#5                 ;859
002f1c  d2f5              BCS      |L1.12042|
002f1e  e8dff008          TBB      [pc,r8]               ;859
002f22  2403              DCB      0x24,0x03
002f24  23222100          DCB      0x23,0x22,0x21,0x00
002f28  f3c42002          UBFX     r0,r4,#8,#3           ;861
002f2c  1c41              ADDS     r1,r0,#1              ;861
002f2e  460b              MOV      r3,r1                 ;862
002f30  2006              MOVS     r0,#6                 ;862
002f32  6e72              LDR      r2,[r6,#0x64]         ;862  ; STuartSpeed
002f34  f7fffffe          BL       SubItem
002f38  2800              CMP      r0,#0                 ;863
002f3a  d0e6              BEQ      |L1.12042|
002f3c  1e40              SUBS     r0,r0,#1              ;863
002f3e  b2c0              UXTB     r0,r0                 ;864
002f40  f3c52107          UBFX     r1,r5,#8,#8           ;864
002f44  f360240f          BFI      r4,r0,#8,#8           ;864
002f48  4288              CMP      r0,r1                 ;865
002f4a  d0de              BEQ      |L1.12042|
002f4c  4621              MOV      r1,r4                 ;865
002f4e  4658              MOV      r0,r11                ;866
002f50  f7fffffe          BL       SetUartSpeed
002f54  0a20              LSRS     r0,r4,#8              ;866
002f56  f360250f          BFI      r5,r0,#8,#8           ;866
002f5a  4621              MOV      r1,r4                 ;866
002f5c  4658              MOV      r0,r11                ;868
002f5e  f7fffffe          BL       PutSavedUartParams
002f62  e7d2              B        |L1.12042|
002f64  e131              B        |L1.12746|
002f66  e10e              B        |L1.12678|
002f68  e0ea              B        |L1.12608|
002f6a  e15d              B        |L1.12840|
                  |L1.12140|
002f6c  43fa0000          DCFS     0x43fa0000 ; 500
                  |L1.12144|
002f70  00000000          DCFS     0x00000000 ; 0
                  |L1.12148|
002f74  20206455          DCB      "  dUdc<         "
002f78  64633c20
002f7c  20202020
002f80  20202020
                  |L1.12164|
002f84  00                DCB      0
002f85  00                DCB      0
002f86  00                DCB      0
002f87  00                DCB      0
                  |L1.12168|
002f88  3e3ed0c0          DCB      ">>",208,192,199,205,200,214,192," Udc1&2",0
002f8c  c7cdc8d6
002f90  c0205564
002f94  63312632
002f98  00      
002f99  00                DCB      0
002f9a  00                DCB      0
002f9b  00                DCB      0
                  |L1.12188|
002f9c  3dcccccd          DCFS     0x3dcccccd ; 0.10000000149011612
                  |L1.12192|
002fa0  204100            DCB      " A",0
002fa3  00                DCB      0
                  |L1.12196|
002fa4  d2eeea20          DCB      210,238,234," 1 ",212,224,231,224," ",192,"    I1a:  ",0
002fa8  3120d4e0
002fac  e7e020c0
002fb0  20202020
002fb4  4931613a
002fb8  202000  
002fbb  00                DCB      0
                  |L1.12220|
002fbc  d2eeea20          DCB      210,238,234," 1 ",212,224,231,224," B    I1b:  ",0
002fc0  3120d4e0
002fc4  e7e02042
002fc8  20202020
002fcc  4931623a
002fd0  202000  
002fd3  00                DCB      0
                  |L1.12244|
002fd4  d2eeea20          DCB      210,238,234," 1 ",212,224,231,224," C    I1c:  ",0
002fd8  3120d4e0
002fdc  e7e02043
002fe0  20202020
002fe4  4931633a
002fe8  202000  
002feb  00                DCB      0
                  |L1.12268|
002fec  d2eeea20          DCB      210,238,234," 2 ",212,224,231,224," ",192,"    I2a:  ",0
002ff0  3220d4e0
002ff4  e7e020c0
002ff8  20202020
002ffc  4932613a
003000  202000  
003003  00                DCB      0
                  |L1.12292|
003004  d2eeea20          DCB      210,238,234," 2 ",212,224,231,224," B    I2b:  ",0
003008  3220d4e0
00300c  e7e02042
003010  20202020
003014  4932623a
003018  202000  
00301b  00                DCB      0
                  |L1.12316|
00301c  d2eeea20          DCB      210,238,234," 2 ",212,224,231,224," C    I2c:  ",0
003020  3220d4e0
003024  e7e02043
003028  20202020
00302c  4932633a
003030  202000  
003033  00                DCB      0
                  |L1.12340|
003034  204200            DCB      " B",0
003037  00                DCB      0
                  |L1.12344|
003038  cde0eff0          DCB      205,224,239,240,255,230,229,237,232,229," Udc1 Udc1: ",0
00303c  ffe6e5ed
003040  e8e52055
003044  64633120
003048  55646331
00304c  3a2000  
00304f  00                DCB      0
                  |L1.12368|
003050  cde0eff0          DCB      205,224,239,240,255,230,229,237,232,229," Udc2 Udc2: ",0
003054  ffe6e5ed
003058  e8e52055
00305c  64633220
003060  55646332
003064  3a2000  
003067  00                DCB      0
                  |L1.12392|
003068  cde0eff0          DCB      205,224,239,240,255,230,229,237,232,229," Uab  Uab:  ",0
00306c  ffe6e5ed
003070  e8e52055
003074  61622020
003078  5561623a
00307c  202000  
00307f  00                DCB      0
                  |L1.12416|
003080  cde0eff0          DCB      205,224,239,240,255,230,229,237,232,229," Ubc  Ubc:  ",0
003084  ffe6e5ed
003088  e8e52055
00308c  62632020
003090  5562633a
003094  202000  
003097  00                DCB      0
                  |L1.12440|
003098  cde0eff0          DCB      205,224,239,240,255,230,229,237,232,229," Uca  Uca:  ",0
00309c  ffe6e5ed
0030a0  e8e52055
0030a4  63612020
0030a8  5563613a
0030ac  202000  
0030af  00                DCB      0
                  |L1.12464|
0030b0  d3d1d2c0          DCB      211,209,210,192,205,206,194,".",205,211,203,200," DC?",0
0030b4  cdcec22e
0030b8  cdd3cbc8
0030bc  2044433f
0030c0  00      
0030c1  00                DCB      0
0030c2  00                DCB      0
0030c3  00                DCB      0
                  |L1.12484|
0030c4  d3d1d2c0          DCB      211,209,210,192,205,206,194,".",205,211,203,200," Us?",0
0030c8  cdcec22e
0030cc  cdd3cbc8
0030d0  2055733f
0030d4  00      
0030d5  00                DCB      0
0030d6  00                DCB      0
0030d7  00                DCB      0
                  |L1.12504|
0030d8  d3d1d2c0          DCB      211,209,210,192,205,206,194,".",205,211,203,200," I1?",0
0030dc  cdcec22e
0030e0  cdd3cbc8
0030e4  2049313f
0030e8  00      
0030e9  00                DCB      0
0030ea  00                DCB      0
0030eb  00                DCB      0
                  |L1.12524|
0030ec  d3d1d2c0          DCB      211,209,210,192,205,206,194,".",205,211,203,200," I2?",0
0030f0  cdcec22e
0030f4  cdd3cbc8
0030f8  2049323f
0030fc  00      
0030fd  00                DCB      0
0030fe  00                DCB      0
0030ff  00                DCB      0
                  |L1.12544|
003100  d3d1d2c0          DCB      211,209,210,192,205,206,194,".",205,211,203,200," I3?",0
003104  cdcec22e
003108  cdd3cbc8
00310c  2049333f
003110  00      
003111  00                DCB      0
003112  00                DCB      0
003113  00                DCB      0
                  |L1.12564|
003114  d3d1d2c0          DCB      211,209,210,192,205,206,194,".",205,211,203,200," I4?",0
003118  cdcec22e
00311c  cdd3cbc8
003120  2049343f
003124  00      
003125  00                DCB      0
003126  00                DCB      0
003127  00                DCB      0
                  |L1.12584|
003128  d1ced5d0          DCB      209,206,213,208,". ",207,192,208,192,204,197,210,208,219
00312c  2e20cfc0
003130  d0c0ccc5
003134  d2d0db  
003137  3f00              DCB      "?",0
003139  00                DCB      0
00313a  00                DCB      0
00313b  00                DCB      0
                  |L1.12604|
00313c  42fe0000          DCFS     0x42fe0000 ; 127
                  |L1.12608|
003140  b2e7              UXTB     r7,r4                 ;868
003142  f3c70041          UBFX     r0,r7,#1,#2           ;872
003146  1c41              ADDS     r1,r0,#1              ;872
003148  460b              MOV      r3,r1                 ;873
00314a  2003              MOVS     r0,#3                 ;873
00314c  6eb2              LDR      r2,[r6,#0x68]         ;873  ; STuartParity
00314e  f7fffffe          BL       SubItem
003152  2800              CMP      r0,#0                 ;874
003154  f43faed9          BEQ      |L1.12042|
003158  f0270106          BIC      r1,r7,#6              ;875
00315c  eb090040          ADD      r0,r9,r0,LSL #1       ;875
003160  4308              ORRS     r0,r0,r1              ;875
003162  b2c0              UXTB     r0,r0                 ;875
003164  b2e9              UXTB     r1,r5                 ;875
003166  f3600407          BFI      r4,r0,#0,#8           ;875
00316a  4281              CMP      r1,r0                 ;876
00316c  f43faecd          BEQ      |L1.12042|
003170  4621              MOV      r1,r4                 ;876
003172  4658              MOV      r0,r11                ;877
003174  f7fffffe          BL       SetUartParity
003178  f3640507          BFI      r5,r4,#0,#8           ;877
00317c  4621              MOV      r1,r4                 ;877
00317e  4658              MOV      r0,r11                ;879
003180  f7fffffe          BL       PutSavedUartParams
003184  e6c1              B        |L1.12042|
                  |L1.12678|
003186  b2e7              UXTB     r7,r4                 ;879
003188  f0070001          AND      r0,r7,#1              ;883
00318c  1c41              ADDS     r1,r0,#1              ;883
00318e  460b              MOV      r3,r1                 ;884
003190  2002              MOVS     r0,#2                 ;884
003192  6ef2              LDR      r2,[r6,#0x6c]         ;884  ; STuartStop
003194  f7fffffe          BL       SubItem
003198  2800              CMP      r0,#0                 ;885
00319a  f43faeb6          BEQ      |L1.12042|
00319e  f0270101          BIC      r1,r7,#1              ;886
0031a2  1e40              SUBS     r0,r0,#1              ;886
0031a4  4308              ORRS     r0,r0,r1              ;886
0031a6  b2c0              UXTB     r0,r0                 ;886
0031a8  b2e9              UXTB     r1,r5                 ;886
0031aa  f3600407          BFI      r4,r0,#0,#8           ;886
0031ae  4281              CMP      r1,r0                 ;887
0031b0  f43faeab          BEQ      |L1.12042|
0031b4  4621              MOV      r1,r4                 ;887
0031b6  4658              MOV      r0,r11                ;888
0031b8  f7fffffe          BL       SetUartStopBits
0031bc  f3640507          BFI      r5,r4,#0,#8           ;888
0031c0  4621              MOV      r1,r4                 ;888
0031c2  4658              MOV      r0,r11                ;890
0031c4  f7fffffe          BL       PutSavedUartParams
0031c8  e69f              B        |L1.12042|
                  |L1.12746|
0031ca  f3c44007          UBFX     r0,r4,#16,#8          ;894
0031ce  ee000a10          VMOV     s0,r0                 ;894
0031d2  eeb80a40          VCVT.F32.U32 s0,s0                 ;894
0031d6  f2af2354          ADR      r3,|L1.12164|
0031da  2200              MOVS     r2,#0                 ;894
0031dc  211a              MOVS     r1,#0x1a              ;894
0031de  eef71a00          VMOV.F32 s3,#1.00000000        ;894
0031e2  eeb01a48          VMOV.F32 s2,s16                ;894
0031e6  eef70a00          VMOV.F32 s1,#1.00000000        ;894
0031ea  4610              MOV      r0,r2                 ;894
0031ec  f8cda000          STR      r10,[sp,#0]           ;894
0031f0  f7fffffe          BL       FillData
                  |L1.12788|
0031f4  a2d4              ADR      r2,|L1.13640|
0031f6  a1d9              ADR      r1,|L1.13660|
0031f8  2001              MOVS     r0,#1                 ;895
0031fa  f7fffffe          BL       ChangeParam
0031fe  2801              CMP      r0,#1                 ;896
003200  d002              BEQ      |L1.12808|
003202  2800              CMP      r0,#0                 ;902
003204  d1f6              BNE      |L1.12788|
003206  e680              B        |L1.12042|
                  |L1.12808|
003208  2000              MOVS     r0,#0                 ;898
00320a  f7fffffe          BL       GetValue
00320e  eebc0ac0          VCVT.U32.F32 s0,s0                 ;898
003212  ee100a10          VMOV     r0,s0                 ;898
003216  f3604417          BFI      r4,r0,#16,#8          ;898
00321a  f3604517          BFI      r5,r0,#16,#8          ;898
00321e  4621              MOV      r1,r4                 ;898
003220  4658              MOV      r0,r11                ;899
003222  f7fffffe          BL       PutSavedUartParams
003226  e7e5              B        |L1.12788|
                  |L1.12840|
003228  b001              ADD      sp,sp,#4
00322a  ecbd8b02          VPOP     {d8}
00322e  e8bd8ff0          POP      {r4-r11,pc}
;;;907    	
                          ENDP

                  SubMenuProtocol PROC
;;;908    void SubMenuProtocol(void) {
003232  b510              PUSH     {r4,lr}
;;;909    int pos = 1;
003234  2001              MOVS     r0,#1
;;;910    	while (1) {
;;;911    		pos = SubItem(3,pos,STuarts,0);
003236  f2400400          MOVW     r4,#:LOWER16: ||.data||
00323a  f2c00400          MOVT     r4,#:UPPER16: ||.data||
                  |L1.12862|
00323e  4601              MOV      r1,r0
003240  2300              MOVS     r3,#0
003242  2003              MOVS     r0,#3
003244  6de2              LDR      r2,[r4,#0x5c]  ; STuarts
003246  f7fffffe          BL       SubItem
;;;912    		switch (pos) {
00324a  2800              CMP      r0,#0
00324c  d1f7              BNE      |L1.12862|
;;;913    			case 0: return;
;;;914    //		  case 1: {__SubMenuProtocol(X6);} break;
;;;915    //			case 2: {__SubMenuProtocol(X7);} break;
;;;916    //			case 3: {__SubMenuProtocol(X13);} break;
;;;917    		} //switch
;;;918    	}//while	
;;;919    }
00324e  bd10              POP      {r4,pc}
;;;920    
                          ENDP

                  MainMenu PROC
;;;921    
;;;922    void MainMenu() {
003250  e92d41f0          PUSH     {r4-r8,lr}
;;;923    int pos = 1;
003254  2601              MOVS     r6,#1
003256  46b0              MOV      r8,r6
;;;924    
;;;925    	while (1) {
;;;926    		pos = SubItem(8,pos,STmainmenu,0);
;;;927    		switch (pos) {
;;;928    			case 0: { return; } break;
;;;929    			case 1: { Monitor(&EvPrms);	} 	break;
003258  f2400700          MOVW     r7,#:LOWER16: Metro
00325c  f2c00700          MOVT     r7,#:UPPER16: Metro
003260  f2400500          MOVW     r5,#:LOWER16: ||.data||;926
003264  f2c00500          MOVT     r5,#:UPPER16: ||.data||;926
                  |L1.12904|
003268  2300              MOVS     r3,#0                 ;926
00326a  4631              MOV      r1,r6                 ;926
00326c  2008              MOVS     r0,#8                 ;926
00326e  682a              LDR      r2,[r5,#0]            ;926  ; STmainmenu
003270  f7fffffe          BL       SubItem
003274  4606              MOV      r6,r0                 ;926
003276  2e09              CMP      r6,#9                 ;927
003278  d2f6              BCS      |L1.12904|
00327a  e8dff006          TBB      [pc,r6]               ;927
00327e  6406              DCB      0x64,0x06
003280  0d101305          DCB      0x0d,0x10,0x13,0x05
003284  3c3f5a00          DCB      0x3c,0x3f,0x5a,0x00
003288  e7ee              B        |L1.12904|
00328a  f2400000          MOVW     r0,#:LOWER16: Metro
00328e  f2c00000          MOVT     r0,#:UPPER16: Metro
003292  f7fffffe          BL       Monitor
003296  e7e7              B        |L1.12904|
;;;930    			case 2: { EventLog();				}   break;
003298  f7fffffe          BL       EventLog
00329c  e7e4              B        |L1.12904|
;;;931    			case 3: { SubMenuConfig();	}		break;
00329e  f7fffffe          BL       SubMenuConfig
0032a2  e7e1              B        |L1.12904|
0032a4  2401              MOVS     r4,#1
                  |L1.12966|
0032a6  2300              MOVS     r3,#0
0032a8  4621              MOV      r1,r4
0032aa  2003              MOVS     r0,#3
0032ac  686a              LDR      r2,[r5,#4]  ; STregs
0032ae  f7fffffe          BL       SubItem
0032b2  0004              MOVS     r4,r0
0032b4  d0d8              BEQ      |L1.12904|
0032b6  2c01              CMP      r4,#1
0032b8  d014              BEQ      |L1.13028|
0032ba  2c02              CMP      r4,#2
0032bc  bf02              ITTT     EQ
0032be  f2400100          MOVWEQ   r1,#:LOWER16: ||.text||+4192
0032c2  f2c00100          MOVTEQ   r1,#:UPPER16: ||.text||+4192
0032c6  f60760b4          ADDEQ    r0,r7,#0xeb4
0032ca  d008              BEQ      |L1.13022|
0032cc  2c03              CMP      r4,#3
0032ce  bf02              ITTT     EQ
0032d0  f2400100          MOVWEQ   r1,#:LOWER16: ||.text||+4212
0032d4  f2c00100          MOVTEQ   r1,#:UPPER16: ||.text||+4212
0032d8  f60760b8          ADDEQ    r0,r7,#0xeb8
0032dc  d1e3              BNE      |L1.12966|
                  |L1.13022|
0032de  f7fffffe          BL       _SubMenuRegs
0032e2  e7e0              B        |L1.12966|
                  |L1.13028|
0032e4  f2400100          MOVW     r1,#:LOWER16: ||.text||+4232
0032e8  f2c00100          MOVT     r1,#:UPPER16: ||.text||+4232
0032ec  f507606b          ADD      r0,r7,#0xeb0
0032f0  f7fffffe          BL       _SubMenuRegs
0032f4  e7d7              B        |L1.12966|
;;;932    			case 4:	{	SubMenuRegs();		}		break;
;;;933    			case 6:	{ SubMenuAlarms();	} 	break;
0032f6  f7fffffe          BL       SubMenuAlarms
0032fa  e7b5              B        |L1.12904|
0032fc  2401              MOVS     r4,#1
                  |L1.13054|
0032fe  2300              MOVS     r3,#0
003300  4621              MOV      r1,r4
003302  2003              MOVS     r0,#3
003304  6caa              LDR      r2,[r5,#0x48]  ; STservice
003306  f7fffffe          BL       SubItem
00330a  0004              MOVS     r4,r0
00330c  d0ac              BEQ      |L1.12904|
00330e  2c01              CMP      r4,#1
003310  d0f5              BEQ      |L1.13054|
003312  2c02              CMP      r4,#2
003314  d004              BEQ      |L1.13088|
003316  2c03              CMP      r4,#3
003318  bf08              IT       EQ
00331a  f7fffffe          BLEQ     SubMenuSensors
00331e  e7ee              B        |L1.13054|
                  |L1.13088|
003320  f2af10fc          ADR      r0,|L1.12584|
003324  f7fffffe          BL       SubMenuAsk
003328  2800              CMP      r0,#0
00332a  bf18              IT       NE
00332c  f8a78200          STRHNE   r8,[r7,#0x200]
003330  e7e5              B        |L1.13054|
003332  2001              MOVS     r0,#1
                  |L1.13108|
003334  4601              MOV      r1,r0
003336  2300              MOVS     r3,#0
003338  2003              MOVS     r0,#3
00333a  6dea              LDR      r2,[r5,#0x5c]  ; STuarts
00333c  f7fffffe          BL       SubItem
003340  2800              CMP      r0,#0
003342  d1f7              BNE      |L1.13108|
003344  e790              B        |L1.12904|
;;;934    			case 7:	{ SubMenuService();	} 	break;
;;;935    			case 8: { SubMenuProtocol();} 	break;
;;;936    		} //switch
;;;937    	}//while
;;;938    }//Menu
003346  e8bd81f0          POP      {r4-r8,pc}
;;;939    
                          ENDP

                  ReadyList PROC
;;;940    
;;;941    void ReadyList(int *ViewStr) {
00334a  b4f0              PUSH     {r4-r7}
;;;942    int i;
;;;943    unsigned int ReadyCode;
;;;944    int CountViewStr = 0;
00334c  2200              MOVS     r2,#0
;;;945    int RealViewStr  = 0;
;;;946    int MaxViewStr   = 0;
;;;947    
;;;948      if (*ViewStr < 0) {*ViewStr = 0;}
00334e  6801              LDR      r1,[r0,#0]
003350  4613              MOV      r3,r2                 ;945
003352  4694              MOV      r12,r2                ;946
003354  2900              CMP      r1,#0
003356  bfbc              ITT      LT
003358  2100              MOVLT    r1,#0
00335a  6001              STRLT    r1,[r0,#0]
;;;949      ReadyCode = EvPrms.ReadyWord1;
00335c  f2400100          MOVW     r1,#:LOWER16: Metro
003360  f2c00100          MOVT     r1,#:UPPER16: Metro
;;;950    
;;;951      for (i = 0; i < 32; ) {
003364  6a0c              LDR      r4,[r1,#0x20]  ; Metro
003366  2100              MOVS     r1,#0
;;;952    		if (ReadyCode & (1ul << i++)) { 
003368  2501              MOVS     r5,#1
                  |L1.13162|
00336a  fa05f601          LSL      r6,r5,r1
00336e  4226              TST      r6,r4
003370  f1010101          ADD      r1,r1,#1
003374  d005              BEQ      |L1.13186|
;;;953    			CountViewStr++; 
;;;954    			MaxViewStr = i;
;;;955    			if (CountViewStr == *ViewStr) {RealViewStr = i;}
003376  6806              LDR      r6,[r0,#0]
003378  1c52              ADDS     r2,r2,#1
00337a  468c              MOV      r12,r1                ;954
00337c  4296              CMP      r6,r2
00337e  bf08              IT       EQ
003380  4663              MOVEQ    r3,r12
                  |L1.13186|
003382  2920              CMP      r1,#0x20              ;951
003384  dbf1              BLT      |L1.13162|
;;;956    		}//if
;;;957    	}  //for
;;;958    
;;;959      if (*ViewStr > CountViewStr) {*ViewStr = CountViewStr; RealViewStr = MaxViewStr;}
003386  6801              LDR      r1,[r0,#0]
003388  4291              CMP      r1,r2
00338a  bfc4              ITT      GT
00338c  6002              STRGT    r2,[r0,#0]
00338e  4663              MOVGT    r3,r12
;;;960    
;;;961      switch (RealViewStr) {
003390  2b09              CMP      r3,#9
003392  d242              BCS      |L1.13338|
003394  e8dff003          TBB      [pc,r3]
003398  050b111a          DCB      0x05,0x0b,0x11,0x1a
00339c  23292f35          DCB      0x23,0x29,0x2f,0x35
0033a0  3b00              DCB      0x3b,0x00
;;;962    	case 0:	{lcdout(16,16,"НЕ ГОТОВ       }");} break;
0033a2  bcf0              POP      {r4-r7}
0033a4  2110              MOVS     r1,#0x10
0033a6  a272              ADR      r2,|L1.13680|
0033a8  4608              MOV      r0,r1
0033aa  f7ffbffe          B.W      lcdout
;;;963    	case 1:	{lcdout(16,16,">Не квит.защита ");} break;
0033ae  bcf0              POP      {r4-r7}
0033b0  2110              MOVS     r1,#0x10
0033b2  a274              ADR      r2,|L1.13700|
0033b4  4608              MOV      r0,r1
0033b6  f7ffbffe          B.W      lcdout
;;;964    	case 2:	{lcdout(16,16,">TIM1 BKIN      ");} break;
0033ba  f2400200          MOVW     r2,#:LOWER16: ||.text||+1072
0033be  f2c00200          MOVT     r2,#:UPPER16: ||.text||+1072
0033c2  bcf0              POP      {r4-r7}
0033c4  2110              MOVS     r1,#0x10
0033c6  4608              MOV      r0,r1
0033c8  f7ffbffe          B.W      lcdout
;;;965    	case 3:	{lcdout(16,16,">TIM8 BKIN      ");} break;
0033cc  f2400200          MOVW     r2,#:LOWER16: ||.text||+1092
0033d0  f2c00200          MOVT     r2,#:UPPER16: ||.text||+1092
0033d4  bcf0              POP      {r4-r7}
0033d6  2110              MOVS     r1,#0x10
0033d8  4608              MOV      r0,r1
0033da  f7ffbffe          B.W      lcdout
;;;966    	case 4:	{lcdout(16,16,">Статус IGBT    ");} break;
0033de  bcf0              POP      {r4-r7}
0033e0  2110              MOVS     r1,#0x10
0033e2  a26d              ADR      r2,|L1.13720|
0033e4  4608              MOV      r0,r1
0033e6  f7ffbffe          B.W      lcdout
;;;967    	case 5:	{lcdout(16,16,">Низкое Udc     ");} break;
0033ea  bcf0              POP      {r4-r7}
0033ec  2110              MOVS     r1,#0x10
0033ee  a26f              ADR      r2,|L1.13740|
0033f0  4608              MOV      r0,r1
0033f2  f7ffbffe          B.W      lcdout
;;;968    	case 6:	{lcdout(16,16,">Низкое Ucинхр. ");} break;
0033f6  bcf0              POP      {r4-r7}
0033f8  2110              MOVS     r1,#0x10
0033fa  a271              ADR      r2,|L1.13760|
0033fc  4608              MOV      r0,r1
0033fe  f7ffbffe          B.W      lcdout
;;;969    	case 7:	{lcdout(16,16,">Идет заряд     ");} break;
003402  bcf0              POP      {r4-r7}
003404  2110              MOVS     r1,#0x10
003406  a273              ADR      r2,|L1.13780|
003408  4608              MOV      r0,r1
00340a  f7ffbffe          B.W      lcdout
;;;970    	case 8:	{lcdout(16,16,">АС не включен  ");} break;
00340e  bcf0              POP      {r4-r7}
003410  2110              MOVS     r1,#0x10
003412  a275              ADR      r2,|L1.13800|
003414  4608              MOV      r0,r1
003416  f7ffbffe          B.W      lcdout
                  |L1.13338|
;;;971    	
;;;972      default:{lcdout(16,16,">ОШИБКА         ");} break;
00341a  bcf0              POP      {r4-r7}
00341c  2110              MOVS     r1,#0x10
00341e  a277              ADR      r2,|L1.13820|
003420  4608              MOV      r0,r1
003422  f7ffbffe          B.W      lcdout
;;;973    				 		} //switch
;;;974    }
;;;975    
                          ENDP

                  Display PROC
;;;978    	
;;;979    void Display(void) {
003426  b082              SUB      sp,sp,#8
;;;980    int PultKeyb = 0;
;;;981    int ViewStr = 0;
003428  2600              MOVS     r6,#0
;;;982    int amp = 0;	
;;;983    
;;;984    ClearPultKeyb();
00342a  f2400000          MOVW     r0,#:LOWER16: WorkPultKeyb
00342e  f2c00000          MOVT     r0,#:UPPER16: WorkPultKeyb
003432  9600              STR      r6,[sp,#0]
;;;985    while (1) {
;;;986    	do {PultKeyb = WaitPultReady();} while (PultKeyb == 0);			/* Ожидаем завершения передачи и получения нажатых кнопок на пульте	*/
;;;987    	ClearScreen();
;;;988    	
;;;989    	amp = Metro.AMP1;
003434  f2400500          MOVW     r5,#:LOWER16: Metro
003438  f2c00500          MOVT     r5,#:UPPER16: Metro
00343c  f5055400          ADD      r4,r5,#0x2000
003440  6006              STR      r6,[r0,#0]  ; WorkPultKeyb
                  |L1.13378|
003442  f7fffffe          BL       WaitPultReady
003446  0007              MOVS     r7,r0                 ;986
003448  d0fb              BEQ      |L1.13378|
00344a  f7fffffe          BL       ClearScreen
;;;990    	
;;;991    	switch (PultKeyb & 0x7F) {
00344e  f007007f          AND      r0,r7,#0x7f
003452  f8d4131c          LDR      r1,[r4,#0x31c]  ; Metro
003456  2808              CMP      r0,#8
;;;992    #ifdef HEAD2
;;;993    		case K_Plus:	{PrgData.TestAMP++; if (PrgData.TestAMP > 5000) PrgData.TestAMP = 5000; } break;
;;;994    		case K_Minus:	{PrgData.TestAMP--; if (PrgData.TestAMP < 100) PrgData.TestAMP = 100; } break;
;;;995    		case (K_Plus | K_Shift):	{PrgData.TestAMP+=10; if (PrgData.TestAMP > 5000) PrgData.TestAMP = 5000; } break;
;;;996    		case (K_Minus | K_Shift):	{PrgData.TestAMP-=10; if (PrgData.TestAMP < 100) PrgData.TestAMP = 100; } break;
;;;997    #else
;;;998    		case K_Plus:	{amp += 100; if (amp > Metro.ARR) {amp = Metro.ARR;} Metro.AMP1 = amp;} break;
;;;999    		case K_Minus:	{amp -= 100; if (amp < 0) 				 {amp = 0;} 				Metro.AMP1 = amp;} break;
;;;1000   #endif
;;;1001   
;;;1002   		case K_Up:		ViewStr--; break;
003458  bf04              ITT      EQ
00345a  9800              LDREQ    r0,[sp,#0]
00345c  1e40              SUBEQ    r0,r0,#1
00345e  d024              BEQ      |L1.13482|
003460  dc0d              BGT      |L1.13438|
003462  2801              CMP      r0,#1                 ;991
003464  d01c              BEQ      |L1.13472|
003466  2802              CMP      r0,#2                 ;991
;;;1003   		case K_Down:	ViewStr++; break;
003468  bf04              ITT      EQ
00346a  9800              LDREQ    r0,[sp,#0]
00346c  1c40              ADDEQ    r0,r0,#1
00346e  d01c              BEQ      |L1.13482|
003470  2803              CMP      r0,#3                 ;991
;;;1004   		case K_Left:	ViewStr = 0; break;
003472  bf08              IT       EQ
003474  9600              STREQ    r6,[sp,#0]
003476  d02a              BEQ      |L1.13518|
003478  2804              CMP      r0,#4                 ;991
00347a  d007              BEQ      |L1.13452|
00347c  e027              B        |L1.13518|
                  |L1.13438|
00347e  280c              CMP      r0,#0xc               ;991
003480  d023              BEQ      |L1.13514|
003482  2810              CMP      r0,#0x10              ;991
003484  d013              BEQ      |L1.13486|
003486  2820              CMP      r0,#0x20              ;991
003488  d018              BEQ      |L1.13500|
00348a  e020              B        |L1.13518|
                  |L1.13452|
00348c  f1010064          ADD      r0,r1,#0x64           ;998
003490  f8d4134c          LDR      r1,[r4,#0x34c]        ;998  ; Metro
003494  4281              CMP      r1,r0                 ;998
003496  bfb8              IT       LT                    ;998
003498  4608              MOVLT    r0,r1                 ;998
                  |L1.13466|
00349a  f8c4031c          STR      r0,[r4,#0x31c]        ;998  ; Metro
00349e  e016              B        |L1.13518|
                  |L1.13472|
0034a0  f1b10064          SUBS     r0,r1,#0x64           ;999
0034a4  bf48              IT       MI                    ;999
0034a6  2000              MOVMI    r0,#0                 ;999
0034a8  e7f7              B        |L1.13466|
                  |L1.13482|
0034aa  9000              STR      r0,[sp,#0]            ;1002
0034ac  e00f              B        |L1.13518|
                  |L1.13486|
;;;1005   		case K_Ena:		{Metro.NeedEnable  |= 1;} break;
0034ae  f8b40302          LDRH     r0,[r4,#0x302]  ; Metro
0034b2  f0400001          ORR      r0,r0,#1
0034b6  f8a40302          STRH     r0,[r4,#0x302]
0034ba  e008              B        |L1.13518|
                  |L1.13500|
;;;1006   		case K_Dis:		{Metro.NeedDisable |= 1;} break;
0034bc  f8b40300          LDRH     r0,[r4,#0x300]  ; Metro
0034c0  f0400001          ORR      r0,r0,#1
0034c4  f8a40300          STRH     r0,[r4,#0x300]
0034c8  e001              B        |L1.13518|
                  |L1.13514|
;;;1007   		case K_Enter:	{MainMenu();} break;
0034ca  f7fffffe          BL       MainMenu
                  |L1.13518|
;;;1008   	} /* switch (PultKeyb & 0x7F) */
;;;1009   	
;;;1010   	switch (StdPrms.Status)	{
0034ce  f9b50218          LDRSH    r0,[r5,#0x218]  ; Metro
0034d2  2808              CMP      r0,#8
0034d4  d227              BCS      |L1.13606|
0034d6  e8dff000          TBB      [pc,r0]
0034da  2604              DCB      0x26,0x04
0034dc  0e262614          DCB      0x0e,0x26,0x26,0x14
0034e0  1a20              DCB      0x1a,0x20
;;;1011   		case  1:	if (EvPrms.AlarmWord1 == 0) {ReadyList(&ViewStr);} else {AlarmList(EvPrms.AlarmWord1, &ViewStr);} break;
0034e2  6aa8              LDR      r0,[r5,#0x28]  ; Metro
0034e4  b118              CBZ      r0,|L1.13550|
0034e6  4669              MOV      r1,sp
0034e8  f7fffffe          BL       AlarmList
0034ec  e020              B        |L1.13616|
                  |L1.13550|
0034ee  4668              MOV      r0,sp
0034f0  f7fffffe          BL       ReadyList
0034f4  e01c              B        |L1.13616|
;;;1012   		case 	2:	lcdout(16,16,"ГОТОВ           "); break;
0034f6  2110              MOVS     r1,#0x10
0034f8  a245              ADR      r2,|L1.13840|
0034fa  4608              MOV      r0,r1
0034fc  f7fffffe          BL       lcdout
003500  e016              B        |L1.13616|
;;;1013   		case  5:  lcdout(16,16,"РАБОТА          "); break;
003502  2110              MOVS     r1,#0x10
003504  a247              ADR      r2,|L1.13860|
003506  4608              MOV      r0,r1
003508  f7fffffe          BL       lcdout
00350c  e010              B        |L1.13616|
;;;1014   		case  6:  lcdout(16,16,"СПЯЩИЙ РЕЖИМ    "); break;
00350e  2110              MOVS     r1,#0x10
003510  a249              ADR      r2,|L1.13880|
003512  4608              MOV      r0,r1
003514  f7fffffe          BL       lcdout
003518  e00a              B        |L1.13616|
;;;1015   		case  7:  lcdout(16,16,"ДИОДНЫЙ РЕЖИМ   "); break;
00351a  2110              MOVS     r1,#0x10
00351c  a24b              ADR      r2,|L1.13900|
00351e  4608              MOV      r0,r1
003520  f7fffffe          BL       lcdout
003524  e004              B        |L1.13616|
                  |L1.13606|
;;;1016   		default:	lcdout(16,16,"                "); break;
003526  2110              MOVS     r1,#0x10
003528  a24d              ADR      r2,|L1.13920|
00352a  4608              MOV      r0,r1
00352c  f7fffffe          BL       lcdout
                  |L1.13616|
;;;1017   	}
;;;1018   
;;;1019   #ifdef HEAD2
;;;1020   //	lcdouthex4(8,PrgData.TestAMP);
;;;1021   	lcdouthex4(8,PrgData.FiltIncPhase1);
;;;1022   #endif
;;;1023   	
;;;1024   	lcdouthex4(0, Metro.AMP1);
003530  f8b4031c          LDRH     r0,[r4,#0x31c]  ; Metro
003534  b201              SXTH     r1,r0
003536  2000              MOVS     r0,#0
003538  f7fffffe          BL       lcdouthex4
                  |L1.13628|
;;;1025   //	lcdouthex4(8, Metro.WorkRefUdc >> 16);
;;;1026   
;;;1027   	/* Инидикатор наличия связи по CAN или счетчик ее отсутвия	*/
;;;1028   //	if (StdPrms.CANLink1 < 5) {lcdout(10, 6, " СВЯЗЬ");} else {lcdouthex4(10, StdPrms.CANLink1);}
;;;1029   	
;;;1030   	while (PultRefresh());
00353c  f7fffffe          BL       PultRefresh
003540  2800              CMP      r0,#0
003542  d1fb              BNE      |L1.13628|
003544  e77d              B        |L1.13378|
;;;1031   	} /* while (1) */
;;;1032   }	/* void Display() */	
;;;1033   
                          ENDP

003546  0000              DCW      0x0000
                  |L1.13640|
003548  202020c0          DCB      "   ",192,228,240,229,241,":       ",0
00354c  e4f0e5f1
003550  3a202020
003554  20202020
003558  00      
003559  00                DCB      0
00355a  00                DCB      0
00355b  00                DCB      0
                  |L1.13660|
00355c  3e3e3ec0          DCB      ">>>",192,196,208,197,209," MODBUS ",0
003560  c4d0c5d1
003564  204d4f44
003568  42555320
00356c  00      
00356d  00                DCB      0
00356e  00                DCB      0
00356f  00                DCB      0
                  |L1.13680|
003570  cdc520c3          DCB      205,197," ",195,206,210,206,194,"       }",0
003574  ced2cec2
003578  20202020
00357c  2020207d
003580  00      
003581  00                DCB      0
003582  00                DCB      0
003583  00                DCB      0
                  |L1.13700|
003584  3ecde520          DCB      ">",205,229," ",234,226,232,242,".",231,224,249,232,242,224
003588  eae2e8f2
00358c  2ee7e0f9
003590  e8f2e0  
003593  2000              DCB      " ",0
003595  00                DCB      0
003596  00                DCB      0
003597  00                DCB      0
                  |L1.13720|
003598  3ed1f2e0          DCB      ">",209,242,224,242,243,241," IGBT    ",0
00359c  f2f3f120
0035a0  49474254
0035a4  20202020
0035a8  00      
0035a9  00                DCB      0
0035aa  00                DCB      0
0035ab  00                DCB      0
                  |L1.13740|
0035ac  3ecde8e7          DCB      ">",205,232,231,234,238,229," Udc     ",0
0035b0  eaeee520
0035b4  55646320
0035b8  20202020
0035bc  00      
0035bd  00                DCB      0
0035be  00                DCB      0
0035bf  00                DCB      0
                  |L1.13760|
0035c0  3ecde8e7          DCB      ">",205,232,231,234,238,229," Uc",232,237,245,240,". ",0
0035c4  eaeee520
0035c8  5563e8ed
0035cc  f5f02e20
0035d0  00      
0035d1  00                DCB      0
0035d2  00                DCB      0
0035d3  00                DCB      0
                  |L1.13780|
0035d4  3ec8e4e5          DCB      ">",200,228,229,242," ",231,224,240,255,228,"     ",0
0035d8  f220e7e0
0035dc  f0ffe420
0035e0  20202020
0035e4  00      
0035e5  00                DCB      0
0035e6  00                DCB      0
0035e7  00                DCB      0
                  |L1.13800|
0035e8  3ec0d120          DCB      ">",192,209," ",237,229," ",226,234,235,254,247,229,237," "
0035ec  ede520e2
0035f0  eaebfef7
0035f4  e5ed20  
0035f7  2000              DCB      " ",0
0035f9  00                DCB      0
0035fa  00                DCB      0
0035fb  00                DCB      0
                  |L1.13820|
0035fc  3eced8c8          DCB      ">",206,216,200,193,202,192,"         ",0
003600  c1cac020
003604  20202020
003608  20202020
00360c  00      
00360d  00                DCB      0
00360e  00                DCB      0
00360f  00                DCB      0
                  |L1.13840|
003610  c3ced2ce          DCB      195,206,210,206,194,"           ",0
003614  c2202020
003618  20202020
00361c  20202020
003620  00      
003621  00                DCB      0
003622  00                DCB      0
003623  00                DCB      0
                  |L1.13860|
003624  d0c0c1ce          DCB      208,192,193,206,210,192,"          ",0
003628  d2c02020
00362c  20202020
003630  20202020
003634  00      
003635  00                DCB      0
003636  00                DCB      0
003637  00                DCB      0
                  |L1.13880|
003638  d1cfdfd9          DCB      209,207,223,217,200,201," ",208,197,198,200,204,"    ",0
00363c  c8c920d0
003640  c5c6c8cc
003644  20202020
003648  00      
003649  00                DCB      0
00364a  00                DCB      0
00364b  00                DCB      0
                  |L1.13900|
00364c  c4c8cec4          DCB      196,200,206,196,205,219,201," ",208,197,198,200,204,"   "
003650  cddbc920
003654  d0c5c6c8
003658  cc202020
00365c  00                DCB      0
00365d  00                DCB      0
00365e  00                DCB      0
00365f  00                DCB      0
                  |L1.13920|
003660  20202020          DCB      "                ",0
003664  20202020
003668  20202020
00366c  20202020
003670  00      
003671  00                DCB      0
003672  00                DCB      0
003673  00                DCB      0

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  c3cbc0c2          DCB      195,203,192,194,205,206,197," ",204,197,205,222,"    ",204
000004  cdcec520
000008  ccc5cdde
00000c  20202020
000010  cc      
000011  eeede8f2          DCB      238,237,232,242,238,240,"        |",198,243,240,237,224,235
000015  eef02020
000019  20202020
00001d  20207cc6
000021  f3f0ede0
000025  eb      
000026  20f1eee1          DCB      " ",241,238,225,251,242,232,233," |",202,238,237,244,232
00002a  fbf2e8e9
00002e  207ccaee
000032  edf4e8  
000035  e3f3f0e0          DCB      227,243,240,224,246,232,255,"   |",208,229,227,243,235,255
000039  f6e8ff20
00003d  20207cd0
000041  e5e3f3eb
000045  ff      
000046  f2eef0fb          DCB      242,238,240,251,"     |",207,240,229,228,243,239,240,229
00004a  20202020
00004e  207ccff0
000052  e5e4f3ef
000056  f0e5    
000058  e6e4e5ed          DCB      230,228,229,237,232,255," |",199,224,249,232,242,251,"  "
00005c  e8ff207c
000060  c7e0f9e8
000064  f2fb2020
000068  20202020          DCB      "       |",209,229,240,226,232,241,"         |",207,240,238
00006c  2020207c
000070  d1e5f0e2
000074  e8f12020
000078  20202020
00007c  2020207c
000080  cff0ee  
000083  f2eeeaee          DCB      242,238,234,238,235," ",238,225,236,229,237,224,"|",0
000087  eb20eee1
00008b  ece5ede0
00008f  7c00    
000091  00                DCB      0
000092  00                DCB      0
000093  00                DCB      0
000094  3ed0c5c3          DCB      ">",208,197,195,211,203,223,210,206,208,219,"      ",208
000098  d3cbdfd2
00009c  ced0db20
0000a0  20202020
0000a4  20d0    
0000a6  e5e3f3eb          DCB      229,227,243,235,255,242,238,240," Udc | ",208,229,227,243
0000aa  fff2eef0
0000ae  20556463
0000b2  207c20d0
0000b6  e5e3f3  
0000b9  ebfff2ee          DCB      235,255,242,238,240," Q   | ",208,229,227,243,235,255,242
0000bd  f0205120
0000c1  20207c20
0000c5  d0e5e3f3
0000c9  ebfff2  
0000cc  eef02050          DCB      238,240," PLL |",0
0000d0  4c4c207c
0000d4  00      
0000d5  00                DCB      0
0000d6  00                DCB      0
0000d7  00                DCB      0
0000d8  3ec7c0d9          DCB      ">",199,192,217,200,210,219,"          ",204,210,199," ",239
0000dc  c8d2db20
0000e0  20202020
0000e4  20202020
0000e8  20ccd2c7
0000ec  20ef    
0000ee  f0e5eee1          DCB      240,229,238,225,240,224,231,238,226,"| ",194,251,241,238
0000f2  f0e0e7ee
0000f6  e27c20c2
0000fa  fbf1ee  
0000fd  eaeee520          DCB      234,238,229," Udc   | ",205,232,231,234,238,229," Udc   "
000101  55646320
000105  20207c20
000109  cde8e7ea
00010d  eee52055
000111  64632020
000115  20      
000116  207c20d0          DCB      " | ",208,224,231,240,255,228," Udc    | ",205,232,231,234
00011a  e0e7f0ff
00011e  e4205564
000122  63202020
000126  207c20cd
00012a  e8e7ea  
00012d  eee52055          DCB      238,229," U",241,232,237,245,240,".| ",194,251,241,238,234
000131  f1e8edf5
000135  f02e7c20
000139  c2fbf1ee
00013d  ea      
00013e  eee52055          DCB      238,229," U",241,232,237,245,240,"| ",210,229,236,239,229
000142  f1e8edf5
000146  f07c20d2
00014a  e5ecefe5
00014e  f0e0f2f3          DCB      240,224,242,243,240,224,"   | ",199,224,249,232,242,224," "
000152  f0e02020
000156  207c20c7
00015a  e0f9e8f2
00015e  e020    
000160  e4e8eee4          DCB      228,232,238,228,238,226," | ",199,224,249,232,242,224," "
000164  eee2207c
000168  20c7e0f9
00016c  e8f2e020
000170  f0e5e7e8          DCB      240,229,231,232,241,242,".| ",194,251,241,238,234,238,247
000174  f1f22e7c
000178  20c2fbf1
00017c  eeeaeef7
000180  e0f1f22e          DCB      224,241,242,".",242,238,234,"|",0
000184  f2eeea7c
000188  00      
000189  00                DCB      0
00018a  00                DCB      0
00018b  00                DCB      0
00018c  3ecacecd          DCB      ">",202,206,205,212,200,195,211,208,192,214,200,223,"   "
000190  d4c8c3d3
000194  d0c0d6c8
000198  df202020
00019c  20d3f1f2          DCB      " ",211,241,242,224,226,234,232,"       | ",199,224,240,255
0001a0  e0e2eae8
0001a4  20202020
0001a8  2020207c
0001ac  20c7e0f0
0001b0  ff      
0001b1  e4202f20          DCB      228," / ",240,224,231,240,255,228,"| ",208,229,230,232,236
0001b5  f0e0e7f0
0001b9  ffe47c20
0001bd  d0e5e6e8
0001c1  ec      
0001c2  20f0e5e3          DCB      " ",240,229,227,243,235,232,240,".| ",194,241,242,240,238
0001c6  f3ebe8f0
0001ca  2e7c20c2
0001ce  f1f2f0ee
0001d2  e5ed2ee3          DCB      229,237,".",227,229,237,229,240,".| ",212,232,235,252,242
0001d6  e5ede5f0
0001da  2e7c20d4
0001de  e8ebfcf2
0001e2  f02e20e8          DCB      240,". ",232,231,236,229,240,".| ",194,229,237,242,232,235
0001e6  e7ece5f0
0001ea  2e7c20c2
0001ee  e5edf2e8
0001f2  eb      
0001f3  fff2eef0          DCB      255,242,238,240,251,"   | ",209,239,255,249,232,233," ",240
0001f7  fb202020
0001fb  7c20d1ef
0001ff  fff9e8e9
000203  20f0    
000205  e5e6e8ec          DCB      229,230,232,236,"  | ",211,239,240,224,226,235,".",236,238
000209  20207c20
00020d  d3eff0e0
000211  e2eb2eec
000215  ee      
000216  f1f2e0ec          DCB      241,242,224,236,232,"| ",206,241,237,238,226,237,"/",240
00021a  e87c20ce
00021e  f1edeee2
000222  ed2ff0  
000225  e5e7e5f0          DCB      229,231,229,240,226,237,"| ",196,232,238,228,237,251,233
000229  e2ed7c20
00022d  c4e8eee4
000231  edfbe9  
000234  20f0e5e6          DCB      " ",240,229,230,232,236," | ",208,229,230,232,236," ",216
000238  e8ec207c
00023c  20d0e5e6
000240  e8ec20d8
000244  c8cc2020          DCB      200,204,"     | ",208,224,231,237,232,246,224," Udc1&2| "
000248  2020207c
00024c  20d0e0e7
000250  ede8f6e0
000254  20556463
000258  3126327c
00025c  20      
00025d  cfeef1f2          DCB      207,238,241,242,".",241,238,241,242,224,226,235,". |",0
000261  2ef1eef1
000265  f2e0e2eb
000269  2e207c00
00026d  00                DCB      0
00026e  00                DCB      0
00026f  00                DCB      0
000270  3ed3d1d2          DCB      ">",211,209,210,192,194,202,200,"         ",211,241,242,224
000274  c0c2cac8
000278  20202020
00027c  20202020
000280  20d3f1f2
000284  e0      
000285  e2eae020          DCB      226,234,224," Udc   | ",211,241,242,224,226,234,224," Q "
000289  55646320
00028d  20207c20
000291  d3f1f2e0
000295  e2eae020
000299  5120    
00029b  20202020          DCB      "    | ",211,241,242,224,226,234,224," ",166,"     |",0
00029f  7c20d3f1
0002a3  f2e0e2ea
0002a7  e020a620
0002ab  20202020
0002af  7c00    
0002b1  00                DCB      0
0002b2  00                DCB      0
0002b3  00                DCB      0
0002b4  3ec7c0d0          DCB      ">",199,192,208,223,196," / ",208,192,199,208,223,196," "
0002b8  dfc4202f
0002bc  20d0c0c7
0002c0  d0dfc420
0002c4  20cce8ed          DCB      " ",204,232,237,232,236,224,235,252,237,". Udc| ",204,232
0002c8  e8ece0eb
0002cc  fced2e20
0002d0  5564637c
0002d4  20cce8  
0002d7  ede8ece0          DCB      237,232,236,224,235,252,237,". Us | ",196,235,232,242,229
0002db  ebfced2e
0002df  20557320
0002e3  7c20c4eb
0002e7  e8f2e5  
0002ea  ebfced2e          DCB      235,252,237,". ",202,204,"1 |",0
0002ee  20cacc31
0002f2  207c00  
0002f5  00                DCB      0
0002f6  00                DCB      0
0002f7  00                DCB      0
0002f8  3ed1cfdf          DCB      ">",209,207,223,217,200,201," ",208,197,198,200,204,"   "
0002fc  d9c8c920
000300  d0c5c6c8
000304  cc202020
000308  20c2eaeb          DCB      " ",194,234,235,254,247,229,237,232,229,"     | ",206,242
00030c  fef7e5ed
000310  e8e52020
000314  2020207c
000318  20cef2  
00031b  eaebfef7          DCB      234,235,254,247,229,237,232,229,"    |",0
00031f  e5ede8e5
000323  20202020
000327  7c00    
000329  00                DCB      0
00032a  00                DCB      0
00032b  00                DCB      0
00032c  3ed3cfd0          DCB      ">",211,207,208,192,194,203,".",204,206,209,210,192,204,200
000330  c0c2cb2e
000334  ccced1d2
000338  c0ccc8  
00033b  2020c2ea          DCB      "  ",194,234,235,"/",206,242,234,235," ",236,238,241,242
00033f  eb2fcef2
000343  eaeb20ec
000347  eef1f2  
00034a  e07c20d3          DCB      224,"| ",211,241,242,224,226,234,224," ",226,234,235,". "
00034e  f1f2e0e2
000352  eae020e2
000356  eaeb2e20
00035a  207c20d3          DCB      " | ",211,241,242,224,226,234,224," ",238,242,234,235,"."
00035e  f1f2e0e2
000362  eae020ee
000366  f2eaeb2e
00036a  207c20d0          DCB      " | ",208,243,247,237,238,233," ",226,251,225,238,240," "
00036e  f3f7edee
000372  e920e2fb
000376  e1eef020
00037a  207c20ca          DCB      " | ",202,238,240,240,229,234,246,232,255," ",243,227,235
00037e  eef0f0e5
000382  eaf6e8ff
000386  20f3e3eb
00038a  e07c20ca          DCB      224,"| ",202,238,240,240,". ",239,224,240,"-",240,238,226
00038e  eef0f02e
000392  20efe0f0
000396  2df0eee2
00039a  207c00            DCB      " |",0
00039d  00                DCB      0
00039e  00                DCB      0
00039f  00                DCB      0
0003a0  3e3ec2ca          DCB      ">>",194,202,203,"/",206,210,202,203," ",204,206,209,210
0003a4  cb2fced2
0003a8  cacb20cc
0003ac  ced1d2  
0003af  c02020c2          DCB      192,"  ",194,240,243,247,237,243,254,"         ",192,226
0003b3  f0f3f7ed
0003b7  f3fe2020
0003bb  20202020
0003bf  202020c0
0003c3  e2      
0003c4  f2eeece0          DCB      242,238,236,224,242,232,247,229,241,234,232," ",0
0003c8  f2e8f7e5
0003cc  f1eae820
0003d0  00      
0003d1  00                DCB      0
0003d2  00                DCB      0
0003d3  00                DCB      0
0003d4  3e3ed0d3          DCB      ">>",208,211,215,205,206,201," ",194,219,193,206,208,"  "
0003d8  d7cdcec9
0003dc  20c2dbc1
0003e0  ced02020
0003e4  2020ccee          DCB      "  ",204,238,241,242," 1          ",204,238,241,242," 1 "
0003e8  f1f22031
0003ec  20202020
0003f0  20202020
0003f4  2020ccee
0003f8  f1f22031
0003fc  20      
0003fd  26203220          DCB      "& 2    ",0
000401  20202000
000405  00                DCB      0
000406  00                DCB      0
000407  00                DCB      0
000408  3e3eced1          DCB      ">>",206,209,205,206,194,205,"/",208,197,199,197,208,194
00040c  cdcec2cd
000410  2fd0c5c7
000414  c5d0c2  
000417  cd2020d0          DCB      205,"  ",208,229,231,229,240,226,237,251,233,"       ",206
00041b  e5e7e5f0
00041f  e2edfbe9
000423  20202020
000427  202020ce
00042b  f1edeee2          DCB      241,237,238,226,237,238,233,"      ",0
00042f  edeee920
000433  20202020
000437  2000    
000439  00                DCB      0
00043a  00                DCB      0
00043b  00                DCB      0
00043c  3e3ecace          DCB      ">>",202,206,208,208,". ",207,192,208,"-",208,206,194," "
000440  d0d02e20
000444  cfc0d02d
000448  d0cec220
00044c  2020c1e5          DCB      "  ",193,229,231," ",234,238,240,240,229,234,246,232,232
000450  e720eaee
000454  f0f0e5ea
000458  f6e8e8  
00045b  202020d1          DCB      "   ",209," ",234,238,240,240,229,234,246,232,229,233," "
00045f  20eaeef0
000463  f0e5eaf6
000467  e8e5e920
00046b  2000              DCB      " ",0
00046d  00                DCB      0
00046e  00                DCB      0
00046f  00                DCB      0
000470  3ec4c8ce          DCB      ">",196,200,206,196,205,219,201," ",208,197,198,200,204," "
000474  c4cddbc9
000478  20d0c5c6
00047c  c8cc20  
00047f  2020c2ea          DCB      "  ",194,234,235,"./",206,242,234,235,".    | ",211,241,242
000483  eb2e2fce
000487  f2eaeb2e
00048b  20202020
00048f  7c20d3f1
000493  f2      
000494  e0e2eae0          DCB      224,226,234,224," ",226,234,235,".  | ",211,241,242,224,226
000498  20e2eaeb
00049c  2e20207c
0004a0  20d3f1f2
0004a4  e0e2    
0004a6  eae020ee          DCB      234,224," ",238,242,234,235,". |",0
0004aa  f2eaeb2e
0004ae  207c00  
0004b1  00                DCB      0
0004b2  00                DCB      0
0004b3  00                DCB      0
0004b4  3e3ec2ca          DCB      ">>",194,202,203,"./",206,210,202,203,".      ",205,229," "
0004b8  cb2e2fce
0004bc  d2cacb2e
0004c0  20202020
0004c4  2020cde5
0004c8  20      
0004c9  f0e0e7f0          DCB      240,224,231,240,229,248,229,237,238,"    ",208,224,231,240
0004cd  e5f8e5ed
0004d1  ee202020
0004d5  20d0e0e7
0004d9  f0      
0004da  e5f8e5ed          DCB      229,248,229,237,238,"     ",0
0004de  ee202020
0004e2  202000  
0004e5  00                DCB      0
0004e6  00                DCB      0
0004e7  00                DCB      0
0004e8  3ec2d1d2          DCB      ">",194,209,210,208,206,197,205,".",195,197,205,197,208,"."
0004ec  d0cec5cd
0004f0  2ec3c5cd
0004f4  c5d02e  
0004f7  2020c2ea          DCB      "  ",194,234,235,"./",194,251,234,235,".    | ",212,232,235
0004fb  eb2e2fc2
0004ff  fbeaeb2e
000503  20202020
000507  7c20d4e8
00050b  eb      
00050c  fcf2f0e0          DCB      252,242,240,224,246,232,255,"    | ",202,238,253,244,244
000510  f6e8ff20
000514  2020207c
000518  20caeefd
00051c  f4f4    
00051e  e8f6e8e5          DCB      232,246,232,229,237,242," ",202,"1| ",202,238,253,244,244
000522  edf220ca
000526  317c20ca
00052a  eefdf4f4
00052e  e8f6e8e5          DCB      232,246,232,229,237,242," ",202,"2|",0
000532  edf220ca
000536  327c00  
000539  00                DCB      0
00053a  00                DCB      0
00053b  00                DCB      0
00053c  3e3ec2d1          DCB      ">>",194,209,210,208,206,197,205,".",195,197,205,197,208
000540  d2d0cec5
000544  cd2ec3c5
000548  cdc5d0  
00054b  2e2020ce          DCB      ".  ",206,242,234,235,254,247,229,237,"        ",194,234
00054f  f2eaebfe
000553  f7e5ed20
000557  20202020
00055b  202020c2
00055f  ea      
000560  ebfef7e5          DCB      235,254,247,229,237,"         PLL           ",0
000564  ed202020
000568  20202020
00056c  2020504c
000570  4c202020
000574  20202020
000578  20202020
00057c  00      
00057d  00                DCB      0
00057e  00                DCB      0
00057f  00                DCB      0
000580  3e3ed4c8          DCB      ">>",212,200,203,220,210,208,".",200,199,204,197,208,". "
000584  cbdcd2d0
000588  2ec8c7cc
00058c  c5d02e20
000590  2020d4e8          DCB      "  ",212,232,235,252,242,240,224,246,232,255," DC|  ",212
000594  ebfcf2f0
000598  e0f6e8ff
00059c  2044437c
0005a0  2020d4  
0005a3  e8ebfcf2          DCB      232,235,252,242,240,224,246,232,255," I1|  ",212,232,235
0005a7  f0e0f6e8
0005ab  ff204931
0005af  7c2020d4
0005b3  e8eb    
0005b5  fcf2f0e0          DCB      252,242,240,224,246,232,255," P1|  ",212,232,235,252,242
0005b9  f6e8ff20
0005bd  50317c20
0005c1  20d4e8eb
0005c5  fcf2    
0005c7  f0e0f6e8          DCB      240,224,246,232,255," Q1|  ",212,232,235,252,242,240,224
0005cb  ff205131
0005cf  7c2020d4
0005d3  e8ebfcf2
0005d7  f0e0    
0005d9  f6e8ff20          DCB      246,232,255," I2|  ",212,232,235,252,242,240,224,246,232
0005dd  49327c20
0005e1  20d4e8eb
0005e5  fcf2f0e0
0005e9  f6e8    
0005eb  ff205032          DCB      255," P2|  ",212,232,235,252,242,240,224,246,232,255," Q"
0005ef  7c2020d4
0005f3  e8ebfcf2
0005f7  f0e0f6e8
0005fb  ff2051  
0005fe  327c2020          DCB      "2|  ",212,232,235,252,242,240,224,246,232,255," Us|",0
000602  d4e8ebfc
000606  f2f0e0f6
00060a  e8ff2055
00060e  737c00  
000611  00                DCB      0
000612  00                DCB      0
000613  00                DCB      0
000614  3e3ec2c5          DCB      ">>",194,197,205,210,200,203,223,210,206,208,219,"     ",194
000618  cdd2c8cb
00061c  dfd2ced0
000620  db202020
000624  2020c2  
000627  eaeb2ee2          DCB      234,235,".",226,229,237,242,232,235,255,242,".|  ",206,242
00062b  e5edf2e8
00062f  ebfff22e
000633  7c2020ce
000637  f2      
000638  eaeb2ee2          DCB      234,235,".",226,229,237,242,232,235,255,242,"|",0
00063c  e5edf2e8
000640  ebfff27c
000644  00      
000645  00                DCB      0
000646  00                DCB      0
000647  00                DCB      0
000648  3ed1c5d0          DCB      ">",209,197,208,194,200,209,"          ",211,241,242,".",196
00064c  c2c8d120
000650  20202020
000654  20202020
000658  20d3f1f2
00065c  2ec4    
00065e  e0f2e02f          DCB      224,242,224,"/",194,240,229,236,255,"| ",209,238,245,240
000662  c2f0e5ec
000666  ff7c20d1
00066a  eef5f0  
00066d  2eefe0f0          DCB      ".",239,224,240,224,236,229,242,240,251,"| ",196,224,242
000671  e0ece5f2
000675  f0fb7c20
000679  c4e0f2  
00067c  f7e8eae8          DCB      247,232,234,232,"       |",0
000680  20202020
000684  2020207c
000688  00      
000689  00                DCB      0
00068a  00                DCB      0
00068b  00                DCB      0
00068c  3e3ec4c0          DCB      ">>",196,192,210,215,200,202,200,"         ",202,224,235
000690  d2d7c8ca
000694  c8202020
000698  20202020
00069c  2020cae0
0006a0  eb      
0006a1  e8e1f0ee          DCB      232,225,240,238,226,234,224,"   |  ",209,236,229,249,".",237
0006a5  e2eae020
0006a9  20207c20
0006ad  20d1ece5
0006b1  f92eed  
0006b4  f3ebff20          DCB      243,235,255," Udc|  ",209,236,229,249,".",237,243,235,255
0006b8  5564637c
0006bc  2020d1ec
0006c0  e5f92eed
0006c4  f3ebff  
0006c7  20557320          DCB      " Us |  ",209,236,229,249,".",237,243,235,255," I1 |  ",209
0006cb  7c2020d1
0006cf  ece5f92e
0006d3  edf3ebff
0006d7  20493120
0006db  7c2020d1
0006df  ece5f92e          DCB      236,229,249,".",237,243,235,255," I2 |  ",209,236,229,249
0006e3  edf3ebff
0006e7  20493220
0006eb  7c2020d1
0006ef  ece5f9  
0006f2  2eedf3eb          DCB      ".",237,243,235,255," I3 |  ",209,236,229,249,".",237,243
0006f6  ff204933
0006fa  207c2020
0006fe  d1ece5f9
000702  2eedf3  
000705  ebff2049          DCB      235,255," I4 |",0
000709  34207c00
00070d  00                DCB      0
00070e  00                DCB      0
00070f  00                DCB      0
000710  3e3ed0c5          DCB      ">>",208,197,198,200,204," ",208,197,195,211,203,200,208
000714  c6c8cc20
000718  d0c5c3d3
00071c  cbc8d0  
00071f  2e2020d0          DCB      ".  ",208,229,227,243,235,255,242,238,240," Udc   ",212,232
000723  e5e3f3eb
000727  fff2eef0
00072b  20556463
00072f  202020d4
000733  e8      
000734  eaf12ef3          DCB      234,241,".",243,227,238,235,"     ",0
000738  e3eeeb20
00073c  20202020
000740  00      
000741  00                DCB      0
000742  00                DCB      0
000743  00                DCB      0
000744  3e3ed0c5          DCB      ">>",208,197,198,200,204," ",216,200,204,"       ",209,232
000748  c6c8cc20
00074c  d8c8cc20
000750  20202020
000754  2020d1e8
000758  f5f0eeed          DCB      245,240,238,237,237,224,255,"       1/2 ",239,229,240,232
00075c  ede0ff20
000760  20202020
000764  2020312f
000768  3220efe5
00076c  f0e8    
00076e  eee4e020          DCB      238,228,224,"     1/4 ",239,229,240,232,238,228,224,"   "
000772  20202020
000776  312f3420
00077a  efe5f0e8
00077e  eee4e020
000782  2020    
000784  00                DCB      0
000785  00                DCB      0
000786  00                DCB      0
000787  00                DCB      0
000788  3e3ecfce          DCB      ">>",207,206,209,210,".",209,206,209,210,192,194,203,". "
00078c  d1d22ed1
000790  ced1d2c0
000794  c2cb2e20
000798  2020cef2          DCB      "  ",206,242,234,235,254,247,229,237,"        ",194,234,235
00079c  eaebfef7
0007a0  e5ed2020
0007a4  20202020
0007a8  2020c2ea
0007ac  eb      
0007ad  fef7e5ed          DCB      254,247,229,237,"       ",0
0007b1  20202020
0007b5  20202000
0007b9  00                DCB      0
0007ba  00                DCB      0
0007bb  00                DCB      0
0007bc  3ecfd0ce          DCB      ">",207,208,206,210,206,202,206,203," ",206,193,204,197,205
0007c0  d2cecace
0007c4  cb20cec1
0007c8  ccc5cd  
0007cb  c020cfee          DCB      192," ",207,238,240,242," X6       | ",207,238,240,242," "
0007cf  f0f22058
0007d3  36202020
0007d7  20202020
0007db  7c20cfee
0007df  f0f220  
0007e2  58372020          DCB      "X7       | ",207,238,240,242," ",213,"13      |",0
0007e6  20202020
0007ea  207c20cf
0007ee  eef0f220
0007f2  d5313320
0007f6  20202020
0007fa  207c00  
0007fd  00                DCB      0
0007fe  00                DCB      0
0007ff  00                DCB      0
000800  3e3ecfc0          DCB      ">>",207,192,208,"-",208,219," ",207,206,208,210,192,"  "
000804  d02dd0db
000808  20cfced0
00080c  d2c02020
000810  2020d1ea          DCB      "  ",209,234,238,240,238,241,242,252,"     |  ",215,229,242
000814  eef0eef1
000818  f2fc2020
00081c  2020207c
000820  2020d7e5
000824  f2      
000825  edeef1f2          DCB      237,238,241,242,252,"     |  ",209,242,238,239,"-",225,232
000829  fc202020
00082d  20207c20
000831  20d1f2ee
000835  ef2de1e8
000839  f2fb2020          DCB      242,251,"    |  ",192,228,240,229,241," Modbus |  ",192,228
00083d  20207c20
000841  20c0e4f0
000845  e5f1204d
000849  6f646275
00084d  73207c20
000851  20c0e4  
000854  f0e5f120          DCB      240,229,241," 2      |",0
000858  32202020
00085c  2020207c
000860  00      
000861  00                DCB      0
000862  00                DCB      0
000863  00                DCB      0
000864  3e3e3ed1          DCB      ">>>",209,202,206,208,206,209,210,220,"        9600 ",225
000868  caced0ce
00086c  d1d2dc20
000870  20202020
000874  20202039
000878  36303020
00087c  e1      
00087d  eee42020          DCB      238,228,"        19200 ",225,238,228,"       38400 ",225
000881  20202020
000885  20203139
000889  32303020
00088d  e1eee420
000891  20202020
000895  20203338
000899  34303020
00089d  e1      
00089e  eee42020          DCB      238,228,"       57600 ",225,238,228,"       115200 ",225
0008a2  20202020
0008a6  20353736
0008aa  303020e1
0008ae  eee42020
0008b2  20202020
0008b6  20313135
0008ba  32303020
0008be  e1      
0008bf  eee42020          DCB      238,228,"      230400 ",225,238,228,"    ",0
0008c3  20202020
0008c7  32333034
0008cb  303020e1
0008cf  eee42020
0008d3  202000  
0008d6  00                DCB      0
0008d7  00                DCB      0
0008d8  3e3e3ed7          DCB      ">>>",215,197,210,205,206,209,210,220,"        Odd      "
0008dc  c5d2cdce
0008e0  d1d2dc20
0008e4  20202020
0008e8  2020204f
0008ec  64642020
0008f0  20202020
0008f4  20202020          DCB      "       Even            ",193,229,231," ",247,229,242,237
0008f8  20202045
0008fc  76656e20
000900  20202020
000904  20202020
000908  202020c1
00090c  e5e720f7
000910  e5f2ed  
000913  eef1f2e8          DCB      238,241,242,232," ",0
000917  2000    
000919  00                DCB      0
00091a  00                DCB      0
00091b  00                DCB      0
00091c  3e3e3ed1          DCB      ">>>",209,210,206,207,"-",193,200,210,219,"       1 ",241
000920  d2cecf2d
000924  c1c8d2db
000928  20202020
00092c  20202031
000930  20f1    
000932  f2eeef2d          DCB      242,238,239,"-",225,232,242,"      2 ",241,242,238,239,"-"
000936  e1e8f220
00093a  20202020
00093e  203220f1
000942  f2eeef2d
000946  e1e8f2e0          DCB      225,232,242,224,"  ",0
00094a  202000  

                          AREA ||.data||, DATA, ALIGN=2

                  STmainmenu
                          DCD      ||.conststring||
                  STregs
                          DCD      ||.conststring||+0x94
                  STalarms
                          DCD      ||.conststring||+0xd8
                  STconfig
                          DCD      ||.conststring||+0x18c
                  STrefs
                          DCD      ||.conststring||+0x270
                  STzarad
                          DCD      ||.conststring||+0x2b4
                  STstandby
                          DCD      ||.conststring||+0x2f8
                  STbridge
                          DCD      ||.conststring||+0x32c
                  STAutoBridge
                          DCD      ||.conststring||+0x3a0
                  STManBridge
                          DCD      ||.conststring||+0x3d4
                  STmainch
                          DCD      ||.conststring||+0x408
                  STparamcorr
                          DCD      ||.conststring||+0x43c
                  STDiodeMode
                          DCD      ||.conststring||+0x470
                  STEnaDiodeMode
                          DCD      ||.conststring||+0x4b4
                  STintgen
                          DCD      ||.conststring||+0x4e8
                  STintgenena
                          DCD      ||.conststring||+0x53c
                  STfiltrs
                          DCD      ||.conststring||+0x580
                  STvent
                          DCD      ||.conststring||+0x614
                  STservice
                          DCD      ||.conststring||+0x648
                  STsensors
                          DCD      ||.conststring||+0x68c
                  STfixugol
                          DCD      ||.conststring||+0x710
                  STTIMOffset
                          DCD      ||.conststring||+0x744
                  STFixCorrect
                          DCD      ||.conststring||+0x788
                  STuarts
                          DCD      ||.conststring||+0x7bc
                  STuartparams
                          DCD      ||.conststring||+0x800
                  STuartSpeed
                          DCD      ||.conststring||+0x864
                  STuartParity
                          DCD      ||.conststring||+0x8d8
                  STuartStop
                          DCD      ||.conststring||+0x91c
                  ViewStr
                          DCD      0x00000001
                  AlarmStrNum
                          DCD      0x00000000
                  |symbol_number.54|
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "SOURCE\\Menu.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_Menu_c_ad80c54d____REV16|
#line 129 ".\\STARTUP\\core_cmInstr.h"
|__asm___6_Menu_c_ad80c54d____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_Menu_c_ad80c54d____REVSH|
#line 144
|__asm___6_Menu_c_ad80c54d____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
