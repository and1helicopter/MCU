; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --no_integer_literal_pools --list -c --asm --interleave -o.\exec\mcan.o --asm_dir=.\LIST\ --list_dir=.\LIST\ --depend=.\exec\mcan.d --cpu=Cortex-M4.fp --apcs=interwork -Otime --diag_suppress=9931 -I.\STARTUP -I.\PERIPH -I..\PRG1 -I.\SOURCE -IF:\Program\Keil_v5\ARM\RV31\INC -IF:\Program\Keil_v5\ARM\CMSIS\Include -IF:\Program\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=524 -DEK_PP_0815_12_03 -DSTM32F429_439xx --omf_browse=.\exec\mcan.crf PERIPH\mcan.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  InitCAN1 PROC
;;;5      
;;;6      void InitCAN1(void) {
000000  f44f5061          MOV      r0,#0x3840
;;;7      	
;;;8      	RCC->APB1ENR |= RCC_APB1ENR_CAN1EN;
000004  f2c40002          MOVT     r0,#0x4002
000008  6801              LDR      r1,[r0,#0]
00000a  f0417100          ORR      r1,r1,#0x2000000
00000e  6001              STR      r1,[r0,#0]
;;;9      
;;;10     	CAN1->MCR 	  = CAN_MCR_INRQ;								/**/	
000010  f44f42c8          MOV      r2,#0x6400
000014  f2c40200          MOVT     r2,#0x4000
000018  2301              MOVS     r3,#1
00001a  6013              STR      r3,[r2,#0]
;;;11     	while ((CAN1->MSR & CAN_MSR_INAK) == 0) {}	/* Ожидаем режим инициализации					*/
00001c  1d10              ADDS     r0,r2,#4
                  |L1.30|
00001e  6801              LDR      r1,[r0,#0]
000020  f0110f01          TST      r1,#1
000024  d0fb              BEQ      |L1.30|
;;;12     		
;;;13     	CAN1->MCR		 |= CAN_MCR_ABOM |							/* Автоматическая Bus-off recovery			*/
000026  6810              LDR      r0,[r2,#0]
000028  f0400044          ORR      r0,r0,#0x44
00002c  6010              STR      r0,[r2,#0]
;;;14     									CAN_MCR_TXFP;								/* Приоритет отправки - хронологически	*/
;;;15     
;;;16     		
;;;17     /*
;;;18     BaudRate = 1 / NominalBitTime		
;;;19     		
;;;20     NominalBitTime = 1 x tq + tBS1 + tBS2
;;;21     with:
;;;22     tBS1 = tq x (TS1[3:0] + 1),
;;;23     tBS2 = tq x (TS2[2:0] + 1),
;;;24     tq = (BRP[9:0] + 1) x tPCLK
;;;25     
;;;26     		Итого:	NominalBitTime = 1 x tq + tBS1 + tBS2	= 9 x tq		
;;;27     		tq = (18 + 1) / 42MHz
;;;28     		
;;;29     		BaudRate = 42MHz / [(18 + 1) * 9] = 245 kBaud
;;;30     		
;;;31     		Длина одного сообщения: 108 бит, время одного сообщения ~440 мкс
;;;32     */		
;;;33     		
;;;34     	CAN1->BTR		  = (18ul << 0) |								/* BRP*/
00002e  f246411c          MOV      r1,#0x641c
000032  2012              MOVS     r0,#0x12
000034  f2c40100          MOVT     r1,#0x4000
000038  f2c03033          MOVT     r0,#0x333
00003c  6008              STR      r0,[r1,#0]
;;;35     									(3ul << 16) |								/* TS1*/
;;;36     									(3ul << 20) |								/* TS2*/
;;;37     									(3ul << 24)	;								/* SJW*/
;;;38     		
;;;39     	CAN1->FMR			= (28ul << 8) | CAN_FMR_FINIT;
00003e  f44f40cc          MOV      r0,#0x6600
000042  f2c40000          MOVT     r0,#0x4000
000046  f6414101          MOV      r1,#0x1c01
00004a  6001              STR      r1,[r0,#0]
;;;40     		
;;;41     	CAN1->FM1R		= 0x0FFFFFFF;									/* List Mode	*/
00004c  f1000c04          ADD      r12,r0,#4
000050  f06f4170          MVN      r1,#0xf0000000
000054  f8cc1000          STR      r1,[r12,#0]
;;;42     	CAN1->FS1R		= 0;													/* Std ident	*/
000058  f2466c0c          MOV      r12,#0x660c
00005c  f2c40c00          MOVT     r12,#0x4000
000060  2100              MOVS     r1,#0
000062  f8cc1000          STR      r1,[r12,#0]
;;;43     	
;;;44     	CAN1->sFilterRegister[0].FR1	= (0ul << 5) | (1u << 21);
000066  f2466c40          MOV      r12,#0x6640
00006a  f2c40c00          MOVT     r12,#0x4000
00006e  f44f1100          MOV      r1,#0x200000
000072  f8cc1000          STR      r1,[r12,#0]
;;;45     	CAN1->sFilterRegister[0].FR2	= (2ul << 5) | (3u << 21); 
000076  2140              MOVS     r1,#0x40
000078  f10c0c04          ADD      r12,r12,#4
00007c  f2c00160          MOVT     r1,#0x60
000080  f8cc1000          STR      r1,[r12,#0]
;;;46     
;;;47     	CAN1->FA1R		= CAN_FA1R_FACT0;							/* Активируем фильтр 0										*/
000084  f246611c          MOV      r1,#0x661c
000088  f2c40100          MOVT     r1,#0x4000
00008c  600b              STR      r3,[r1,#0]
;;;48     		
;;;49     	CAN1->FMR		 &=	~CAN_FMR_FINIT;							/* Сбрасываем бит инициализации фильтров	*/
00008e  6801              LDR      r1,[r0,#0]
000090  f0210101          BIC      r1,r1,#1
000094  6001              STR      r1,[r0,#0]
;;;50     	CAN1->MCR 	 &= ~CAN_MCR_INRQ;							/* Выключаем режим инициализации CAN			*/
000096  6810              LDR      r0,[r2,#0]
000098  f0200001          BIC      r0,r0,#1
00009c  6010              STR      r0,[r2,#0]
;;;51     };
00009e  4770              BX       lr
                          ENDP


;*** Start embedded assembler ***

#line 1 "PERIPH\\mcan.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_mcan_c_InitCAN1____REV16|
#line 129 ".\\STARTUP\\core_cmInstr.h"
|__asm___6_mcan_c_InitCAN1____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_mcan_c_InitCAN1____REVSH|
#line 144
|__asm___6_mcan_c_InitCAN1____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
