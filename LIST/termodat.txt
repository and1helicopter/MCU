; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --no_integer_literal_pools --list -c --asm --interleave -o.\exec\termodat.o --asm_dir=.\LIST\ --list_dir=.\LIST\ --depend=.\exec\termodat.d --cpu=Cortex-M4.fp --apcs=interwork -Otime --diag_suppress=9931 -I.\STARTUP -I.\PERIPH -I..\PRG1 -I.\SOURCE -IF:\Program\Keil_v5\ARM\RV31\INC -IF:\Program\Keil_v5\ARM\CMSIS\Include -IF:\Program\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=524 -DEK_PP_0815_12_03 -DSTM32F429_439xx --omf_browse=.\exec\termodat.crf SOURCE\Termodat.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  SetParam PROC
;;;33     
;;;34     void SetParam(unsigned short ParamAddr, unsigned short ParamValue, unsigned int ChNum, unsigned char *TxBuff)	{	
000000  ea402082          ORR      r0,r0,r2,LSL #10
000004  b082              SUB      sp,sp,#8
;;;35     unsigned char TempBuff[7];
;;;36     unsigned char LRC = 0;
;;;37     unsigned int  i;
;;;38     
;;;39     	ParamAddr  |= (ChNum << 10);												
;;;40     
;;;41     	TempBuff[0] = 1;		
000006  2201              MOVS     r2,#1
000008  f88d2000          STRB     r2,[sp,#0]
00000c  b280              UXTH     r0,r0                 ;39
;;;42     	TempBuff[1] = 6;
00000e  2206              MOVS     r2,#6
000010  f88d2001          STRB     r2,[sp,#1]
;;;43     	((unsigned short *)TempBuff)[1] = ((ParamAddr & 0xFF00) >> 8)  | ((ParamAddr & 0x00FF) << 8);
000014  ba40              REV16    r0,r0
000016  f8ad0002          STRH     r0,[sp,#2]
;;;44     	((unsigned short *)TempBuff)[2] = ((ParamValue & 0xFF00) >> 8) | ((ParamValue & 0x00FF) << 8);
00001a  ba48              REV16    r0,r1
00001c  f04f0c00          MOV      r12,#0                ;36
000020  f8ad0004          STRH     r0,[sp,#4]
;;;45     
;;;46     	for (i = 0; i < 6; i++)	{LRC += TempBuff[i];}
000024  4660              MOV      r0,r12
000026  4669              MOV      r1,sp                 ;35
                  |L1.40|
000028  5c0a              LDRB     r2,[r1,r0]
00002a  1c40              ADDS     r0,r0,#1
00002c  4462              ADD      r2,r2,r12
00002e  f0020cff          AND      r12,r2,#0xff
000032  2806              CMP      r0,#6
000034  d3f8              BCC      |L1.40|
;;;47       TempBuff[6] = -LRC;
000036  f1cc0000          RSB      r0,r12,#0
00003a  b2c1              UXTB     r1,r0
00003c  f88d1006          STRB     r1,[sp,#6]
;;;48     
;;;49     	*TxBuff++ = 0x3A;									
000040  203a              MOVS     r0,#0x3a
000042  f8030b01          STRB     r0,[r3],#1
;;;50       *TxBuff++ = 0x30;									
000046  2030              MOVS     r0,#0x30
000048  f8030b01          STRB     r0,[r3],#1
;;;51       *TxBuff++ = 0x31;									
00004c  2231              MOVS     r2,#0x31
00004e  f8032b01          STRB     r2,[r3],#1
;;;52     	*TxBuff++ = 0x30;									
000052  f8030b01          STRB     r0,[r3],#1
;;;53     	*TxBuff++ = 0x36;									
000056  2036              MOVS     r0,#0x36
000058  f8030b01          STRB     r0,[r3],#1
;;;54     	*TxBuff++ = CharToASCII((TempBuff[2]>>4)&0x0F);		
00005c  f89d2002          LDRB     r2,[sp,#2]
000060  0910              LSRS     r0,r2,#4
000062  280a              CMP      r0,#0xa
000064  bf34              ITE      CC
000066  3030              ADDCC    r0,r0,#0x30
000068  3037              ADDCS    r0,r0,#0x37
00006a  f8030b01          STRB     r0,[r3],#1
;;;55     	*TxBuff++ = CharToASCII((TempBuff[2]>>0)&0x0F);			
00006e  f002000f          AND      r0,r2,#0xf
000072  280a              CMP      r0,#0xa
000074  bf34              ITE      CC
000076  3030              ADDCC    r0,r0,#0x30
000078  3037              ADDCS    r0,r0,#0x37
00007a  f8030b01          STRB     r0,[r3],#1
;;;56     	*TxBuff++ = CharToASCII((TempBuff[3]>>4)&0x0F);		
00007e  f89d2003          LDRB     r2,[sp,#3]
000082  0910              LSRS     r0,r2,#4
000084  280a              CMP      r0,#0xa
000086  bf34              ITE      CC
000088  3030              ADDCC    r0,r0,#0x30
00008a  3037              ADDCS    r0,r0,#0x37
00008c  f8030b01          STRB     r0,[r3],#1
;;;57     	*TxBuff++ = CharToASCII((TempBuff[3]>>0)&0x0F);			
000090  f002000f          AND      r0,r2,#0xf
000094  280a              CMP      r0,#0xa
000096  bf34              ITE      CC
000098  3030              ADDCC    r0,r0,#0x30
00009a  3037              ADDCS    r0,r0,#0x37
00009c  f8030b01          STRB     r0,[r3],#1
;;;58     	*TxBuff++ = CharToASCII((TempBuff[4]>>4)&0x0F);		
0000a0  f89d2004          LDRB     r2,[sp,#4]
0000a4  0910              LSRS     r0,r2,#4
0000a6  280a              CMP      r0,#0xa
0000a8  bf34              ITE      CC
0000aa  3030              ADDCC    r0,r0,#0x30
0000ac  3037              ADDCS    r0,r0,#0x37
0000ae  f8030b01          STRB     r0,[r3],#1
;;;59     	*TxBuff++ = CharToASCII((TempBuff[4]>>0)&0x0F);			
0000b2  f002000f          AND      r0,r2,#0xf
0000b6  280a              CMP      r0,#0xa
0000b8  bf34              ITE      CC
0000ba  3030              ADDCC    r0,r0,#0x30
0000bc  3037              ADDCS    r0,r0,#0x37
0000be  f8030b01          STRB     r0,[r3],#1
;;;60     	*TxBuff++ = CharToASCII((TempBuff[5]>>4)&0x0F);		
0000c2  f89d2005          LDRB     r2,[sp,#5]
0000c6  0910              LSRS     r0,r2,#4
0000c8  280a              CMP      r0,#0xa
0000ca  bf34              ITE      CC
0000cc  3030              ADDCC    r0,r0,#0x30
0000ce  3037              ADDCS    r0,r0,#0x37
0000d0  f8030b01          STRB     r0,[r3],#1
;;;61     	*TxBuff++ = CharToASCII((TempBuff[5]>>0)&0x0F);			
0000d4  f002000f          AND      r0,r2,#0xf
0000d8  280a              CMP      r0,#0xa
0000da  bf34              ITE      CC
0000dc  3030              ADDCC    r0,r0,#0x30
0000de  3037              ADDCS    r0,r0,#0x37
0000e0  f8030b01          STRB     r0,[r3],#1
;;;62     	*TxBuff++ = CharToASCII((TempBuff[6]>>4)&0x0F);		
0000e4  0908              LSRS     r0,r1,#4
0000e6  280a              CMP      r0,#0xa
0000e8  bf34              ITE      CC
0000ea  3030              ADDCC    r0,r0,#0x30
0000ec  3037              ADDCS    r0,r0,#0x37
0000ee  f8030b01          STRB     r0,[r3],#1
;;;63     	*TxBuff++ = CharToASCII((TempBuff[6]>>0)&0x0F);			
0000f2  f001000f          AND      r0,r1,#0xf
0000f6  280a              CMP      r0,#0xa
0000f8  bf34              ITE      CC
0000fa  3030              ADDCC    r0,r0,#0x30
0000fc  3037              ADDCS    r0,r0,#0x37
0000fe  7018              STRB     r0,[r3,#0]
;;;64     	*TxBuff++ = 0x0D;
000100  200d              MOVS     r0,#0xd
000102  7058              STRB     r0,[r3,#1]
;;;65     	*TxBuff++ = 0x0A;	
000104  200a              MOVS     r0,#0xa
000106  7098              STRB     r0,[r3,#2]
;;;66     }
000108  b002              ADD      sp,sp,#8
00010a  4770              BX       lr
;;;67     
                          ENDP

                  TermoRequest PROC
;;;68     int  TermoRequest(void) {
00010c  b530              PUSH     {r4,r5,lr}
;;;69       if (TermodatStatus)	{
00010e  f2400400          MOVW     r4,#:LOWER16: ||.data||
000112  f2c00400          MOVT     r4,#:UPPER16: ||.data||
000116  6820              LDR      r0,[r4,#0]            ;68  ; TermodatStatus
;;;70     	  switch (TermodatStep) {
000118  2501              MOVS     r5,#1
00011a  b358              CBZ      r0,|L1.372|
00011c  6861              LDR      r1,[r4,#4]  ; TermodatStep
00011e  b121              CBZ      r1,|L1.298|
000120  2901              CMP      r1,#1
000122  d00c              BEQ      |L1.318|
000124  2902              CMP      r1,#2
000126  d016              BEQ      |L1.342|
000128  e021              B        |L1.366|
                  |L1.298|
;;;71     	    case 0x00: {SetParam(0x01B0,0x0001,TDChannels-TermodatStatus,TxBufferTD);} break;
00012a  f1c0020c          RSB      r2,r0,#0xc
00012e  f2400300          MOVW     r3,#:LOWER16: ||.bss||
000132  f2c00300          MOVT     r3,#:UPPER16: ||.bss||
000136  2101              MOVS     r1,#1
000138  f44f70d8          MOV      r0,#0x1b0
00013c  e008              B        |L1.336|
                  |L1.318|
;;;72     	    case 0x01: {SetParam(0x01B1,0x0000,TDChannels-TermodatStatus,TxBufferTD);} break;
00013e  f1c0020c          RSB      r2,r0,#0xc
000142  f2400300          MOVW     r3,#:LOWER16: ||.bss||
000146  f2c00300          MOVT     r3,#:UPPER16: ||.bss||
00014a  2100              MOVS     r1,#0
00014c  f24010b1          MOV      r0,#0x1b1
                  |L1.336|
000150  f7fffffe          BL       SetParam
000154  e00b              B        |L1.366|
                  |L1.342|
;;;73     	    case 0x02: {SetParam(0x01B5,  1000,TDChannels-TermodatStatus,TxBufferTD);} break;
000156  f1c0020c          RSB      r2,r0,#0xc
00015a  f2400300          MOVW     r3,#:LOWER16: ||.bss||
00015e  f2c00300          MOVT     r3,#:UPPER16: ||.bss||
000162  f44f717a          MOV      r1,#0x3e8
000166  f24010b5          MOV      r0,#0x1b5
00016a  f7fffffe          BL       SetParam
                  |L1.366|
;;;74     	  }//switch
;;;75     	  TermodatBUSY = 1;
;;;76     		return 17;
00016e  2011              MOVS     r0,#0x11
000170  60a5              STR      r5,[r4,#8]  ; TermodatBUSY
;;;77     	}
;;;78       else {/* Запрос температур	*/
;;;79     		TxBufferTD[0]   = 0x3A;		
;;;80     		TxBufferTD[1]   = 0x30;
;;;81     		TxBufferTD[2]   = 0x31;	
;;;82     		TxBufferTD[3]   = 0x30;		
;;;83     		TxBufferTD[4]   = 0x33;		
;;;84     		TxBufferTD[5]   = 0x30;		
;;;85     		TxBufferTD[6]   = 0x30;		
;;;86     		TxBufferTD[7]   = 0x30;		
;;;87     		TxBufferTD[8]   = 0x30;		
;;;88     		TxBufferTD[9]   = 0x30;		
;;;89     		TxBufferTD[10]  = 0x30;		
;;;90     		TxBufferTD[11]  = 0x30;		
;;;91     		TxBufferTD[12]  = 0x43;		
;;;92     		TxBufferTD[13]  = 0x46;		
;;;93     		TxBufferTD[14]  = 0x30;		
;;;94     		TxBufferTD[15]  = 0x0D;		
;;;95     		TxBufferTD[16]  = 0x0A;
;;;96     		TermodatBUSY = 1;
;;;97     		return 17;
;;;98     	} /* конец запроса температур	*/ 		
;;;99     } //int TermoRequest(void) 
000172  bd30              POP      {r4,r5,pc}
                  |L1.372|
000174  213a              MOVS     r1,#0x3a              ;79
000176  f2400000          MOVW     r0,#:LOWER16: ||.bss||;79
00017a  f2c00000          MOVT     r0,#:UPPER16: ||.bss||;79
00017e  7001              STRB     r1,[r0,#0]            ;79
000180  2130              MOVS     r1,#0x30              ;80
000182  7041              STRB     r1,[r0,#1]            ;80
000184  2231              MOVS     r2,#0x31              ;81
000186  7082              STRB     r2,[r0,#2]            ;81
000188  70c1              STRB     r1,[r0,#3]            ;82
00018a  2233              MOVS     r2,#0x33              ;83
00018c  7102              STRB     r2,[r0,#4]            ;83
00018e  7141              STRB     r1,[r0,#5]            ;84
000190  7181              STRB     r1,[r0,#6]            ;85
000192  71c1              STRB     r1,[r0,#7]            ;86
000194  7201              STRB     r1,[r0,#8]            ;87
000196  7241              STRB     r1,[r0,#9]            ;88
000198  7281              STRB     r1,[r0,#0xa]          ;89
00019a  72c1              STRB     r1,[r0,#0xb]          ;90
00019c  2243              MOVS     r2,#0x43              ;91
00019e  7302              STRB     r2,[r0,#0xc]          ;91
0001a0  2246              MOVS     r2,#0x46              ;92
0001a2  7342              STRB     r2,[r0,#0xd]          ;92
0001a4  7381              STRB     r1,[r0,#0xe]          ;93
0001a6  210d              MOVS     r1,#0xd               ;94
0001a8  73c1              STRB     r1,[r0,#0xf]          ;94
0001aa  210a              MOVS     r1,#0xa               ;95
0001ac  7401              STRB     r1,[r0,#0x10]         ;95
0001ae  2011              MOVS     r0,#0x11              ;97
0001b0  60a5              STR      r5,[r4,#8]            ;97  ; TermodatBUSY
0001b2  bd30              POP      {r4,r5,pc}
;;;100    
                          ENDP

                  TermodatCycle PROC
;;;101    int  TermodatCycle(int Port) {
0001b4  b570              PUSH     {r4-r6,lr}
0001b6  4605              MOV      r5,r0
;;;102    int TxCount;
;;;103      if (TermodatBUSY) {TermodatError = __QADD(TermodatError,1);	}
0001b8  f2400400          MOVW     r4,#:LOWER16: ||.data||
0001bc  f2c00400          MOVT     r4,#:UPPER16: ||.data||
0001c0  68a0              LDR      r0,[r4,#8]            ;101  ; TermodatBUSY
0001c2  b120              CBZ      r0,|L1.462|
0001c4  68e0              LDR      r0,[r4,#0xc]  ; TermodatError
0001c6  2101              MOVS     r1,#1
0001c8  fa81f080          QADD     r0,r0,r1
0001cc  60e0              STR      r0,[r4,#0xc]  ; TermodatError
                  |L1.462|
;;;104      if (TermodatError > 10) {TermodatInit = 0; TermodatStep = 0; TermodatStatus = 0;}	
0001ce  68e1              LDR      r1,[r4,#0xc]  ; TermodatError
0001d0  2000              MOVS     r0,#0
0001d2  290a              CMP      r1,#0xa
0001d4  bfc4              ITT      GT
0001d6  6120              STRGT    r0,[r4,#0x10]  ; TermodatInit
0001d8  6060              STRGT    r0,[r4,#4]  ; TermodatStep
0001da  dc04              BGT      |L1.486|
;;;105      if (TermodatInit) {TermodatInit = 0; TermodatStep = 0; TermodatStatus = TDChannels;}	
0001dc  6921              LDR      r1,[r4,#0x10]  ; TermodatInit
0001de  b119              CBZ      r1,|L1.488|
0001e0  6120              STR      r0,[r4,#0x10]  ; TermodatInit
0001e2  6060              STR      r0,[r4,#4]  ; TermodatStep
0001e4  200c              MOVS     r0,#0xc
                  |L1.486|
0001e6  6020              STR      r0,[r4,#0]            ;104  ; TermodatStatus
                  |L1.488|
;;;106      TxCount = TermoRequest();
0001e8  f7fffffe          BL       TermoRequest
;;;107    	MasterSend(Port, TxCount, SendAlways, TxBufferTD);
0001ec  f2400300          MOVW     r3,#:LOWER16: ||.bss||
0001f0  f2c00300          MOVT     r3,#:UPPER16: ||.bss||
0001f4  4601              MOV      r1,r0
0001f6  2200              MOVS     r2,#0
0001f8  4628              MOV      r0,r5
0001fa  f7fffffe          BL       MasterSend
;;;108    	return TermodatError;
0001fe  68e0              LDR      r0,[r4,#0xc]  ; TermodatError
;;;109    }	//void TermodatCycle(int Port)
000200  bd70              POP      {r4-r6,pc}
;;;110    int  RecieveTermodat(int RxCount, unsigned char *RxBuffer, unsigned char *TxBuffer, int Status, int PortNum) { 
                          ENDP

                  RecieveTermodat PROC
000202  e92d01f0          PUSH     {r4-r8}
;;;111    int i = 0;
000206  2200              MOVS     r2,#0
;;;112    short T;
;;;113    	/* Ошибка четности или кол-во принятых данных						*/
;;;114    	if (Status & USART_RecieveError) {
000208  f0130f29          TST      r3,#0x29
;;;115    		TermodatError = __QADD(TermodatError,1); 
00020c  f2400c00          MOVW     r12,#:LOWER16: ||.data||
000210  f2c00c00          MOVT     r12,#:UPPER16: ||.data||
000214  f04f0701          MOV      r7,#1
000218  4614              MOV      r4,r2
00021a  d10e              BNE      |L1.570|
;;;116    		TermodatBUSY = 0;	
;;;117    		return 0;
;;;118    	}		
;;;119      /* Если мы отправляли команду, то ответ равен запросу 	*/
;;;120      if (TermodatStatus)	{	
00021c  f8dc5000          LDR      r5,[r12,#0]  ; TermodatStatus
000220  b33d              CBZ      r5,|L1.626|
;;;121    	  if (RxCount != 17) {
000222  2811              CMP      r0,#0x11
;;;122    			TermodatError = __QADD(TermodatError,1); 
;;;123    			TermodatBUSY = 0;	
;;;124    			return 0;
;;;125    		}			
;;;126    		
;;;127    		for (i = 0; i < RxCount; i++) {
;;;128    			if (TxBufferTD[i] != RxBuffer[i]) {
000224  bf04              ITT      EQ
000226  f2400300          MOVWEQ   r3,#:LOWER16: ||.bss||
00022a  f2c00300          MOVTEQ   r3,#:UPPER16: ||.bss||
00022e  d104              BNE      |L1.570|
                  |L1.560|
000230  5c9e              LDRB     r6,[r3,r2]
000232  f8118002          LDRB     r8,[r1,r2]
000236  4546              CMP      r6,r8
000238  d009              BEQ      |L1.590|
                  |L1.570|
;;;129    				TermodatError = __QADD(TermodatError,1); 
00023a  f8dc000c          LDR      r0,[r12,#0xc]  ; TermodatError
00023e  fa87f080          QADD     r0,r0,r7
000242  e9cc4002          STRD     r4,r0,[r12,#8]
;;;130    				TermodatBUSY = 0;	
;;;131    				return 0;
;;;132    			}		
;;;133    		}
;;;134    
;;;135    		TermodatStep++;							
;;;136    		if (TermodatStep>2) {TermodatStatus--; TermodatStep = 0;}
;;;137    
;;;138    		TermodatError = 0;
;;;139    		TermodatBUSY = 0;
;;;140    		return 0;
;;;141    	} 
;;;142    	
;;;143      /* Получение данных от термодата 				*/
;;;144      if (RxCount != 59) {
;;;145    		TermodatError = __QADD(TermodatError,1); 
;;;146    		TermodatBUSY = 0;	
;;;147    		return 0;
;;;148    	}	
;;;149      /* Проверка LRC													*/
;;;150      if (CheckTermodatData(RxBuffer)) {
;;;151    		TermodatError = __QADD(TermodatError,1); 
;;;152    		TermodatBUSY = 0;	
;;;153    		return 0;
;;;154    	}		
;;;155    
;;;156      /* Извлечение данных										*/
;;;157      for (i = 0;  i < TDChannels;  i++) {
;;;158    		T = (ASCIIToChar(RxBuffer[(i<<2)+ 7])<<12)|	
;;;159    				(ASCIIToChar(RxBuffer[(i<<2)+ 8])<< 8)|
;;;160    				(ASCIIToChar(RxBuffer[(i<<2)+ 9])<< 4)|
;;;161    				(ASCIIToChar(RxBuffer[(i<<2)+10])<< 0);
;;;162    				EvPrms.TD[i] = T;
;;;163      }
;;;164      TermodatError = 0;
;;;165      TermodatBUSY = 0;
;;;166    }
000246  e8bd01f0          POP      {r4-r8}
00024a  2000              MOVS     r0,#0                 ;131
00024c  4770              BX       lr
                  |L1.590|
00024e  1c52              ADDS     r2,r2,#1
000250  4282              CMP      r2,r0                 ;127
000252  dbed              BLT      |L1.560|
000254  f8dc0004          LDR      r0,[r12,#4]           ;135  ; TermodatStep
000258  1c40              ADDS     r0,r0,#1              ;135
00025a  f8cc0004          STR      r0,[r12,#4]           ;136  ; TermodatStep
00025e  2802              CMP      r0,#2                 ;136
000260  bfc4              ITT      GT                    ;136
000262  1e68              SUBGT    r0,r5,#1              ;136
000264  e9cc0400          STRDGT   r0,r4,[r12,#0]        ;136
000268  f8cc400c          STR      r4,[r12,#0xc]         ;139  ; TermodatError
00026c  f8cc4008          STR      r4,[r12,#8]           ;136  ; TermodatBUSY
000270  e03c              B        |L1.748|
                  |L1.626|
000272  283b              CMP      r0,#0x3b              ;144
000274  d134              BNE      |L1.736|
000276  7808              LDRB     r0,[r1,#0]            ;144
000278  2500              MOVS     r5,#0                 ;144
00027a  283a              CMP      r0,#0x3a              ;144
00027c  bf04              ITT      EQ                    ;144
00027e  f8910039          LDRBEQ   r0,[r1,#0x39]         ;144
000282  280d              CMPEQ    r0,#0xd               ;144
000284  d12c              BNE      |L1.736|
000286  f891003a          LDRB     r0,[r1,#0x3a]         ;144
00028a  280a              CMP      r0,#0xa               ;144
00028c  bf08              IT       EQ                    ;144
00028e  2200              MOVEQ    r2,#0                 ;144
000290  d126              BNE      |L1.736|
                  |L1.658|
000292  eb010642          ADD      r6,r1,r2,LSL #1       ;144
000296  78b0              LDRB     r0,[r6,#2]            ;144
000298  2860              CMP      r0,#0x60              ;144
00029a  bf84              ITT      HI                    ;144
00029c  3857              SUBHI    r0,r0,#0x57           ;144
00029e  b2c3              UXTBHI   r3,r0                 ;144
0002a0  d804              BHI      |L1.684|
0002a2  2840              CMP      r0,#0x40              ;144
0002a4  bf8c              ITE      HI                    ;144
0002a6  3837              SUBHI    r0,r0,#0x37           ;144
0002a8  3830              SUBLS    r0,r0,#0x30           ;144
0002aa  b2c3              UXTB     r3,r0                 ;144
                  |L1.684|
0002ac  7870              LDRB     r0,[r6,#1]            ;144
0002ae  2860              CMP      r0,#0x60              ;144
0002b0  bf84              ITT      HI                    ;144
0002b2  3857              SUBHI    r0,r0,#0x57           ;144
0002b4  b2c0              UXTBHI   r0,r0                 ;144
0002b6  d804              BHI      |L1.706|
0002b8  2840              CMP      r0,#0x40              ;144
0002ba  bf8c              ITE      HI                    ;144
0002bc  3837              SUBHI    r0,r0,#0x37           ;144
0002be  3830              SUBLS    r0,r0,#0x30           ;144
0002c0  b2c0              UXTB     r0,r0                 ;144
                  |L1.706|
0002c2  ea431000          ORR      r0,r3,r0,LSL #4       ;144
0002c6  4428              ADD      r0,r0,r5              ;144
0002c8  1c52              ADDS     r2,r2,#1              ;144
0002ca  b2c5              UXTB     r5,r0                 ;144
0002cc  2a1c              CMP      r2,#0x1c              ;144
0002ce  dbe0              BLT      |L1.658|
0002d0  2d00              CMP      r5,#0                 ;144
0002d2  bf02              ITTT     EQ                    ;157
0002d4  2200              MOVEQ    r2,#0                 ;157
0002d6  f2400500          MOVWEQ   r5,#:LOWER16: Metro
0002da  f2c00500          MOVTEQ   r5,#:UPPER16: Metro
0002de  d009              BEQ      |L1.756|
                  |L1.736|
0002e0  f8dc000c          LDR      r0,[r12,#0xc]         ;151  ; TermodatError
0002e4  fa87f080          QADD     r0,r0,r7              ;151
0002e8  e9cc4002          STRD     r4,r0,[r12,#8]        ;151
                  |L1.748|
0002ec  e8bd01f0          POP      {r4-r8}
0002f0  2000              MOVS     r0,#0                 ;153
0002f2  4770              BX       lr
                  |L1.756|
0002f4  eb010382          ADD      r3,r1,r2,LSL #2       ;158
0002f8  79d8              LDRB     r0,[r3,#7]            ;158
0002fa  2860              CMP      r0,#0x60              ;158
0002fc  bf84              ITT      HI                    ;158
0002fe  3857              SUBHI    r0,r0,#0x57           ;158
000300  b2c0              UXTBHI   r0,r0                 ;158
000302  d804              BHI      |L1.782|
000304  2840              CMP      r0,#0x40              ;158
000306  bf8c              ITE      HI                    ;158
000308  3837              SUBHI    r0,r0,#0x37           ;158
00030a  3830              SUBLS    r0,r0,#0x30           ;158
00030c  b2c0              UXTB     r0,r0                 ;158
                  |L1.782|
00030e  0306              LSLS     r6,r0,#12             ;158
000310  7a18              LDRB     r0,[r3,#8]            ;158
000312  2860              CMP      r0,#0x60              ;158
000314  bf84              ITT      HI                    ;158
000316  3857              SUBHI    r0,r0,#0x57           ;158
000318  b2c0              UXTBHI   r0,r0                 ;158
00031a  d804              BHI      |L1.806|
00031c  2840              CMP      r0,#0x40              ;158
00031e  bf8c              ITE      HI                    ;158
000320  3837              SUBHI    r0,r0,#0x37           ;158
000322  3830              SUBLS    r0,r0,#0x30           ;158
000324  b2c0              UXTB     r0,r0                 ;158
                  |L1.806|
000326  ea462600          ORR      r6,r6,r0,LSL #8       ;158
00032a  7a58              LDRB     r0,[r3,#9]            ;158
00032c  2860              CMP      r0,#0x60              ;158
00032e  bf84              ITT      HI                    ;158
000330  3857              SUBHI    r0,r0,#0x57           ;158
000332  b2c0              UXTBHI   r0,r0                 ;158
000334  d804              BHI      |L1.832|
000336  2840              CMP      r0,#0x40              ;158
000338  bf8c              ITE      HI                    ;158
00033a  3837              SUBHI    r0,r0,#0x37           ;158
00033c  3830              SUBLS    r0,r0,#0x30           ;158
00033e  b2c0              UXTB     r0,r0                 ;158
                  |L1.832|
000340  ea461600          ORR      r6,r6,r0,LSL #4       ;158
000344  7a98              LDRB     r0,[r3,#0xa]          ;158
000346  2860              CMP      r0,#0x60              ;158
000348  bf84              ITT      HI                    ;158
00034a  3857              SUBHI    r0,r0,#0x57           ;158
00034c  b2c0              UXTBHI   r0,r0                 ;158
00034e  d804              BHI      |L1.858|
000350  2840              CMP      r0,#0x40              ;158
000352  bf8c              ITE      HI                    ;158
000354  3837              SUBHI    r0,r0,#0x37           ;158
000356  3830              SUBLS    r0,r0,#0x30           ;158
000358  b2c0              UXTB     r0,r0                 ;158
                  |L1.858|
00035a  eb050342          ADD      r3,r5,r2,LSL #1       ;162
00035e  4330              ORRS     r0,r0,r6              ;158
000360  1c52              ADDS     r2,r2,#1              ;162
000362  f8a30068          STRH     r0,[r3,#0x68]         ;162
000366  2a0c              CMP      r2,#0xc               ;157
000368  dbc4              BLT      |L1.756|
00036a  f8cc400c          STR      r4,[r12,#0xc]         ;165  ; TermodatError
00036e  f8cc4008          STR      r4,[r12,#8]           ;165  ; TermodatBUSY
000372  e8bd01f0          POP      {r4-r8}
000376  4770              BX       lr
;;;167    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  TxBufferTD
                          %        80

                          AREA ||.data||, DATA, ALIGN=2

                  TermodatStatus
                          DCD      0x00000000
                  TermodatStep
                          DCD      0x00000000
                  TermodatBUSY
                          DCD      0x00000000
                  TermodatError
                          DCD      0x00000000
                  TermodatInit
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "SOURCE\\Termodat.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_Termodat_c_479a8a99____REV16|
#line 129 ".\\STARTUP\\core_cmInstr.h"
|__asm___10_Termodat_c_479a8a99____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_Termodat_c_479a8a99____REVSH|
#line 144
|__asm___10_Termodat_c_479a8a99____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
