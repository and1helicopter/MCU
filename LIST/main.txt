; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --no_integer_literal_pools --list -c --asm --interleave -o.\exec\main.o --asm_dir=.\LIST\ --list_dir=.\LIST\ --depend=.\exec\main.d --cpu=Cortex-M4.fp --apcs=interwork -Otime --diag_suppress=9931 -I.\STARTUP -I.\PERIPH -I..\PRG1 -I.\SOURCE -IF:\Program\Keil_v5\ARM\RV31\INC -IF:\Program\Keil_v5\ARM\CMSIS\Include -IF:\Program\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=524 -DEK_PP_0815_12_03 -DSTM32F429_439xx --omf_browse=.\exec\main.crf SOURCE\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  main PROC
;;;3      
;;;4      int main() {
000000  2000              MOVS     r0,#0
;;;5      int i;	
;;;6      	for (i=0; i<240; i++) NVIC->IP[i] = 0xF0;										/* Ставим низший приоритет для всех прерываний	*/
000002  24f0              MOVS     r4,#0xf0
                  |L1.4|
000004  f10021e0          ADD      r1,r0,#0xe000e000
000008  f8814400          STRB     r4,[r1,#0x400]
00000c  1c40              ADDS     r0,r0,#1
00000e  28f0              CMP      r0,#0xf0
000010  dbf8              BLT      |L1.4|
;;;7      	SystemCoreClockUpdate();																		/* Расчет тактовой частоты процессора						*/
000012  f7fffffe          BL       SystemCoreClockUpdate
;;;8      	SysTick_Config(SystemCoreClock / 8 / 1000, SysTick_Prty);		/* 1000 раз / сек																*/
000016  f2400000          MOVW     r0,#:LOWER16: SystemCoreClock
00001a  f2c00000          MOVT     r0,#:UPPER16: SystemCoreClock
00001e  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000020  f44f51fa          MOV      r1,#0x1f40
000024  fbb0f0f1          UDIV     r0,r0,r1
000028  1e40              SUBS     r0,r0,#1
00002a  f1b07f80          CMP      r0,#0x1000000
00002e  d20c              BCS      |L1.74|
000030  f04f21e0          MOV      r1,#0xe000e000
000034  6148              STR      r0,[r1,#0x14]
000036  f24e000f          MOV      r0,#0xe00f
00003a  f2ce0000          MOVT     r0,#0xe000
00003e  f8804d14          STRB     r4,[r0,#0xd14]
000042  2000              MOVS     r0,#0
000044  6188              STR      r0,[r1,#0x18]
000046  2003              MOVS     r0,#3
000048  6108              STR      r0,[r1,#0x10]
                  |L1.74|
;;;9      
;;;10     	RTC_OK = InitRTC(0x01000000);																/* Инициализация часов													*/
00004a  f04f7080          MOV      r0,#0x1000000
00004e  f7fffffe          BL       InitRTC
000052  f2400100          MOVW     r1,#:LOWER16: RTC_OK
000056  f2c00100          MOVT     r1,#:UPPER16: RTC_OK
;;;11     
;;;12     	/* Инициализация внешней энергонезависимой памяти						*/
;;;13     	InitFram();
00005a  6008              STR      r0,[r1,#0]  ; RTC_OK
00005c  f7fffffe          BL       InitFram
;;;14     	/* Загрузка параметров																			*/
;;;15     	StdPrms.ParamsLoaded = LoadParamsProc();
000060  f7fffffe          BL       LoadParamsProc
000064  b200              SXTH     r0,r0
000066  f2400400          MOVW     r4,#:LOWER16: Metro
00006a  f2c00400          MOVT     r4,#:UPPER16: Metro
00006e  f8a40202          STRH     r0,[r4,#0x202]
;;;16     	InitParams(StdPrms.ParamsLoaded);
000072  f7fffffe          BL       InitParams
;;;17     	/*Инициализация осциллографирования*/
;;;18     	InitOscil(&SavePrms.Oscil, &PrgData.OscilCmnd, (uint16_t*)&PrgData, (uint16_t*)&ExtMem);
000076  f2400300          MOVW     r3,#:LOWER16: ExtMem
00007a  f2c00300          MOVT     r3,#:UPPER16: ExtMem
00007e  4622              MOV      r2,r4
000080  f5045100          ADD      r1,r4,#0x2000
000084  f5046080          ADD      r0,r4,#0x400
000088  f7fffffe          BL       InitOscil
;;;19     
;;;20     	
;;;21     	/* Инициализация пульта																			*/	
;;;22     	InitPult();
00008c  f7fffffe          BL       InitPult
;;;23     	
;;;24     
;;;25     	for (i=0; i<8; i++) {SavePrms.UartParams[i] = 0x01010400;}	/* Addr = 1, 115200, odd, 1 stop-bit	*/
000090  f44f6180          MOV      r1,#0x400
000094  2000              MOVS     r0,#0
000096  f2c01101          MOVT     r1,#0x101
                  |L1.154|
00009a  eb040280          ADD      r2,r4,r0,LSL #2
00009e  1c40              ADDS     r0,r0,#1
0000a0  f8c21e80          STR      r1,[r2,#0xe80]
0000a4  2808              CMP      r0,#8
0000a6  dbf8              BLT      |L1.154|
;;;26     
;;;27     #ifdef HEAD2
;;;28     	InitUsart(X13,GetSavedUartParams(X13), ModbusStdProc);
;;;29     #else
;;;30     	InitUsart(X13, Baud9600 | NoParity | OneStopBit, RecieveTermodat);
0000a8  f2400200          MOVW     r2,#:LOWER16: RecieveTermodat
0000ac  f2c00200          MOVT     r2,#:UPPER16: RecieveTermodat
0000b0  2104              MOVS     r1,#4
0000b2  2003              MOVS     r0,#3
0000b4  f7fffffe          BL       InitUsart
;;;31     #endif
;;;32     	
;;;33       InitUsart(X13, Baud115200 | OddParity | OneStopBit, ModbusStdProc);
0000b8  f2400200          MOVW     r2,#:LOWER16: ModbusStdProc
0000bc  f2c00200          MOVT     r2,#:UPPER16: ModbusStdProc
0000c0  f44f6180          MOV      r1,#0x400
0000c4  2003              MOVS     r0,#3
0000c6  f7fffffe          BL       InitUsart
;;;34     	InitUsart(X6, Baud115200 | OddParity | OneStopBit, ModbusStdProc);	
0000ca  f2400200          MOVW     r2,#:LOWER16: ModbusStdProc
0000ce  f2c00200          MOVT     r2,#:UPPER16: ModbusStdProc
0000d2  f44f6180          MOV      r1,#0x400
0000d6  2004              MOVS     r0,#4
0000d8  f7fffffe          BL       InitUsart
;;;35     
;;;36     	InitUsart(X8_9, Baud115200 | OddParity | OneStopBit, RecieveSlaveData);	
0000dc  f2400200          MOVW     r2,#:LOWER16: RecieveSlaveData
0000e0  f2c00200          MOVT     r2,#:UPPER16: RecieveSlaveData
0000e4  f44f6180          MOV      r1,#0x400
0000e8  2005              MOVS     r0,#5
0000ea  f7fffffe          BL       InitUsart
;;;37     	InitUsart(X14_15, Baud115200 | OddParity | OneStopBit, RecieveDriverData);		
0000ee  f2400200          MOVW     r2,#:LOWER16: RecieveDriverData
0000f2  f2c00200          MOVT     r2,#:UPPER16: RecieveDriverData
0000f6  f44f6180          MOV      r1,#0x400
0000fa  2001              MOVS     r0,#1
0000fc  f7fffffe          BL       InitUsart
;;;38     	InitUsart(X16_17, Baud115200 | OddParity | OneStopBit, RecieveDriverData);	
000100  f2400200          MOVW     r2,#:LOWER16: RecieveDriverData
000104  f2c00200          MOVT     r2,#:UPPER16: RecieveDriverData
000108  f44f6180          MOV      r1,#0x400
00010c  2002              MOVS     r0,#2
00010e  f7fffffe          BL       InitUsart
;;;39     
;;;40     	
;;;41     //	
;;;42     //InitCAN1();
;;;43     //	
;;;44     	TIM8_Init(PWMFreq);
000112  f44f60fa          MOV      r0,#0x7d0
000116  f7fffffe          BL       TIM8_Init
;;;45     	
;;;46     	InitExtMem();
00011a  f7fffffe          BL       InitExtMem
;;;47     	InitTrgExtADC(PWMFreq * ADCxCycle);		/* Обязательно после TIM8_Init(PWMfreq);	*/
00011e  f44f507a          MOV      r0,#0x3e80
000122  f7fffffe          BL       InitTrgExtADC
;;;48     	
;;;49     	InitIntADC();	
000126  f7fffffe          BL       InitIntADC
;;;50     	TIM1_Init(PWMFreq);
00012a  f44f60fa          MOV      r0,#0x7d0
00012e  f7fffffe          BL       TIM1_Init
;;;51     //	
;;;52     //TIM2_TIM5_Init();
;;;53     
;;;54     	/*	Считываем часы реального времени				*/
;;;55     	ReadRTC(NotWaitClock,&EvPrms.RTC_Date,&EvPrms.RTC_Time );
000132  f1040208          ADD      r2,r4,#8
000136  1d21              ADDS     r1,r4,#4
000138  2000              MOVS     r0,#0
00013a  f7fffffe          BL       ReadRTC
;;;56     	/* Событие RESET														*/
;;;57     	EvPrms.EventCode = 0x0053;
00013e  2053              MOVS     r0,#0x53
000140  6020              STR      r0,[r4,#0]  ; Metro
                  |L1.322|
;;;58     	
;;;59     	while (1)	{
;;;60     		Display();
000142  f7fffffe          BL       Display
000146  e7fc              B        |L1.322|
;;;61     	}
;;;62     }
;;;63     
                          ENDP

                  SysTick_Handler PROC
;;;64     /* Прерывание системного таймера	*/
;;;65     void SysTick_Handler() {
000148  b510              PUSH     {r4,lr}
;;;66     static int LedCount = 0;
;;;67     			 int i;
;;;68     	
;;;69     #if defined (LedToggle)	
;;;70     	if (LedCount) {LedCount--;} else {
00014a  f2400100          MOVW     r1,#:LOWER16: ||.data||
00014e  f2c00100          MOVT     r1,#:UPPER16: ||.data||
000152  6808              LDR      r0,[r1,#0]  ; LedCount
000154  2800              CMP      r0,#0
000156  bf1c              ITT      NE
000158  1e40              SUBNE    r0,r0,#1
00015a  6008              STRNE    r0,[r1,#0]  ; LedCount
00015c  d105              BNE      |L1.362|
;;;71     //		LedToggle(); 
;;;72     		LedCount = 499; 
00015e  f24010f3          MOV      r0,#0x1f3
;;;73     #ifndef HEAD2
;;;74     		TermodatCycle(X13);
000162  6008              STR      r0,[r1,#0]  ; LedCount
000164  2003              MOVS     r0,#3
000166  f7fffffe          BL       TermodatCycle
                  |L1.362|
;;;75     #endif		
;;;76     	}
;;;77     #endif		
;;;78     	
;;;79     /*  Проверяем на установку нового времени		*/
;;;80     	if (StdPrms.SetDate && StdPrms.SetTime) {PackRTC(StdPrms.SetTime,StdPrms.SetDate); StdPrms.SetTime = StdPrms.SetDate = 0;}
00016a  f2400400          MOVW     r4,#:LOWER16: Metro
00016e  f2c00400          MOVT     r4,#:UPPER16: Metro
000172  f8d41204          LDR      r1,[r4,#0x204]  ; Metro
000176  2900              CMP      r1,#0
000178  bf1c              ITT      NE
00017a  f8d40208          LDRNE    r0,[r4,#0x208]  ; Metro
00017e  2800              CMPNE    r0,#0
000180  d006              BEQ      |L1.400|
000182  f7fffffe          BL       PackRTC
000186  2000              MOVS     r0,#0
000188  f8c40204          STR      r0,[r4,#0x204]  ; Metro
00018c  f8c40208          STR      r0,[r4,#0x208]  ; Metro
                  |L1.400|
;;;81     
;;;82     /* 	Установка нулей датчиков	 							*/
;;;83     	SetZeroChs(&StdPrms.SetZeroCmd);
000190  f5047005          ADD      r0,r4,#0x214
000194  f7fffffe          BL       SetZeroChs
;;;84     	
;;;85     
;;;86     #ifdef PultEnable
;;;87       PultUpdate();
000198  e8bd4010          POP      {r4,lr}
00019c  f7ffbffe          B.W      PultUpdate
;;;88     #endif
;;;89     	
;;;90     }
;;;91     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  LedCount
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "SOURCE\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 129 ".\\STARTUP\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 144
|__asm___6_main_c_main____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
