; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --no_integer_literal_pools --list -c --asm --interleave -o.\exec\system_stm32f4xx.o --asm_dir=.\LIST\ --list_dir=.\LIST\ --depend=.\exec\system_stm32f4xx.d --cpu=Cortex-M4.fp --apcs=interwork -Otime --diag_suppress=9931 -I.\STARTUP -I.\PERIPH -I..\PRG1 -I.\SOURCE -IF:\Program\Keil_v5\ARM\RV31\INC -IF:\Program\Keil_v5\ARM\CMSIS\Include -IF:\Program\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=524 -DEK_PP_0815_12_03 -DSTM32F429_439xx --omf_browse=.\exec\system_stm32f4xx.crf STARTUP\system_stm32f4xx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  SystemInit PROC
;;;336      */
;;;337    void SystemInit(void)
000000  f64e5088          MOV      r0,#0xed88
;;;338    {
;;;339      /* FPU settings ------------------------------------------------------------*/
;;;340      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;341        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
000004  f2ce0000          MOVT     r0,#0xe000
000008  b082              SUB      sp,sp,#8              ;338
00000a  6801              LDR      r1,[r0,#0]
00000c  f4410170          ORR      r1,r1,#0xf00000
000010  6001              STR      r1,[r0,#0]
;;;342      #endif
;;;343      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;344      /* Set HSION bit */
;;;345      RCC->CR |= (uint32_t)0x00000001;
000012  f44f5060          MOV      r0,#0x3800
000016  f2c40002          MOVT     r0,#0x4002
00001a  6801              LDR      r1,[r0,#0]
00001c  f0410101          ORR      r1,r1,#1
000020  6001              STR      r1,[r0,#0]
;;;346    
;;;347      /* Reset CFGR register */
;;;348      RCC->CFGR = 0x00000000;
000022  f6430108          MOV      r1,#0x3808
000026  f2c40102          MOVT     r1,#0x4002
00002a  f04f0c00          MOV      r12,#0
00002e  f8c1c000          STR      r12,[r1,#0]
;;;349    
;;;350      /* Reset HSEON, CSSON and PLLON bits */
;;;351      RCC->CR &= (uint32_t)0xFEF6FFFF;
000032  6802              LDR      r2,[r0,#0]
000034  f4222210          BIC      r2,r2,#0x90000
000038  f0227280          BIC      r2,r2,#0x1000000
00003c  6002              STR      r2,[r0,#0]
;;;352    
;;;353      /* Reset PLLCFGR register */
;;;354      RCC->PLLCFGR = 0x24003010;
00003e  f2430210          MOV      r2,#0x3010
000042  1d03              ADDS     r3,r0,#4
000044  f2c24200          MOVT     r2,#0x2400
000048  601a              STR      r2,[r3,#0]
;;;355    
;;;356      /* Reset HSEBYP bit */
;;;357      RCC->CR &= (uint32_t)0xFFFBFFFF;
00004a  6802              LDR      r2,[r0,#0]
00004c  f4222280          BIC      r2,r2,#0x40000
000050  6002              STR      r2,[r0,#0]
;;;358    
;;;359      /* Disable all interrupts */
;;;360      RCC->CIR = 0x00000000;
000052  1d0a              ADDS     r2,r1,#4
000054  f8c2c000          STR      r12,[r2,#0]
000058  f8cdc000          STR      r12,[sp,#0]
00005c  f8cdc004          STR      r12,[sp,#4]
000060  6802              LDR      r2,[r0,#0]
000062  f4423280          ORR      r2,r2,#0x10000
000066  6002              STR      r2,[r0,#0]
                  |L1.104|
000068  6802              LDR      r2,[r0,#0]
00006a  f4023200          AND      r2,r2,#0x20000
00006e  9201              STR      r2,[sp,#4]
000070  9a00              LDR      r2,[sp,#0]
000072  1c52              ADDS     r2,r2,#1
000074  9200              STR      r2,[sp,#0]
000076  9a01              LDR      r2,[sp,#4]
000078  b91a              CBNZ     r2,|L1.130|
00007a  9a00              LDR      r2,[sp,#0]
00007c  f5b24fa0          CMP      r2,#0x5000
000080  d1f2              BNE      |L1.104|
                  |L1.130|
000082  6802              LDR      r2,[r0,#0]
000084  f4123f00          TST      r2,#0x20000
000088  bf08              IT       EQ
00008a  f8cdc004          STREQ    r12,[sp,#4]
00008e  d040              BEQ      |L1.274|
000090  2201              MOVS     r2,#1
000092  9201              STR      r2,[sp,#4]
000094  f44f5261          MOV      r2,#0x3840
000098  f2c40202          MOVT     r2,#0x4002
00009c  f8d2c000          LDR      r12,[r2,#0]
0000a0  f04c5c80          ORR      r12,r12,#0x10000000
0000a4  f8c2c000          STR      r12,[r2,#0]
0000a8  f44f42e0          MOV      r2,#0x7000
0000ac  f2c40200          MOVT     r2,#0x4000
0000b0  f8d2c000          LDR      r12,[r2,#0]
0000b4  f44c4c40          ORR      r12,r12,#0xc000
0000b8  f8c2c000          STR      r12,[r2,#0]
0000bc  680a              LDR      r2,[r1,#0]
0000be  600a              STR      r2,[r1,#0]
0000c0  680a              LDR      r2,[r1,#0]
0000c2  f4424200          ORR      r2,r2,#0x8000
0000c6  600a              STR      r2,[r1,#0]
0000c8  680a              LDR      r2,[r1,#0]
0000ca  f44252a0          ORR      r2,r2,#0x1400
0000ce  600a              STR      r2,[r1,#0]
0000d0  f2454208          MOV      r2,#0x5408
0000d4  f2c07240          MOVT     r2,#0x740
0000d8  601a              STR      r2,[r3,#0]
0000da  6802              LDR      r2,[r0,#0]
0000dc  f0427280          ORR      r2,r2,#0x1000000
0000e0  6002              STR      r2,[r0,#0]
                  |L1.226|
0000e2  6802              LDR      r2,[r0,#0]
0000e4  f0127f00          TST      r2,#0x2000000
0000e8  d0fb              BEQ      |L1.226|
0000ea  f44f5270          MOV      r2,#0x3c00
0000ee  f2c40202          MOVT     r2,#0x4002
0000f2  f2407005          MOV      r0,#0x705
0000f6  6010              STR      r0,[r2,#0]
0000f8  6808              LDR      r0,[r1,#0]
0000fa  f0200003          BIC      r0,r0,#3
0000fe  6008              STR      r0,[r1,#0]
000100  6808              LDR      r0,[r1,#0]
000102  f0400002          ORR      r0,r0,#2
000106  6008              STR      r0,[r1,#0]
                  |L1.264|
000108  6808              LDR      r0,[r1,#0]
00010a  f000000c          AND      r0,r0,#0xc
00010e  2808              CMP      r0,#8
000110  d1fa              BNE      |L1.264|
                  |L1.274|
;;;361    
;;;362    #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM) || defined (RTE_DEVICE_FSMC) || defined (RTE_DEVICE_FMC) /* Keil */
;;;363      SystemInit_ExtMemCtl(); 
;;;364    #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM || RTE_DEVICE_FSMC || RTE_DEVICE_FMC */                                /* Keil */
;;;365             
;;;366      /* Configure the System clock source, PLL Multiplier and Divider factors, 
;;;367         AHB/APBx prescalers and Flash settings ----------------------------------*/
;;;368      SetSysClock();
;;;369    
;;;370      /* Configure the Vector Table location add offset address ------------------*/
;;;371    #ifdef VECT_TAB_SRAM
;;;372      SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;373    #else
;;;374      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
000112  f64e5108          MOV      r1,#0xed08
000116  f2ce0100          MOVT     r1,#0xe000
00011a  f04f6000          MOV      r0,#0x8000000
00011e  6008              STR      r0,[r1,#0]
;;;375    #endif
;;;376    
;;;377    	/*Run GPIO Config. Petrov.*/
;;;378    	GPIO_Config();
000120  b002              ADD      sp,sp,#8
000122  f7ffbffe          B.W      GPIO_Config
;;;379    }
;;;380    
                          ENDP

                  SystemCoreClockUpdate PROC
;;;416      */
;;;417    void SystemCoreClockUpdate(void)
000126  b430              PUSH     {r4,r5}
;;;418    {
;;;419      uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
;;;420      
;;;421      /* Get SYSCLK source -------------------------------------------------------*/
;;;422      tmp = RCC->CFGR & RCC_CFGR_SWS;
000128  f6430408          MOV      r4,#0x3808
00012c  f2c40402          MOVT     r4,#0x4002
000130  6820              LDR      r0,[r4,#0]
;;;423    
;;;424      switch (tmp)
;;;425      {
;;;426        case 0x00:  /* HSI used as system clock source */
;;;427          SystemCoreClock = HSI_VALUE;
000132  f44f5510          MOV      r5,#0x2400
000136  f010000c          ANDS     r0,r0,#0xc            ;422
00013a  f2c005f4          MOVT     r5,#0xf4
00013e  f2400100          MOVW     r1,#:LOWER16: ||.data||
000142  f2c00100          MOVT     r1,#:UPPER16: ||.data||
000146  d008              BEQ      |L1.346|
;;;428          break;
;;;429        case 0x04:  /* HSE used as system clock source */
;;;430          SystemCoreClock = HSE_VALUE;
000148  ea4f0c65          ASR      r12,r5,#1
00014c  2804              CMP      r0,#4                 ;424
00014e  bf08              IT       EQ
000150  f8c1c000          STREQ    r12,[r1,#0]  ; SystemCoreClock
000154  d002              BEQ      |L1.348|
000156  2808              CMP      r0,#8                 ;424
000158  d00e              BEQ      |L1.376|
                  |L1.346|
00015a  600d              STR      r5,[r1,#0]            ;427  ; SystemCoreClock
                  |L1.348|
;;;431          break;
;;;432        case 0x08:  /* PLL used as system clock source */
;;;433    
;;;434          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
;;;435             SYSCLK = PLL_VCO / PLL_P
;;;436             */    
;;;437          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
;;;438          pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
;;;439          
;;;440          if (pllsource != 0)
;;;441          {
;;;442            /* HSE used as PLL clock source */
;;;443            pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
;;;444          }
;;;445          else
;;;446          {
;;;447            /* HSI used as PLL clock source */
;;;448            pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
;;;449          }
;;;450    
;;;451          pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
;;;452          SystemCoreClock = pllvco/pllp;
;;;453          break;
;;;454        default:
;;;455          SystemCoreClock = HSI_VALUE;
;;;456          break;
;;;457      }
;;;458      /* Compute HCLK frequency --------------------------------------------------*/
;;;459      /* Get HCLK prescaler */
;;;460      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
00015c  6820              LDR      r0,[r4,#0]
00015e  f3c01003          UBFX     r0,r0,#4,#4
000162  f2400200          MOVW     r2,#:LOWER16: ||.data||+4
000166  f2c00200          MOVT     r2,#:UPPER16: ||.data||+4
00016a  5c10              LDRB     r0,[r2,r0]
;;;461      /* HCLK frequency */
;;;462      SystemCoreClock >>= tmp;
00016c  680a              LDR      r2,[r1,#0]  ; SystemCoreClock
00016e  fa22f000          LSR      r0,r2,r0
;;;463    }
000172  6008              STR      r0,[r1,#0]  ; SystemCoreClock
000174  bc30              POP      {r4,r5}
000176  4770              BX       lr
                  |L1.376|
000178  f6430204          MOV      r2,#0x3804            ;437
00017c  f2c40202          MOVT     r2,#0x4002            ;437
000180  6810              LDR      r0,[r2,#0]            ;437
000182  f3c05380          UBFX     r3,r0,#22,#1          ;437
000186  6810              LDR      r0,[r2,#0]            ;438
000188  2b00              CMP      r3,#0                 ;440
00018a  f000003f          AND      r0,r0,#0x3f           ;438
00018e  bf14              ITE      NE                    ;443
000190  fbbcf0f0          UDIVNE   r0,r12,r0             ;443
000194  fbb5f0f0          UDIVEQ   r0,r5,r0              ;448
000198  6813              LDR      r3,[r2,#0]            ;448
00019a  6812              LDR      r2,[r2,#0]            ;451
00019c  f3c31388          UBFX     r3,r3,#6,#9           ;448
0001a0  4358              MULS     r0,r3,r0              ;448
0001a2  f3c24201          UBFX     r2,r2,#16,#2          ;451
0001a6  1c52              ADDS     r2,r2,#1              ;451
0001a8  0052              LSLS     r2,r2,#1              ;451
0001aa  fbb0f0f2          UDIV     r0,r0,r2              ;452
0001ae  6008              STR      r0,[r1,#0]            ;440  ; SystemCoreClock
0001b0  e7d4              B        |L1.348|
;;;464    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x0a037a00
                  AHBPrescTable
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
00000c  01020304          DCB      0x01,0x02,0x03,0x04
000010  06070809          DCB      0x06,0x07,0x08,0x09

;*** Start embedded assembler ***

#line 1 "STARTUP\\system_stm32f4xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REV16|
#line 129 ".\\STARTUP\\core_cmInstr.h"
|__asm___18_system_stm32f4xx_c_5d646a67____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REVSH|
#line 144
|__asm___18_system_stm32f4xx_c_5d646a67____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
