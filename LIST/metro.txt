; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --no_integer_literal_pools --list -c --asm --interleave -o.\exec\metro.o --asm_dir=.\LIST\ --list_dir=.\LIST\ --depend=.\exec\metro.d --cpu=Cortex-M4.fp --apcs=interwork -Otime --diag_suppress=9931 -I.\STARTUP -I.\PERIPH -I..\PRG1 -I.\SOURCE -IF:\Program\Keil_v5\ARM\RV31\INC -IF:\Program\Keil_v5\ARM\CMSIS\Include -IF:\Program\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=524 -DEK_PP_0815_12_03 -DSTM32F429_439xx --omf_browse=.\exec\metro.crf SOURCE\Metro.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Alarms PROC
;;;424    
;;;425    static __inline  int Alarms(int OldErrorCode) {		/* Защиты																	*/
000000  e92d0ff0          PUSH     {r4-r11}
000004  4606              MOV      r6,r0
;;;426    static int  In[6] = {0,0,0,0,0,0};
;;;427    static int  In0[6] = {0,0,0,0,0,0};
;;;428    static int dIn[6] = {0,0,0,0,0,0};
;;;429    static int cIn[6] = {0,0,0,0,0,0};	
;;;430    	
;;;431    int AbsIa, AbsIb, AbsIc;
;;;432    int AbsUdc1, AbsUdc2;
;;;433    	
;;;434    int ErrorCode = 0;	
000006  2000              MOVS     r0,#0
;;;435    int i;
;;;436    
;;;437    int RefdI;
;;;438    int RefdIt;
;;;439    
;;;440    {	/* Защита по высокочастотному току	*/
;;;441    //	In[0] = StdPrms.ADCDataNorm[_Ia1];
;;;442    //	In[1] = StdPrms.ADCDataNorm[_Ib1];
;;;443    //	In[2] = StdPrms.ADCDataNorm[_Ic1];
;;;444    //	
;;;445    //	In[3] = StdPrms.ADCDataNorm[_Ia2];
;;;446    //	In[4] = StdPrms.ADCDataNorm[_Ib2];
;;;447    //	In[5] = StdPrms.ADCDataNorm[_Ic2];	
;;;448    //	
;;;449    //	RefdI  = SavePrms.RefIHighFreq;
;;;450    //	RefdIt = SavePrms.RefTHighFreq;
;;;451    //	
;;;452    //	for (i = 0; i < 6; i++) {
;;;453    //		cIn[i] = __QADD(cIn[i],1);
;;;454    //		if (ABS(dIn[i]) < RefdI) cIn[i] = 0; else
;;;455    //			if (ABS(In[i] - In0[i]) < RefdI) cIn[i] = 0; else
;;;456    //				if (dIn[i] * (In[i] - In0[i]) >= 0) cIn[i] = 0;
;;;457    //		dIn[i] = In[i] - In0[i];
;;;458    //		In0[i] = In[i];
;;;459    //		if (cIn[i] > RefdIt) {ErrorCode |= (1ul << 15); cIn[i] = 0;}
;;;460    //	}
;;;461    }
;;;462    	
;;;463    {	/* Защиты по току МТЗ 1			*/ 
;;;464    	
;;;465    	AbsIa = (StdPrms.ADCDataNorm[_Ia1] > 0) ? StdPrms.ADCDataNorm[_Ia1] : 0 - StdPrms.ADCDataNorm[_Ia1];
000008  f2400500          MOVW     r5,#:LOWER16: ||.bss||+84
00000c  f2c00500          MOVT     r5,#:UPPER16: ||.bss||+84
000010  f9b5836a          LDRSH    r8,[r5,#0x36a]  ; Metro
000014  f1b80f00          CMP      r8,#0
000018  bfd8              IT       LE
00001a  f1c80800          RSBLE    r8,r8,#0
;;;466    	AbsIb = (StdPrms.ADCDataNorm[_Ib1] > 0) ? StdPrms.ADCDataNorm[_Ib1] : 0 - StdPrms.ADCDataNorm[_Ib1];
00001e  f9b57372          LDRSH    r7,[r5,#0x372]  ; Metro
000022  2f00              CMP      r7,#0
000024  bfd8              IT       LE
000026  427f              RSBLE    r7,r7,#0
;;;467    	AbsIc = (StdPrms.ADCDataNorm[_Ic1] > 0) ? StdPrms.ADCDataNorm[_Ic1] : 0 - StdPrms.ADCDataNorm[_Ic1];
000028  f9b5c37a          LDRSH    r12,[r5,#0x37a]  ; Metro
00002c  f1bc0f00          CMP      r12,#0
000030  bfd8              IT       LE
000032  f1cc0c00          RSBLE    r12,r12,#0
;;;468    	
;;;469    	if (AbsIa < SavePrms.RefMtzI) Metro.MTZIa1Counter = SavePrms.RefMtzT; else Metro.MTZIa1Counter = (unsigned short)__UQSUB16(Metro.MTZIa1Counter,1);
000036  f8b53ec0          LDRH     r3,[r5,#0xec0]  ; Metro
00003a  f2400100          MOVW     r1,#:LOWER16: ||.bss||+84;465
00003e  f2c00100          MOVT     r1,#:UPPER16: ||.bss||+84;465
000042  f8b12ec2          LDRH     r2,[r1,#0xec2]
000046  2401              MOVS     r4,#1
000048  f5015100          ADD      r1,r1,#0x2000
00004c  4543              CMP      r3,r8
00004e  bfc8              IT       GT
000050  f8a123a4          STRHGT   r2,[r1,#0x3a4]
000054  dc05              BGT      |L1.98|
000056  f8b183a4          LDRH     r8,[r1,#0x3a4]  ; Metro
00005a  fad8f854          UQSUB16  r8,r8,r4
00005e  f8a183a4          STRH     r8,[r1,#0x3a4]
                  |L1.98|
;;;470    	if (AbsIb < SavePrms.RefMtzI) Metro.MTZIb1Counter = SavePrms.RefMtzT; else Metro.MTZIb1Counter = (unsigned short)__UQSUB16(Metro.MTZIb1Counter,1);
000062  42bb              CMP      r3,r7
000064  bfc8              IT       GT
000066  f8a123a6          STRHGT   r2,[r1,#0x3a6]
00006a  dc05              BGT      |L1.120|
00006c  f8b173a6          LDRH     r7,[r1,#0x3a6]  ; Metro
000070  fad7f754          UQSUB16  r7,r7,r4
000074  f8a173a6          STRH     r7,[r1,#0x3a6]
                  |L1.120|
;;;471    	if (AbsIc < SavePrms.RefMtzI) Metro.MTZIc1Counter = SavePrms.RefMtzT; else Metro.MTZIc1Counter = (unsigned short)__UQSUB16(Metro.MTZIc1Counter,1);
000078  4563              CMP      r3,r12
00007a  bfc8              IT       GT
00007c  f8a123a8          STRHGT   r2,[r1,#0x3a8]
000080  dc05              BGT      |L1.142|
000082  f8b1c3a8          LDRH     r12,[r1,#0x3a8]  ; Metro
000086  fadcfc54          UQSUB16  r12,r12,r4
00008a  f8a1c3a8          STRH     r12,[r1,#0x3a8]
                  |L1.142|
;;;472    	
;;;473    	if ((Metro.MTZIa1Counter == 0) || (Metro.MTZIb1Counter == 0) || (Metro.MTZIc1Counter == 0)) {
00008e  f8b173a4          LDRH     r7,[r1,#0x3a4]  ; Metro
000092  f2400c00          MOVW     r12,#:LOWER16: ||.bss||+84;465
000096  f2c00c00          MOVT     r12,#:UPPER16: ||.bss||+84;465
;;;474    		if (StdPrms.Status == 5) ErrorCode |= (1ul << 0); else ErrorCode |= (1ul << 13);
00009a  f9bcc218          LDRSH    r12,[r12,#0x218]
00009e  2f00              CMP      r7,#0                 ;473
0000a0  bf1f              ITTTT    NE                    ;473
0000a2  f8b173a6          LDRHNE   r7,[r1,#0x3a6]        ;473  ; Metro
0000a6  2f00              CMPNE    r7,#0                 ;473
0000a8  f8b173a8          LDRHNE   r7,[r1,#0x3a8]        ;473  ; Metro
0000ac  2f00              CMPNE    r7,#0                 ;473
0000ae  d07d              BEQ      |L1.428|
                  |L1.176|
;;;475    		Metro.MTZIa1Counter = Metro.MTZIb1Counter = Metro.MTZIc1Counter = SavePrms.RefMtzT;
;;;476    	}
;;;477    }
;;;478    {	/* Защиты по току МТЗ 2			*/
;;;479    	AbsIa = (StdPrms.ADCDataNorm[_Ia2] > 0) ? StdPrms.ADCDataNorm[_Ia2] : 0 - StdPrms.ADCDataNorm[_Ia2];
0000b0  f9b59368          LDRSH    r9,[r5,#0x368]  ; Metro
0000b4  f1b90f00          CMP      r9,#0
0000b8  bfd8              IT       LE
0000ba  f1c90900          RSBLE    r9,r9,#0
;;;480    	AbsIb = (StdPrms.ADCDataNorm[_Ib2] > 0) ? StdPrms.ADCDataNorm[_Ib2] : 0 - StdPrms.ADCDataNorm[_Ib2];
0000be  f9b58370          LDRSH    r8,[r5,#0x370]  ; Metro
0000c2  f1b80f00          CMP      r8,#0
0000c6  bfd8              IT       LE
0000c8  f1c80800          RSBLE    r8,r8,#0
;;;481    	AbsIc = (StdPrms.ADCDataNorm[_Ic2] > 0) ? StdPrms.ADCDataNorm[_Ic2] : 0 - StdPrms.ADCDataNorm[_Ic2];
0000cc  f9b57378          LDRSH    r7,[r5,#0x378]  ; Metro
0000d0  2f00              CMP      r7,#0
0000d2  bfd8              IT       LE
0000d4  427f              RSBLE    r7,r7,#0
;;;482    	
;;;483    	if (AbsIa < SavePrms.RefMtzI) Metro.MTZIa2Counter = SavePrms.RefMtzT; else Metro.MTZIa2Counter = (unsigned short)__UQSUB16(Metro.MTZIa2Counter,1);
0000d6  454b              CMP      r3,r9
0000d8  bfc8              IT       GT
0000da  f8a123aa          STRHGT   r2,[r1,#0x3aa]
0000de  dc05              BGT      |L1.236|
0000e0  f8b193aa          LDRH     r9,[r1,#0x3aa]  ; Metro
0000e4  fad9f954          UQSUB16  r9,r9,r4
0000e8  f8a193aa          STRH     r9,[r1,#0x3aa]
                  |L1.236|
;;;484    	if (AbsIb < SavePrms.RefMtzI) Metro.MTZIb2Counter = SavePrms.RefMtzT; else Metro.MTZIb2Counter = (unsigned short)__UQSUB16(Metro.MTZIb2Counter,1);
0000ec  4543              CMP      r3,r8
0000ee  bfc8              IT       GT
0000f0  f8a123ac          STRHGT   r2,[r1,#0x3ac]
0000f4  dc05              BGT      |L1.258|
0000f6  f8b183ac          LDRH     r8,[r1,#0x3ac]  ; Metro
0000fa  fad8f854          UQSUB16  r8,r8,r4
0000fe  f8a183ac          STRH     r8,[r1,#0x3ac]
                  |L1.258|
;;;485    	if (AbsIc < SavePrms.RefMtzI) Metro.MTZIc2Counter = SavePrms.RefMtzT; else Metro.MTZIc2Counter = (unsigned short)__UQSUB16(Metro.MTZIc2Counter,1);
000102  42bb              CMP      r3,r7
000104  bfc8              IT       GT
000106  f8a123ae          STRHGT   r2,[r1,#0x3ae]
00010a  dc05              BGT      |L1.280|
00010c  f8b173ae          LDRH     r7,[r1,#0x3ae]  ; Metro
000110  fad7f754          UQSUB16  r7,r7,r4
000114  f8a173ae          STRH     r7,[r1,#0x3ae]
                  |L1.280|
;;;486    	
;;;487    	if ((Metro.MTZIa2Counter == 0) || (Metro.MTZIb2Counter == 0) || (Metro.MTZIc2Counter == 0)) {
000118  f8b173aa          LDRH     r7,[r1,#0x3aa]  ; Metro
00011c  2f00              CMP      r7,#0
00011e  bf1f              ITTTT    NE
000120  f8b173ac          LDRHNE   r7,[r1,#0x3ac]  ; Metro
000124  2f00              CMPNE    r7,#0
000126  f8b173ae          LDRHNE   r7,[r1,#0x3ae]  ; Metro
00012a  2f00              CMPNE    r7,#0
00012c  d04e              BEQ      |L1.460|
                  |L1.302|
;;;488    		if (StdPrms.Status == 5) ErrorCode |= (1ul << 1); else ErrorCode |= (1ul << 14);
;;;489    		Metro.MTZIa2Counter = Metro.MTZIb2Counter = Metro.MTZIc2Counter = SavePrms.RefMtzT;
;;;490    	}		
;;;491    }
;;;492    {	/* Защиты по току МТЗ 3			*/
;;;493    	AbsIa = (StdPrms.ADCDataNorm[_Ia3] > 0) ? StdPrms.ADCDataNorm[_Ia3] : 0 - StdPrms.ADCDataNorm[_Ia3];
00012e  f9b5936e          LDRSH    r9,[r5,#0x36e]  ; Metro
000132  f1b90f00          CMP      r9,#0
000136  bfd8              IT       LE
000138  f1c90900          RSBLE    r9,r9,#0
;;;494    	AbsIb = (StdPrms.ADCDataNorm[_Ib3] > 0) ? StdPrms.ADCDataNorm[_Ib3] : 0 - StdPrms.ADCDataNorm[_Ib3];
00013c  f9b57376          LDRSH    r7,[r5,#0x376]  ; Metro
000140  2f00              CMP      r7,#0
000142  bfd8              IT       LE
000144  427f              RSBLE    r7,r7,#0
;;;495    	AbsIc = (StdPrms.ADCDataNorm[_Ic3] > 0) ? StdPrms.ADCDataNorm[_Ic3] : 0 - StdPrms.ADCDataNorm[_Ic3];
000146  f9b5837e          LDRSH    r8,[r5,#0x37e]  ; Metro
00014a  f1b80f00          CMP      r8,#0
00014e  bfd8              IT       LE
000150  f1c80800          RSBLE    r8,r8,#0
;;;496    	
;;;497    	if (AbsIa < SavePrms.RefMtzI) Metro.MTZIa3Counter = SavePrms.RefMtzT; else Metro.MTZIa3Counter = (unsigned short)__UQSUB16(Metro.MTZIa3Counter,1);
000154  454b              CMP      r3,r9
000156  bfc8              IT       GT
000158  f8a123b0          STRHGT   r2,[r1,#0x3b0]
00015c  dc05              BGT      |L1.362|
00015e  f8b193b0          LDRH     r9,[r1,#0x3b0]  ; Metro
000162  fad9f954          UQSUB16  r9,r9,r4
000166  f8a193b0          STRH     r9,[r1,#0x3b0]
                  |L1.362|
;;;498    	if (AbsIb < SavePrms.RefMtzI) Metro.MTZIb3Counter = SavePrms.RefMtzT; else Metro.MTZIb3Counter = (unsigned short)__UQSUB16(Metro.MTZIb3Counter,1);
00016a  42bb              CMP      r3,r7
00016c  bfc8              IT       GT
00016e  f8a123b2          STRHGT   r2,[r1,#0x3b2]
000172  dc05              BGT      |L1.384|
000174  f8b173b2          LDRH     r7,[r1,#0x3b2]  ; Metro
000178  fad7f754          UQSUB16  r7,r7,r4
00017c  f8a173b2          STRH     r7,[r1,#0x3b2]
                  |L1.384|
;;;499    	if (AbsIc < SavePrms.RefMtzI) Metro.MTZIc3Counter = SavePrms.RefMtzT; else Metro.MTZIc3Counter = (unsigned short)__UQSUB16(Metro.MTZIc3Counter,1);
000180  4543              CMP      r3,r8
000182  bfc8              IT       GT
000184  f8a123b4          STRHGT   r2,[r1,#0x3b4]
000188  dc05              BGT      |L1.406|
00018a  f8b173b4          LDRH     r7,[r1,#0x3b4]  ; Metro
00018e  fad7f754          UQSUB16  r7,r7,r4
000192  f8a173b4          STRH     r7,[r1,#0x3b4]
                  |L1.406|
;;;500    	
;;;501    	if ((Metro.MTZIa3Counter == 0) || (Metro.MTZIb3Counter == 0) || (Metro.MTZIc3Counter == 0)) {
000196  f8b173b0          LDRH     r7,[r1,#0x3b0]  ; Metro
00019a  2f00              CMP      r7,#0
00019c  bf1f              ITTTT    NE
00019e  f8b173b2          LDRHNE   r7,[r1,#0x3b2]  ; Metro
0001a2  2f00              CMPNE    r7,#0
0001a4  f8b173b4          LDRHNE   r7,[r1,#0x3b4]  ; Metro
0001a8  2f00              CMPNE    r7,#0
0001aa  e000              B        |L1.430|
                  |L1.428|
0001ac  e001              B        |L1.434|
                  |L1.430|
0001ae  d123              BNE      |L1.504|
0001b0  e01a              B        |L1.488|
                  |L1.434|
0001b2  f1bc0f05          CMP      r12,#5                ;474
0001b6  bf0c              ITE      EQ                    ;474
0001b8  2001              MOVEQ    r0,#1                 ;474
0001ba  f44f5000          MOVNE    r0,#0x2000            ;474
0001be  f8a123a8          STRH     r2,[r1,#0x3a8]        ;475
0001c2  f8a123a6          STRH     r2,[r1,#0x3a6]        ;475
0001c6  f8a123a4          STRH     r2,[r1,#0x3a4]        ;475
0001ca  e771              B        |L1.176|
                  |L1.460|
0001cc  f1bc0f05          CMP      r12,#5                ;488
0001d0  bf0c              ITE      EQ                    ;488
0001d2  f0400002          ORREQ    r0,r0,#2              ;488
0001d6  f4404080          ORRNE    r0,r0,#0x4000         ;488
0001da  f8a123ae          STRH     r2,[r1,#0x3ae]        ;489
0001de  f8a123ac          STRH     r2,[r1,#0x3ac]        ;489
0001e2  f8a123aa          STRH     r2,[r1,#0x3aa]        ;489
0001e6  e7a2              B        |L1.302|
                  |L1.488|
;;;502    		ErrorCode |= (1ul << 10);
;;;503    		Metro.MTZIa3Counter = Metro.MTZIb3Counter = Metro.MTZIc3Counter = SavePrms.RefMtzT;
0001e8  f8a123b4          STRH     r2,[r1,#0x3b4]
0001ec  f8a123b2          STRH     r2,[r1,#0x3b2]
0001f0  f4406080          ORR      r0,r0,#0x400          ;502
0001f4  f8a123b0          STRH     r2,[r1,#0x3b0]
                  |L1.504|
;;;504    	}		
;;;505    }
;;;506    {	/* Защиты по току МТЗ 4			*/
;;;507    	AbsIa = (StdPrms.ADCDataNorm[_Ia4] > 0) ? StdPrms.ADCDataNorm[_Ia4] : 0 - StdPrms.ADCDataNorm[_Ia4];
0001f8  f9b5836c          LDRSH    r8,[r5,#0x36c]  ; Metro
0001fc  f1b80f00          CMP      r8,#0
000200  bfd8              IT       LE
000202  f1c80800          RSBLE    r8,r8,#0
;;;508    	AbsIb = (StdPrms.ADCDataNorm[_Ib4] > 0) ? StdPrms.ADCDataNorm[_Ib4] : 0 - StdPrms.ADCDataNorm[_Ib4];
000206  f9b57374          LDRSH    r7,[r5,#0x374]  ; Metro
00020a  2f00              CMP      r7,#0
00020c  bfd8              IT       LE
00020e  427f              RSBLE    r7,r7,#0
;;;509    	AbsIc = (StdPrms.ADCDataNorm[_Ic4] > 0) ? StdPrms.ADCDataNorm[_Ic4] : 0 - StdPrms.ADCDataNorm[_Ic4];
000210  f9b5937c          LDRSH    r9,[r5,#0x37c]  ; Metro
000214  f1b90f00          CMP      r9,#0
000218  bfd8              IT       LE
00021a  f1c90900          RSBLE    r9,r9,#0
;;;510    	
;;;511    	if (AbsIa < SavePrms.RefMtzI) Metro.MTZIa4Counter = SavePrms.RefMtzT; else Metro.MTZIa4Counter = (unsigned short)__UQSUB16(Metro.MTZIa4Counter,1);
00021e  4543              CMP      r3,r8
000220  bfc8              IT       GT
000222  f8a123b6          STRHGT   r2,[r1,#0x3b6]
000226  dc05              BGT      |L1.564|
000228  f8b183b6          LDRH     r8,[r1,#0x3b6]  ; Metro
00022c  fad8f854          UQSUB16  r8,r8,r4
000230  f8a183b6          STRH     r8,[r1,#0x3b6]
                  |L1.564|
;;;512    	if (AbsIb < SavePrms.RefMtzI) Metro.MTZIb4Counter = SavePrms.RefMtzT; else Metro.MTZIb4Counter = (unsigned short)__UQSUB16(Metro.MTZIb4Counter,1);
000234  42bb              CMP      r3,r7
000236  bfc8              IT       GT
000238  f8a123b8          STRHGT   r2,[r1,#0x3b8]
00023c  dc05              BGT      |L1.586|
00023e  f8b173b8          LDRH     r7,[r1,#0x3b8]  ; Metro
000242  fad7f754          UQSUB16  r7,r7,r4
000246  f8a173b8          STRH     r7,[r1,#0x3b8]
                  |L1.586|
;;;513    	if (AbsIc < SavePrms.RefMtzI) Metro.MTZIc4Counter = SavePrms.RefMtzT; else Metro.MTZIc4Counter = (unsigned short)__UQSUB16(Metro.MTZIc4Counter,1);
00024a  454b              CMP      r3,r9
00024c  bfc8              IT       GT
00024e  f8a123ba          STRHGT   r2,[r1,#0x3ba]
000252  dc05              BGT      |L1.608|
000254  f8b133ba          LDRH     r3,[r1,#0x3ba]  ; Metro
000258  fad3f354          UQSUB16  r3,r3,r4
00025c  f8a133ba          STRH     r3,[r1,#0x3ba]
                  |L1.608|
;;;514    	
;;;515    	if ((Metro.MTZIa4Counter == 0) || (Metro.MTZIb4Counter == 0) || (Metro.MTZIc4Counter == 0)) {
000260  f8b133b6          LDRH     r3,[r1,#0x3b6]  ; Metro
000264  2b00              CMP      r3,#0
000266  bf1f              ITTTT    NE
000268  f8b133b8          LDRHNE   r3,[r1,#0x3b8]  ; Metro
00026c  2b00              CMPNE    r3,#0
00026e  f8b133ba          LDRHNE   r3,[r1,#0x3ba]  ; Metro
000272  2b00              CMPNE    r3,#0
000274  d107              BNE      |L1.646|
;;;516    		ErrorCode |= (1ul << 11);
;;;517    		Metro.MTZIa4Counter = Metro.MTZIb4Counter = Metro.MTZIc4Counter = SavePrms.RefMtzT;
000276  f8a123ba          STRH     r2,[r1,#0x3ba]
00027a  f8a123b8          STRH     r2,[r1,#0x3b8]
00027e  f4406000          ORR      r0,r0,#0x800          ;516
000282  f8a123b6          STRH     r2,[r1,#0x3b6]
                  |L1.646|
000286  f2400200          MOVW     r2,#:LOWER16: ||.bss||+84;465
00028a  f2c00200          MOVT     r2,#:UPPER16: ||.bss||+84;465
;;;518    	}		
;;;519    }
;;;520    
;;;521    
;;;522    
;;;523    {	/* Защита по току диодов 1	*/
;;;524    //	if (EvPrms.I1Flt < SavePrms.RefMtzIVD) Metro.MTZI1CounterVD = SavePrms.RefMtzTVD; else Metro.MTZI1CounterVD = (unsigned short)__UQSUB16(Metro.MTZI1CounterVD,1);
;;;525    //	/* Если коммутация включена, то эта зашита блокируется	*/
;;;526    //	if (PeriphBB(TIM1->BDTR,TIM_BDTR_MOE_bit)) { Metro.MTZI1CounterVD = SavePrms.RefMtzTVD;}
;;;527    //	if (Metro.MTZI1CounterVD == 0) { ErrorCode |= (1ul << 10); Metro.MTZI1CounterVD = SavePrms.RefMtzTVD; }
;;;528    }
;;;529    
;;;530    {	/* Защита по току диодов 2	*/
;;;531    //	if (EvPrms.I2Flt < SavePrms.RefMtzIVD) Metro.MTZI2CounterVD = SavePrms.RefMtzTVD; else Metro.MTZI2CounterVD = (unsigned short)__UQSUB16(Metro.MTZI2CounterVD,1);
;;;532    //	/* Если коммутация включена, то эта зашита блокируется	*/
;;;533    //	if (PeriphBB(TIM8->BDTR,TIM_BDTR_MOE_bit)) { Metro.MTZI2CounterVD = SavePrms.RefMtzTVD;}
;;;534    //	if (Metro.MTZI2CounterVD == 0) { ErrorCode |= (1ul << 11); Metro.MTZI2CounterVD = SavePrms.RefMtzTVD; }
;;;535    }	
;;;536    
;;;537    {	/* Защита по Udc,SU min/max	*/
;;;538    	if ((StdPrms.Status == 2) || (StdPrms.Status == 5) || (StdPrms.Status == 6) || (StdPrms.Status == 7))	{
;;;539    	{	/* Udc Max								*/
;;;540    		AbsUdc1	= ABS(StdPrms.ADCDataNorm[_Udc1]);
;;;541    		AbsUdc2	= ABS(StdPrms.ADCDataNorm[_Udc2]);
;;;542    	
;;;543    		if (AbsUdc1 < SavePrms.RefUdcmaxU) Metro.Udc1MaxCounter = SavePrms.RefUdcmaxT; else Metro.Udc1MaxCounter = (unsigned short)__UQSUB16(Metro.Udc1MaxCounter,1);
00028e  f8b23ec6          LDRH     r3,[r2,#0xec6]
;;;544    		if (AbsUdc2 < SavePrms.RefUdcmaxU) Metro.Udc2MaxCounter = SavePrms.RefUdcmaxT; else Metro.Udc2MaxCounter = (unsigned short)__UQSUB16(Metro.Udc2MaxCounter,1);
;;;545    	
;;;546    		if ((Metro.Udc1MaxCounter == 0) || (Metro.Udc2MaxCounter == 0)) {ErrorCode |= (1ul << 2); Metro.Udc1MaxCounter = Metro.Udc2MaxCounter = SavePrms.RefUdcmaxT;}
;;;547    	}		
;;;548    	{	/* UdcMin									*/
;;;549    		if (AbsUdc1 > SavePrms.RefUdcminU) Metro.Udc1MinCounter = SavePrms.RefUdcminT; else Metro.Udc1MinCounter = (unsigned short)__UQSUB16(Metro.Udc1MinCounter,1);
000292  f8b22eca          LDRH     r2,[r2,#0xeca]
000296  f04f0700          MOV      r7,#0
00029a  f1bc0f02          CMP      r12,#2                ;538
00029e  bf18              IT       NE                    ;538
0002a0  f1bc0f05          CMPNE    r12,#5                ;538
0002a4  d054              BEQ      |L1.848|
0002a6  f1bc0f06          CMP      r12,#6                ;538
0002aa  bf18              IT       NE                    ;538
0002ac  f1bc0f07          CMPNE    r12,#7                ;538
0002b0  d04e              BEQ      |L1.848|
;;;550    		if (AbsUdc2 > SavePrms.RefUdcminU) Metro.Udc2MinCounter = SavePrms.RefUdcminT; else Metro.Udc2MinCounter = (unsigned short)__UQSUB16(Metro.Udc2MinCounter,1);
;;;551    	
;;;552    		if ((Metro.Udc1MinCounter == 0) || (Metro.Udc2MinCounter == 0)) {ErrorCode |= (1ul << 3); Metro.Udc1MinCounter = Metro.Udc2MinCounter = SavePrms.RefUdcminT;}
;;;553    	}
;;;554    	{	/* SU	min									*/
;;;555    //		if (EvPrms.SUNotFlt > SavePrms.RefSUminU) Metro.SUMinCounter = SavePrms.RefSUminT; else Metro.SUMinCounter = (unsigned short)__UQSUB16(Metro.SUMinCounter, 1);
;;;556    //		if (Metro.SUMinCounter == 0) {ErrorCode |= (1ul << 7); Metro.SUMinCounter = SavePrms.RefSUminT;}
;;;557    	}
;;;558    	{	/* SU	max									*/
;;;559    //		if (EvPrms.SUNotFlt < SavePrms.RefSUmaxU) Metro.SUMaxCounter = SavePrms.RefSUmaxT; else Metro.SUMaxCounter = (unsigned short)__UQSUB16(Metro.SUMaxCounter, 1);
;;;560    //		if (Metro.SUMaxCounter == 0) {ErrorCode |= (1ul << 9); Metro.SUMaxCounter = SavePrms.RefSUmaxT;}
;;;561    	}
;;;562    	} else {	/* Статус отличается от готовности и работы, спящего режима	*/
;;;563    		Metro.Udc1MaxCounter = Metro.Udc2MaxCounter = SavePrms.RefUdcmaxT;
0002b2  f8a133be          STRH     r3,[r1,#0x3be]
0002b6  f8a133bc          STRH     r3,[r1,#0x3bc]
;;;564    		Metro.Udc1MinCounter = Metro.Udc2MinCounter = SavePrms.RefUdcminT;
0002ba  f8a123c2          STRH     r2,[r1,#0x3c2]
0002be  f8a123c0          STRH     r2,[r1,#0x3c0]
;;;565    		Metro.SUMinCounter = SavePrms.RefSUminT;
0002c2  f8b52ed0          LDRH     r2,[r5,#0xed0]  ; Metro
0002c6  f8a123c4          STRH     r2,[r1,#0x3c4]
;;;566    		Metro.SUMaxCounter = SavePrms.RefSUmaxT;
0002ca  f8b52ed6          LDRH     r2,[r5,#0xed6]  ; Metro
0002ce  f8a123c6          STRH     r2,[r1,#0x3c6]
                  |L1.722|
;;;567    	}
;;;568    }
;;;569    {	/* Защита по BKIN	и синхр.	*/
;;;570    	if ((StdPrms.Status == 5) || (StdPrms.Status == 6) || (StdPrms.Status == 7))	{
;;;571    		if (Metro.ErrorTIM1Flag) {ErrorCode |= (1ul << 4); Metro.ErrorTIM1Flag = 0;}
;;;572    		if (Metro.ErrorTIM8Flag) {ErrorCode |= (1ul << 5); Metro.ErrorTIM8Flag = 0;}
;;;573    
;;;574    //		/* Потеря синхронизации 		*/
;;;575    //		if (Metro.SynchError > 40) {ErrorCode |= (1ul << 6);}
;;;576    	}
;;;577    }	
;;;578    {	/* Защита по температуре		*/
;;;579    	for (i = 0; i < 24; i++) 
0002d2  f04f0200          MOV      r2,#0
;;;580    	{
;;;581    		if (Delay(EvPrms.T[i] > (SavePrms.RefTempr / 10), MainCycle, &PrgData.TemprProtect[i])) {ErrorCode |= (1ul << 8);}
0002d6  f2425988          MOV      r9,#0x2588
                  |L1.730|
0002da  f8b53ed2          LDRH     r3,[r5,#0xed2]  ; Metro
0002de  f64c4ccd          MOV      r12,#0xcccd
0002e2  fb03f30c          MUL      r3,r3,r12
0002e6  eb050c02          ADD      r12,r5,r2
0002ea  ea4f43d3          LSR      r3,r3,#19
0002ee  f99cc050          LDRSB    r12,[r12,#0x50]
0002f2  4563              CMP      r3,r12
0002f4  bfb4              ITE      LT
0002f6  2301              MOVLT    r3,#1
0002f8  2300              MOVGE    r3,#0
0002fa  eb050c82          ADD      r12,r5,r2,LSL #2
0002fe  44cc              ADD      r12,r12,r9
000300  2b00              CMP      r3,#0
000302  f8dc8000          LDR      r8,[r12,#0]
000306  bf18              IT       NE
000308  fa84f388          QADDNE   r3,r8,r4
00030c  f8cc3000          STR      r3,[r12,#0]
000310  f5b36ffa          CMP      r3,#0x7d0
000314  bfc8              IT       GT
000316  f4407080          ORRGT    r0,r0,#0x100
00031a  1c52              ADDS     r2,r2,#1
00031c  2a18              CMP      r2,#0x18              ;579
00031e  dbdc              BLT      |L1.730|
;;;582    	}
;;;583    	if (ErrorCode & (1ul << 8)) { for (i = 0; i < 24; i++) PrgData.TemprProtect[i] = 0;}
000320  f4107f80          TST      r0,#0x100
000324  bf18              IT       NE
000326  2200              MOVNE    r2,#0
000328  d008              BEQ      |L1.828|
                  |L1.810|
00032a  eb050382          ADD      r3,r5,r2,LSL #2
00032e  f5035300          ADD      r3,r3,#0x2000
000332  1c52              ADDS     r2,r2,#1
000334  f8c37588          STR      r7,[r3,#0x588]
000338  2a18              CMP      r2,#0x18
00033a  dbf6              BLT      |L1.810|
                  |L1.828|
;;;584    }	
;;;585    {	/* Защита разрядного резистора	*/
;;;586    //	if (Metro.FlagRazradError) {ErrorCode |= (1ul << 12); Metro.TimeRazrad = 0; Metro.FlagRazradError = 0;}
;;;587    }	
;;;588    {	/* Контроль Заряда и KM-ов	*/
;;;589    	/* Ограничиваем длительность включения KM1, если он не включается ---------------------------------------	*/
;;;590    	if ((PrgData.KM1ENA > 2000) && (PrgData.KM1ON == 0)) 
00033c  f8d123ec          LDR      r2,[r1,#0x3ec]  ; Metro
000340  f5b26ffa          CMP      r2,#0x7d0
000344  dd7a              BLE      |L1.1084|
000346  f8d123e8          LDR      r2,[r1,#0x3e8]  ; Metro
00034a  2a00              CMP      r2,#0
00034c  d176              BNE      |L1.1084|
00034e  e076              B        |L1.1086|
                  |L1.848|
000350  f9b59360          LDRSH    r9,[r5,#0x360]        ;540  ; Metro
000354  f1b90f00          CMP      r9,#0                 ;540
000358  bfb8              IT       LT                    ;540
00035a  f1c90900          RSBLT    r9,r9,#0              ;540
00035e  f9b58362          LDRSH    r8,[r5,#0x362]        ;541  ; Metro
000362  f1b80f00          CMP      r8,#0                 ;541
000366  bfb8              IT       LT                    ;541
000368  f1c80800          RSBLT    r8,r8,#0              ;541
00036c  f8b5aec4          LDRH     r10,[r5,#0xec4]       ;543  ; Metro
000370  45ca              CMP      r10,r9                ;543
000372  bfc8              IT       GT                    ;543
000374  f8a133bc          STRHGT   r3,[r1,#0x3bc]        ;543
000378  dc05              BGT      |L1.902|
00037a  f8b1b3bc          LDRH     r11,[r1,#0x3bc]       ;543  ; Metro
00037e  fadbfb54          UQSUB16  r11,r11,r4            ;543
000382  f8a1b3bc          STRH     r11,[r1,#0x3bc]       ;543
                  |L1.902|
000386  45c2              CMP      r10,r8                ;544
000388  bfc8              IT       GT                    ;544
00038a  f8a133be          STRHGT   r3,[r1,#0x3be]        ;544
00038e  dc05              BGT      |L1.924|
000390  f8b1a3be          LDRH     r10,[r1,#0x3be]       ;544  ; Metro
000394  fadafa54          UQSUB16  r10,r10,r4            ;544
000398  f8a1a3be          STRH     r10,[r1,#0x3be]       ;544
                  |L1.924|
00039c  f8b1a3bc          LDRH     r10,[r1,#0x3bc]       ;546  ; Metro
0003a0  f1ba0f00          CMP      r10,#0                ;546
0003a4  bf1c              ITT      NE                    ;546
0003a6  f8b1a3be          LDRHNE   r10,[r1,#0x3be]       ;546  ; Metro
0003aa  f1ba0f00          CMPNE    r10,#0                ;546
0003ae  d105              BNE      |L1.956|
0003b0  f8a133be          STRH     r3,[r1,#0x3be]        ;546
0003b4  f0400004          ORR      r0,r0,#4              ;546
0003b8  f8a133bc          STRH     r3,[r1,#0x3bc]        ;546
                  |L1.956|
0003bc  f8b53ec8          LDRH     r3,[r5,#0xec8]        ;549  ; Metro
0003c0  454b              CMP      r3,r9                 ;549
0003c2  bfb8              IT       LT                    ;549
0003c4  f8a123c0          STRHLT   r2,[r1,#0x3c0]        ;549
0003c8  db05              BLT      |L1.982|
0003ca  f8b193c0          LDRH     r9,[r1,#0x3c0]        ;549  ; Metro
0003ce  fad9f954          UQSUB16  r9,r9,r4              ;549
0003d2  f8a193c0          STRH     r9,[r1,#0x3c0]        ;549
                  |L1.982|
0003d6  4543              CMP      r3,r8                 ;550
0003d8  bfb8              IT       LT                    ;550
0003da  f8a123c2          STRHLT   r2,[r1,#0x3c2]        ;550
0003de  db05              BLT      |L1.1004|
0003e0  f8b133c2          LDRH     r3,[r1,#0x3c2]        ;550  ; Metro
0003e4  fad3f354          UQSUB16  r3,r3,r4              ;550
0003e8  f8a133c2          STRH     r3,[r1,#0x3c2]        ;550
                  |L1.1004|
0003ec  f8b133c0          LDRH     r3,[r1,#0x3c0]        ;552  ; Metro
0003f0  2b00              CMP      r3,#0                 ;552
0003f2  bf1c              ITT      NE                    ;552
0003f4  f8b133c2          LDRHNE   r3,[r1,#0x3c2]        ;552  ; Metro
0003f8  2b00              CMPNE    r3,#0                 ;552
0003fa  d105              BNE      |L1.1032|
0003fc  f8a123c2          STRH     r2,[r1,#0x3c2]        ;552
000400  f0400008          ORR      r0,r0,#8              ;552
000404  f8a123c0          STRH     r2,[r1,#0x3c0]        ;552
                  |L1.1032|
000408  f1bc0f05          CMP      r12,#5                ;570
00040c  bf1c              ITT      NE                    ;570
00040e  f1bc0f06          CMPNE    r12,#6                ;570
000412  f1bc0f07          CMPNE    r12,#7                ;570
000416  f47faf5c          BNE      |L1.722|
00041a  f8d12344          LDR      r2,[r1,#0x344]        ;571  ; Metro
00041e  2a00              CMP      r2,#0                 ;571
000420  bf1c              ITT      NE                    ;571
000422  f0400010          ORRNE    r0,r0,#0x10           ;571
000426  f8c17344          STRNE    r7,[r1,#0x344]        ;571  ; Metro
00042a  f8d12348          LDR      r2,[r1,#0x348]        ;572  ; Metro
00042e  2a00              CMP      r2,#0                 ;572
000430  bf1c              ITT      NE                    ;572
000432  f0400020          ORRNE    r0,r0,#0x20           ;572
000436  f8c17348          STRNE    r7,[r1,#0x348]        ;572  ; Metro
00043a  e74a              B        |L1.722|
                  |L1.1084|
00043c  e00d              B        |L1.1114|
                  |L1.1086|
;;;591    	{
;;;592    		PrgData.KM1ENA = PrgData.ACZaradENA = PrgData.AC_KM_ENA = PrgData.FlagNeedACZarad = 0;
00043e  f8a173d8          STRH     r7,[r1,#0x3d8]
000442  f8a173f0          STRH     r7,[r1,#0x3f0]
000446  f8a173f2          STRH     r7,[r1,#0x3f2]
;;;593    		PrgData.FlagErrorZarad |= 0x01;																														/* Отказ KM1						*/
00044a  f8c173ec          STR      r7,[r1,#0x3ec]  ; Metro
00044e  f8d123e4          LDR      r2,[r1,#0x3e4]  ; Metro
000452  f0420201          ORR      r2,r2,#1
000456  f8c123e4          STR      r2,[r1,#0x3e4]  ; Metro
                  |L1.1114|
;;;594    	}
;;;595    
;;;596    	if ((PrgData.KM1ON > SavePrms.RefWorkKM1) && ((EvPrms.Udc1Flt < SavePrms.RefUdcZarad) || (EvPrms.Udc2Flt < SavePrms.RefUdcZarad))) 
00045a  f8d123e8          LDR      r2,[r1,#0x3e8]  ; Metro
00045e  f8d53eec          LDR      r3,[r5,#0xeec]  ; Metro
000462  429a              CMP      r2,r3
000464  d917              BLS      |L1.1174|
000466  f9b5c032          LDRSH    r12,[r5,#0x32]  ; Metro
00046a  f9b52ee0          LDRSH    r2,[r5,#0xee0]  ; Metro
00046e  4594              CMP      r12,r2
000470  db03              BLT      |L1.1146|
000472  f9b53034          LDRSH    r3,[r5,#0x34]  ; Metro
000476  429a              CMP      r2,r3
000478  dd0d              BLE      |L1.1174|
                  |L1.1146|
;;;597    	{
;;;598    		PrgData.KM1ENA = PrgData.ACZaradENA = PrgData.AC_KM_ENA = PrgData.FlagNeedACZarad = 0;
00047a  f8a173d8          STRH     r7,[r1,#0x3d8]
00047e  f8a173f0          STRH     r7,[r1,#0x3f0]
000482  f8a173f2          STRH     r7,[r1,#0x3f2]
;;;599    		PrgData.FlagErrorZarad |= 0x02;																														/* Неуспешный AC заряд	*/
000486  f8c173ec          STR      r7,[r1,#0x3ec]  ; Metro
00048a  f8d123e4          LDR      r2,[r1,#0x3e4]  ; Metro
00048e  f0420202          ORR      r2,r2,#2
000492  f8c123e4          STR      r2,[r1,#0x3e4]  ; Metro
                  |L1.1174|
;;;600    	}	
;;;601    	
;;;602    	if ((PrgData.ACZaradENA > 2000) && (EvPrms.SUFlt < SavePrms.RefSUZarad)) 
000496  f9b123f2          LDRSH    r2,[r1,#0x3f2]  ; Metro
00049a  f5b26ffa          CMP      r2,#0x7d0
00049e  dd13              BLE      |L1.1224|
0004a0  f9b52030          LDRSH    r2,[r5,#0x30]  ; Metro
0004a4  f9b53ee2          LDRSH    r3,[r5,#0xee2]  ; Metro
0004a8  4293              CMP      r3,r2
0004aa  dd0d              BLE      |L1.1224|
;;;603    	{
;;;604    		PrgData.KM1ENA = PrgData.ACZaradENA = PrgData.AC_KM_ENA = PrgData.FlagNeedACZarad = 0;
0004ac  f8a173d8          STRH     r7,[r1,#0x3d8]
0004b0  f8a173f0          STRH     r7,[r1,#0x3f0]
0004b4  f8a173f2          STRH     r7,[r1,#0x3f2]
;;;605    		PrgData.FlagErrorZarad |= 0x04;																														/* Неуспешный AC заряд	*/
0004b8  f8c173ec          STR      r7,[r1,#0x3ec]  ; Metro
0004bc  f8d123e4          LDR      r2,[r1,#0x3e4]  ; Metro
0004c0  f0420204          ORR      r2,r2,#4
0004c4  f8c123e4          STR      r2,[r1,#0x3e4]  ; Metro
                  |L1.1224|
;;;606    	}
;;;607    	
;;;608    	ErrorCode |= (PrgData.FlagErrorZarad << 16);																					
0004c8  f8b123e4          LDRH     r2,[r1,#0x3e4]  ; Metro
;;;609    	PrgData.FlagErrorZarad = 0;
;;;610    }	
;;;611    
;;;612    {	/* Аварийный грибок					*/
;;;613    	if (PrgData.K_Alarm) {ErrorCode |= (1ul << 31); }
0004cc  f8c173e4          STR      r7,[r1,#0x3e4]  ; Metro
0004d0  ea404002          ORR      r0,r0,r2,LSL #16      ;608
0004d4  f8b123dc          LDRH     r2,[r1,#0x3dc]  ; Metro
0004d8  2a00              CMP      r2,#0
0004da  bf18              IT       NE
0004dc  f0404000          ORRNE    r0,r0,#0x80000000
;;;614    }	
;;;615    
;;;616    	/* Анализ сработавших защит -------------------------------------------------------------------------------------------------------------	*/
;;;617    	if (ErrorCode == 0) return 0;
0004e0  2800              CMP      r0,#0
;;;618    
;;;619    	/* Запуск осциллографа по любой защите */
;;;620    	if ((OldErrorCode ^ ErrorCode) & ErrorCode) 
0004e2  bf12              ITEE     NE
0004e4  ea300206          BICSNE   r2,r0,r6
;;;621    	{ 
;;;622    		Metro.OscilCmnd.OscilNeed = 1; 
;;;623    		EvPrms.EventCode = 0x0853;
;;;624    		PrgData.KM1ENA = PrgData.ACZaradENA = PrgData.AC_KM_ENA = PrgData.FlagNeedACZarad = 0;
;;;625    	}
;;;626    
;;;627    	return ErrorCode;
;;;628    }
0004e8  e8bd0ff0          POPEQ    {r4-r11}
0004ec  4770              BXEQ     lr
0004ee  810c              STRH     r4,[r1,#8]            ;622
0004f0  f6400253          MOV      r2,#0x853             ;623
0004f4  602a              STR      r2,[r5,#0]            ;624  ; Metro
0004f6  f8a173d8          STRH     r7,[r1,#0x3d8]        ;624
0004fa  f8a173f0          STRH     r7,[r1,#0x3f0]        ;624
0004fe  f8a173f2          STRH     r7,[r1,#0x3f2]        ;624
000502  f8c173ec          STR      r7,[r1,#0x3ec]        ;624  ; Metro
000506  e8bd0ff0          POP      {r4-r11}
00050a  4770              BX       lr
;;;629    
                          ENDP

                  CalcGamma3 PROC
;;;1158   
;;;1159   static __inline	void CalcGamma3(int Phase, int AMP, int ARR, TIM_TypeDef *TIM, short Gamma1, short Gamma3) {
00050c  e92d47f0          PUSH     {r4-r10,lr}
000510  4606              MOV      r6,r0
000512  ed2d8b02          VPUSH    {d8}
000516  461f              MOV      r7,r3
000518  e9dd980a          LDRD     r9,r8,[sp,#0x28]
00051c  4614              MOV      r4,r2
00051e  460d              MOV      r5,r1
;;;1160   int G1,G2,G3;
;;;1161   int CCR1,CCR2,CCR3;
;;;1162   	
;;;1163   	/*	Расчитываем новые гаммы	-------------------------------------------------------------------------------------------
;;;1164   
;;;1165            G3   G1   G2	  G3 					     |   G2   G1        |   G1   G2        |   G2   G1        |   G1   G2        |   G2   G1        
;;;1166   A(CCR3)	_____-----------------------_____|_______----_______|__________________|__________________|_______----_______|__--------------__
;;;1167   B(CCR2) __________-------------__________|__--------------__|__--------------__|_______----_______|__________________|__________________	
;;;1168   C(CCR1)	______________-----______________|__________________|_______----_______|__--------------__|__--------------__|_______----_______
;;;1169           V000 V100 V110 V111   				   |   V010 V110         V010 V011          V001 V011          V001 V101          V100 V101
;;;1170   	*/
;;;1171   	if (Phase < 0x2AAC)					{	/* Угол 0..60, G1 - V100, G2 = V110 */
000520  f64220ac          MOV      r0,#0x2aac
;;;1172   		G1 = AMP * sinf(Pi/3 - Pi * Phase / 0x8000);
000524  ed9f8afe          VLDR     s16,|L1.2336|
000528  eddf8afe          VLDR     s17,|L1.2340|
00052c  ed9f0afe          VLDR     s0,|L1.2344|
000530  4286              CMP      r6,r0                 ;1171
000532  da30              BGE      |L1.1430|
000534  ee006a90          VMOV     s1,r6
000538  eef80ae0          VCVT.F32.S32 s1,s1
00053c  ee600a88          VMUL.F32 s1,s1,s16
000540  ee000ae8          VMLS.F32 s0,s1,s17
000544  f7fffffe          BL       __hardfp_sinf
000548  ee005a90          VMOV     s1,r5
00054c  eef80ae0          VCVT.F32.S32 s1,s1
000550  ee200a20          VMUL.F32 s0,s0,s1
000554  eebd0ac0          VCVT.S32.F32 s0,s0
000558  ee10aa10          VMOV     r10,s0
;;;1173   		G2 = AMP * sinf(Pi * Phase / 0x8000);		
00055c  ee006a10          VMOV     s0,r6
000560  eeb80ac0          VCVT.F32.S32 s0,s0
000564  ee200a08          VMUL.F32 s0,s0,s16
000568  ee200a28          VMUL.F32 s0,s0,s17
00056c  f7fffffe          BL       __hardfp_sinf
000570  ee005a90          VMOV     s1,r5
000574  eef80ae0          VCVT.F32.S32 s1,s1
000578  ee200a20          VMUL.F32 s0,s0,s1
00057c  eebd0ac0          VCVT.S32.F32 s0,s0
000580  ee100a10          VMOV     r0,s0
;;;1174   		G3 = (ARR - (G1 + G2)) >> 1;																								/* Половина нулевого состояния*/
000584  eb0a0300          ADD      r3,r10,r0
000588  1ae1              SUBS     r1,r4,r3
00058a  1049              ASRS     r1,r1,#1
;;;1175   
;;;1176   		CCR1	= ARR - G3;
00058c  1a62              SUBS     r2,r4,r1
;;;1177   		CCR2	=	ARR - (G2 + G3);													 
00058e  4408              ADD      r0,r0,r1
000590  1a20              SUBS     r0,r4,r0
;;;1178   		CCR3	= ARR - (G1 + G2 + G3);		
000592  f000b942          B.W      |L1.2074|
                  |L1.1430|
;;;1179   															
;;;1180   	} else if (Phase < 0x5555)	{	/* Угол 60..120, G1 - V110, G2 = V010 */
000596  f2455055          MOV      r0,#0x5555
00059a  4286              CMP      r6,r0
00059c  da67              BGE      |L1.1646|
;;;1181   		G1 = AMP * sinf(Pi/3 - Pi * (Phase - 0x2AAC) / 0x8000);
00059e  f5a65a20          SUB      r10,r6,#0x2800
0005a2  f5aa7a2b          SUB      r10,r10,#0x2ac
0005a6  ee00aa90          VMOV     s1,r10
0005aa  eef80ae0          VCVT.F32.S32 s1,s1
0005ae  ee600a88          VMUL.F32 s1,s1,s16
0005b2  ee000ae8          VMLS.F32 s0,s1,s17
0005b6  f7fffffe          BL       __hardfp_sinf
0005ba  ee005a90          VMOV     s1,r5
0005be  eef80ae0          VCVT.F32.S32 s1,s1
0005c2  ee200a20          VMUL.F32 s0,s0,s1
0005c6  eebd0ac0          VCVT.S32.F32 s0,s0
0005ca  ee106a10          VMOV     r6,s0
;;;1182   		G2 = AMP * sinf(Pi * (Phase - 0x2AAC) / 0x8000);		
0005ce  ee00aa10          VMOV     s0,r10
0005d2  eeb80ac0          VCVT.F32.S32 s0,s0
0005d6  ee200a08          VMUL.F32 s0,s0,s16
0005da  ee200a28          VMUL.F32 s0,s0,s17
0005de  f7fffffe          BL       __hardfp_sinf
0005e2  ee005a90          VMOV     s1,r5
0005e6  eef80ae0          VCVT.F32.S32 s1,s1
0005ea  ee200a20          VMUL.F32 s0,s0,s1
0005ee  eebd0ac0          VCVT.S32.F32 s0,s0
0005f2  ee100a10          VMOV     r0,s0
;;;1183   		G3 = (ARR - (G1 + G2)) >> 1;																								/* Половина нулевого состояния*/
0005f6  4430              ADD      r0,r0,r6
0005f8  1a21              SUBS     r1,r4,r0
0005fa  1049              ASRS     r1,r1,#1
;;;1184   
;;;1185   		CCR1	= ARR - G3;														
0005fc  1a62              SUBS     r2,r4,r1
;;;1186   		CCR2	= ARR - (G1 + G2 + G3);		
0005fe  4408              ADD      r0,r0,r1
000600  1a20              SUBS     r0,r4,r0
;;;1187   		CCR3	=	ARR - (G1 + G3);													 
000602  4431              ADD      r1,r1,r6
                  |L1.1540|
000604  1a61              SUBS     r1,r4,r1
;;;1188   
;;;1189   	}	else if (Phase < 0x8000)	{	/* Угол 120..180, G1 - V010, G2 = V011 */
;;;1190   		G1 = AMP * sinf(Pi/3 - Pi * (Phase - 0x5555) / 0x8000);
;;;1191   		G2 = AMP * sinf(Pi * (Phase - 0x5555) / 0x8000);		
;;;1192   		G3 = (ARR - (G1 + G2)) >> 1;																								/* Половина нулевого состояния*/
;;;1193   		
;;;1194   		CCR1	=	ARR - (G2 + G3);													 
;;;1195   		CCR2	= ARR - (G1 + G2 + G3);		
;;;1196   		CCR3	= ARR - G3;
;;;1197   		
;;;1198   	}	else if (Phase < 0xAAAC)	{	/* Угол 180..240, G1 - V011, G2 = V001 */
;;;1199   		G1 = AMP * sinf(Pi/3 - Pi * (Phase - 0x8000) / 0x8000);
;;;1200   		G2 = AMP * sinf(Pi * (Phase - 0x8000) / 0x8000);		
;;;1201   		G3 = (ARR - (G1 + G2)) >> 1;																								/* Половина нулевого состояния*/
;;;1202   		
;;;1203   		CCR1	= ARR - (G1 + G2 + G3);		
;;;1204   		CCR2	=	ARR - (G1 + G3);													 
;;;1205   		CCR3	= ARR - G3;
;;;1206   		
;;;1207   	} else if (Phase < 0xD555)	{	/* Угол 240..300, G1 - V001, G2 = V101 */
;;;1208   		G1 = AMP * sinf(Pi/3 - Pi * (Phase - 0xAAAC) / 0x8000);
;;;1209   		G2 = AMP * sinf(Pi * (Phase - 0xAAAC) / 0x8000);		
;;;1210   		G3 = (ARR - (G1 + G2)) >> 1;																								/* Половина нулевого состояния*/
;;;1211   		
;;;1212   		CCR1	= ARR - (G1 + G2 + G3);		
;;;1213   		CCR2	= ARR - G3;
;;;1214   		CCR3	=	ARR - (G2 + G3);													 
;;;1215   		
;;;1216   	} else														{	/* Угол 300..360, G1 - V101, G2 = V100 */
;;;1217   		G1 = AMP * sinf(Pi/3 - Pi * (Phase - 0xD555) / 0x8000);
;;;1218   		G2 = AMP * sinf(Pi * (Phase - 0xD555) / 0x8000);		
;;;1219   		G3 = (ARR - (G1 + G2)) >> 1;																								/* Половина нулевого состояния*/
;;;1220   		
;;;1221   		CCR1	=	ARR - (G1 + G3);													 
;;;1222   		CCR2	= ARR - G3; 
;;;1223   		CCR3	= ARR - (G1 + G2 + G3);		
;;;1224   	} 
;;;1225   	
;;;1226   	CCR1 += Gamma1;	if (CCR1 < 0) {CCR1 = 0;} else if (CCR1 > ARR) {CCR1 = ARR;}
000606  eb120209          ADDS     r2,r2,r9
00060a  bf48              IT       MI
00060c  2200              MOVMI    r2,#0
00060e  d402              BMI      |L1.1558|
000610  42a2              CMP      r2,r4
000612  bfc8              IT       GT
000614  4622              MOVGT    r2,r4
                  |L1.1558|
;;;1227   //CCR2 += Gamma2; if (CCR2 < 0) {CCR2 = 0;} else if (CCR2 > ARR) {CCR2 = ARR;}
;;;1228   	CCR3 += Gamma3; if (CCR3 < 0) {CCR3 = 0;} else if (CCR3 > ARR) {CCR3 = ARR;}
000616  eb110108          ADDS     r1,r1,r8
00061a  bf48              IT       MI
00061c  2100              MOVMI    r1,#0
00061e  d402              BMI      |L1.1574|
000620  42a1              CMP      r1,r4
000622  bfc8              IT       GT
000624  4621              MOVGT    r1,r4
                  |L1.1574|
000626  f44f7cfa          MOV      r12,#0x1f4
00062a  f5a473fa          SUB      r3,r4,#0x1f4
00062e  f5b27ffa          CMP      r2,#0x1f4
000632  bfb8              IT       LT
000634  4662              MOVLT    r2,r12
000636  db02              BLT      |L1.1598|
000638  4293              CMP      r3,r2
00063a  bfb8              IT       LT
00063c  461a              MOVLT    r2,r3
                  |L1.1598|
;;;1229   
;;;1230   	
;;;1231   	TIM->CCR1 = CheckMinImpuls(CCR1, ARR, __MinImpuls); //StdPrms.Temp[0];//
00063e  637a              STR      r2,[r7,#0x34]
000640  f5b07ffa          CMP      r0,#0x1f4
000644  bfb8              IT       LT
000646  4660              MOVLT    r0,r12
000648  db02              BLT      |L1.1616|
00064a  4283              CMP      r3,r0
00064c  bfb8              IT       LT
00064e  4618              MOVLT    r0,r3
                  |L1.1616|
;;;1232   	TIM->CCR2 = CheckMinImpuls(CCR2, ARR, __MinImpuls);
000650  63b8              STR      r0,[r7,#0x38]
;;;1233   	TIM->CCR3 = CheckMinImpuls(CCR3, ARR, __MinImpuls);
000652  4608              MOV      r0,r1
000654  f5b17ffa          CMP      r1,#0x1f4
000658  bfb8              IT       LT
00065a  4660              MOVLT    r0,r12
00065c  db02              BLT      |L1.1636|
00065e  4283              CMP      r3,r0
000660  bfb8              IT       LT
000662  4618              MOVLT    r0,r3
                  |L1.1636|
000664  63f8              STR      r0,[r7,#0x3c]
;;;1234   	
;;;1235   } //static __inline	void CalcGamma3(int Phase, int AMP, int ARR, TIM_TypeDef	*TIM)
000666  ecbd8b02          VPOP     {d8}
00066a  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1646|
00066e  f5b64f00          CMP      r6,#0x8000            ;1189
000672  da32              BGE      |L1.1754|
000674  f5a646aa          SUB      r6,r6,#0x5500         ;1189
000678  3e55              SUBS     r6,r6,#0x55           ;1189
00067a  ee006a90          VMOV     s1,r6                 ;1190
00067e  eef80ae0          VCVT.F32.S32 s1,s1                 ;1190
000682  ee600a88          VMUL.F32 s1,s1,s16             ;1190
000686  ee000ae8          VMLS.F32 s0,s1,s17             ;1190
00068a  f7fffffe          BL       __hardfp_sinf
00068e  ee005a90          VMOV     s1,r5                 ;1190
000692  eef80ae0          VCVT.F32.S32 s1,s1                 ;1190
000696  ee200a20          VMUL.F32 s0,s0,s1              ;1190
00069a  eebd0ac0          VCVT.S32.F32 s0,s0                 ;1190
00069e  ee10aa10          VMOV     r10,s0                ;1190
0006a2  ee006a10          VMOV     s0,r6                 ;1191
0006a6  eeb80ac0          VCVT.F32.S32 s0,s0                 ;1191
0006aa  ee200a08          VMUL.F32 s0,s0,s16             ;1191
0006ae  ee200a28          VMUL.F32 s0,s0,s17             ;1191
0006b2  f7fffffe          BL       __hardfp_sinf
0006b6  ee005a90          VMOV     s1,r5                 ;1191
0006ba  eef80ae0          VCVT.F32.S32 s1,s1                 ;1191
0006be  ee200a20          VMUL.F32 s0,s0,s1              ;1191
0006c2  eebd0ac0          VCVT.S32.F32 s0,s0                 ;1191
0006c6  ee100a10          VMOV     r0,s0                 ;1191
0006ca  eb0a0300          ADD      r3,r10,r0             ;1192
0006ce  1ae1              SUBS     r1,r4,r3              ;1192
0006d0  1049              ASRS     r1,r1,#1              ;1192
0006d2  4408              ADD      r0,r0,r1              ;1194
0006d4  1a22              SUBS     r2,r4,r0              ;1194
0006d6  1858              ADDS     r0,r3,r1              ;1195
0006d8  e033              B        |L1.1858|
                  |L1.1754|
0006da  f64a20ac          MOV      r0,#0xaaac            ;1198
0006de  4286              CMP      r6,r0                 ;1198
0006e0  da31              BGE      |L1.1862|
0006e2  f5a64a00          SUB      r10,r6,#0x8000        ;1199
0006e6  ee00aa90          VMOV     s1,r10                ;1199
0006ea  eef80ae0          VCVT.F32.S32 s1,s1                 ;1199
0006ee  ee600a88          VMUL.F32 s1,s1,s16             ;1199
0006f2  ee000ae8          VMLS.F32 s0,s1,s17             ;1199
0006f6  f7fffffe          BL       __hardfp_sinf
0006fa  ee005a90          VMOV     s1,r5                 ;1199
0006fe  eef80ae0          VCVT.F32.S32 s1,s1                 ;1199
000702  ee200a20          VMUL.F32 s0,s0,s1              ;1199
000706  eebd0ac0          VCVT.S32.F32 s0,s0                 ;1199
00070a  ee106a10          VMOV     r6,s0                 ;1199
00070e  ee00aa10          VMOV     s0,r10                ;1200
000712  eeb80ac0          VCVT.F32.S32 s0,s0                 ;1200
000716  ee200a08          VMUL.F32 s0,s0,s16             ;1200
00071a  ee200a28          VMUL.F32 s0,s0,s17             ;1200
00071e  f7fffffe          BL       __hardfp_sinf
000722  ee005a90          VMOV     s1,r5                 ;1200
000726  eef80ae0          VCVT.F32.S32 s1,s1                 ;1200
00072a  ee200a20          VMUL.F32 s0,s0,s1              ;1200
00072e  eebd0ac0          VCVT.S32.F32 s0,s0                 ;1200
000732  ee100a10          VMOV     r0,s0                 ;1200
000736  4430              ADD      r0,r0,r6              ;1201
000738  1a21              SUBS     r1,r4,r0              ;1201
00073a  1049              ASRS     r1,r1,#1              ;1201
00073c  4408              ADD      r0,r0,r1              ;1203
00073e  1a22              SUBS     r2,r4,r0              ;1203
000740  1870              ADDS     r0,r6,r1              ;1204
                  |L1.1858|
000742  1a20              SUBS     r0,r4,r0              ;1195
000744  e75e              B        |L1.1540|
                  |L1.1862|
000746  f24d5055          MOV      r0,#0xd555            ;1207
00074a  4286              CMP      r6,r0                 ;1207
00074c  da33              BGE      |L1.1974|
00074e  f5a6462a          SUB      r6,r6,#0xaa00         ;1207
000752  3eac              SUBS     r6,r6,#0xac           ;1207
000754  ee006a90          VMOV     s1,r6                 ;1208
000758  eef80ae0          VCVT.F32.S32 s1,s1                 ;1208
00075c  ee600a88          VMUL.F32 s1,s1,s16             ;1208
000760  ee000ae8          VMLS.F32 s0,s1,s17             ;1208
000764  f7fffffe          BL       __hardfp_sinf
000768  ee005a90          VMOV     s1,r5                 ;1208
00076c  eef80ae0          VCVT.F32.S32 s1,s1                 ;1208
000770  ee200a20          VMUL.F32 s0,s0,s1              ;1208
000774  eebd0ac0          VCVT.S32.F32 s0,s0                 ;1208
000778  ee10aa10          VMOV     r10,s0                ;1208
00077c  ee006a10          VMOV     s0,r6                 ;1209
000780  eeb80ac0          VCVT.F32.S32 s0,s0                 ;1209
000784  ee200a08          VMUL.F32 s0,s0,s16             ;1209
000788  ee200a28          VMUL.F32 s0,s0,s17             ;1209
00078c  f7fffffe          BL       __hardfp_sinf
000790  ee005a90          VMOV     s1,r5                 ;1209
000794  eef80ae0          VCVT.F32.S32 s1,s1                 ;1209
000798  ee200a20          VMUL.F32 s0,s0,s1              ;1209
00079c  eebd0ac0          VCVT.S32.F32 s0,s0                 ;1209
0007a0  ee103a10          VMOV     r3,s0                 ;1209
0007a4  eb0a0003          ADD      r0,r10,r3             ;1210
0007a8  1a21              SUBS     r1,r4,r0              ;1210
0007aa  1049              ASRS     r1,r1,#1              ;1210
0007ac  4408              ADD      r0,r0,r1              ;1212
0007ae  1a22              SUBS     r2,r4,r0              ;1212
0007b0  1a60              SUBS     r0,r4,r1              ;1213
0007b2  4419              ADD      r1,r1,r3              ;1214
0007b4  e726              B        |L1.1540|
                  |L1.1974|
0007b6  f5a64a55          SUB      r10,r6,#0xd500        ;1217
0007ba  f1aa0a55          SUB      r10,r10,#0x55         ;1217
0007be  ee00aa90          VMOV     s1,r10                ;1217
0007c2  eef80ae0          VCVT.F32.S32 s1,s1                 ;1217
0007c6  ee600a88          VMUL.F32 s1,s1,s16             ;1217
0007ca  ee000ae8          VMLS.F32 s0,s1,s17             ;1217
0007ce  f7fffffe          BL       __hardfp_sinf
0007d2  ee005a90          VMOV     s1,r5                 ;1217
0007d6  eef80ae0          VCVT.F32.S32 s1,s1                 ;1217
0007da  ee200a20          VMUL.F32 s0,s0,s1              ;1217
0007de  eebd0ac0          VCVT.S32.F32 s0,s0                 ;1217
0007e2  ee106a10          VMOV     r6,s0                 ;1217
0007e6  ee00aa10          VMOV     s0,r10                ;1218
0007ea  eeb80ac0          VCVT.F32.S32 s0,s0                 ;1218
0007ee  ee200a08          VMUL.F32 s0,s0,s16             ;1218
0007f2  ee200a28          VMUL.F32 s0,s0,s17             ;1218
0007f6  f7fffffe          BL       __hardfp_sinf
0007fa  ee005a90          VMOV     s1,r5                 ;1218
0007fe  eef80ae0          VCVT.F32.S32 s1,s1                 ;1218
000802  ee200a20          VMUL.F32 s0,s0,s1              ;1218
000806  eebd0ac0          VCVT.S32.F32 s0,s0                 ;1218
00080a  ee100a10          VMOV     r0,s0                 ;1218
00080e  1833              ADDS     r3,r6,r0              ;1219
000810  1ae0              SUBS     r0,r4,r3              ;1219
000812  1041              ASRS     r1,r0,#1              ;1219
000814  1870              ADDS     r0,r6,r1              ;1221
000816  1a22              SUBS     r2,r4,r0              ;1221
000818  1a60              SUBS     r0,r4,r1              ;1222
                  |L1.2074|
00081a  4419              ADD      r1,r1,r3              ;1223
00081c  e6f2              B        |L1.1540|
;;;1236   
                          ENDP

                  DMA2_Stream4_IRQHandler PROC
;;;1544   
;;;1545   void DMA2_Stream4_IRQHandler() {
00081e  e92d4ff0          PUSH     {r4-r11,lr}
000822  ed2d8b02          VPUSH    {d8}
000826  b08f              SUB      sp,sp,#0x3c
;;;1546   int i;
;;;1547   	
;;;1548   	if (ENATIMOffset > 0) 
000828  f2400600          MOVW     r6,#:LOWER16: ||.bss||+84
00082c  f2c00600          MOVT     r6,#:UPPER16: ||.bss||+84
000830  f9b60efe          LDRSH    r0,[r6,#0xefe]  ; Metro
000834  f5065400          ADD      r4,r6,#0x2000
000838  2800              CMP      r0,#0
00083a  dd0e              BLE      |L1.2138|
;;;1549   	{	
;;;1550   		TIM8->CCR1 = PrgData.TIM8_CCR1;
00083c  f2404134          MOV      r1,#0x434
000840  f2c40101          MOVT     r1,#0x4001
000844  f9b4057e          LDRSH    r0,[r4,#0x57e]  ; Metro
000848  6008              STR      r0,[r1,#0]
;;;1551   		TIM8->CCR2 = PrgData.TIM8_CCR2;
00084a  1d09              ADDS     r1,r1,#4
00084c  f9b40580          LDRSH    r0,[r4,#0x580]  ; Metro
000850  6008              STR      r0,[r1,#0]
;;;1552   		TIM8->CCR3 = PrgData.TIM8_CCR3;
000852  1d09              ADDS     r1,r1,#4
000854  f9b40582          LDRSH    r0,[r4,#0x582]  ; Metro
000858  6008              STR      r0,[r1,#0]
                  |L1.2138|
;;;1553   	}
;;;1554   	
;;;1555   	/* Clear DMA interrupr status bits ------	*/
;;;1556   	DMA2->HIFCR	= (0x3Dul << 0);																								
00085a  f246410c          MOV      r1,#0x640c
00085e  f2c40102          MOVT     r1,#0x4002
000862  203d              MOVS     r0,#0x3d
000864  6008              STR      r0,[r1,#0]
;;;1557   
;;;1558   	LedToggle();
000866  2000              MOVS     r0,#0
000868  f2c42043          MOVT     r0,#0x4243
00086c  f8d012a0          LDR      r1,[r0,#0x2a0]
000870  f0810101          EOR      r1,r1,#1
000874  f8c012a0          STR      r1,[r0,#0x2a0]
000878  f506511c          ADD      r1,r6,#0x2700
00087c  f5065018          ADD      r0,r6,#0x2600
000880  460a              MOV      r2,r1
                  |L1.2178|
000882  f8303b02          LDRH     r3,[r0],#2
000886  f8213b02          STRH     r3,[r1],#2
00088a  4290              CMP      r0,r2
00088c  d1f9              BNE      |L1.2178|
00088e  f5067148          ADD      r1,r6,#0x320
000892  f5067038          ADD      r0,r6,#0x2e0
000896  460a              MOV      r2,r1
                  |L1.2200|
000898  f8303b02          LDRH     r3,[r0],#2
00089c  f8213b02          STRH     r3,[r1],#2
0008a0  4290              CMP      r0,r2
0008a2  d1f9              BNE      |L1.2200|
;;;1559   
;;;1560   	/* Копируем полученные данные от АЦП в рабочие буферы	*/
;;;1561   	CopyADCBuffer();
;;;1562   	
;;;1563   	/* Счетчик циклов	-----------------------------------	*/
;;;1564   	StdPrms.CycleCounter++;
0008a4  f8b6021a          LDRH     r0,[r6,#0x21a]  ; Metro
;;;1565   	
;;;1566   	/*	Считываем часы реального времени ----------------	*/
;;;1567   	ReadRTC(NotWaitClock,&EvPrms.RTC_Date,&EvPrms.RTC_Time);	
0008a8  f1060208          ADD      r2,r6,#8
0008ac  1c40              ADDS     r0,r0,#1              ;1564
0008ae  f8a6021a          STRH     r0,[r6,#0x21a]        ;1564
0008b2  1d31              ADDS     r1,r6,#4
0008b4  2000              MOVS     r0,#0
0008b6  f7fffffe          BL       ReadRTC
0008ba  f242305c          MOV      r0,#0x235c
0008be  4430              ADD      r0,r0,r6
0008c0  900d              STR      r0,[sp,#0x34]
0008c2  f2423060          MOV      r0,#0x2360
0008c6  4430              ADD      r0,r0,r6
0008c8  900c              STR      r0,[sp,#0x30]
0008ca  f2423058          MOV      r0,#0x2358
0008ce  4430              ADD      r0,r0,r6
0008d0  900b              STR      r0,[sp,#0x2c]
0008d2  f2423064          MOV      r0,#0x2364
0008d6  4430              ADD      r0,r0,r6
0008d8  900a              STR      r0,[sp,#0x28]
0008da  f2423068          MOV      r0,#0x2368
0008de  4430              ADD      r0,r0,r6
0008e0  9009              STR      r0,[sp,#0x24]
0008e2  f242306c          MOV      r0,#0x236c
0008e6  4430              ADD      r0,r0,r6
0008e8  9008              STR      r0,[sp,#0x20]
0008ea  f2423070          MOV      r0,#0x2370
0008ee  4430              ADD      r0,r0,r6
0008f0  9007              STR      r0,[sp,#0x1c]
0008f2  f2423074          MOV      r0,#0x2374
0008f6  4430              ADD      r0,r0,r6
0008f8  9006              STR      r0,[sp,#0x18]
0008fa  f2423084          MOV      r0,#0x2384
0008fe  4430              ADD      r0,r0,r6
000900  9005              STR      r0,[sp,#0x14]
000902  f2423078          MOV      r0,#0x2378
000906  4430              ADD      r0,r0,r6
000908  9004              STR      r0,[sp,#0x10]
00090a  f2423088          MOV      r0,#0x2388
00090e  4430              ADD      r0,r0,r6
000910  9003              STR      r0,[sp,#0xc]
000912  f242307c          MOV      r0,#0x237c
;;;1568   	
;;;1569   	/* Нормализуем сигналы от АЦП	*/
;;;1570   	/* После завершения расчета - в стандартных переменных будут последние значения - аналогично старому алгоритму	*/
;;;1571   	for (i = 0; i < ADCxCycle; i++)							/* Рассчитываем аналоговые значения	*/ 
000916  2500              MOVS     r5,#0
000918  eeb68a00          VMOV.F32 s16,#0.50000000
00091c  4430              ADD      r0,r0,r6
00091e  e005              B        |L1.2348|
                  |L1.2336|
000920  40490fdb          DCFS     0x40490fdb ; 3.1415927410125732
                  |L1.2340|
000924  38000000          DCFS     0x38000000 ; 3.0517578125e-05
                  |L1.2344|
000928  3f860a92          DCFS     0x3f860a92 ; 1.0471975803375244
                  |L1.2348|
00092c  9002              STR      r0,[sp,#8]
00092e  f242308c          MOV      r0,#0x238c
000932  4430              ADD      r0,r0,r6
000934  9001              STR      r0,[sp,#4]
000936  f2423090          MOV      r0,#0x2390
00093a  4430              ADD      r0,r0,r6
00093c  9000              STR      r0,[sp,#0]
                  |L1.2366|
;;;1572   	{
;;;1573   		NormIntADC(4, i);
00093e  2204              MOVS     r2,#4
000940  2000              MOVS     r0,#0
000942  f1050308          ADD      r3,r5,#8
                  |L1.2374|
000946  fb030102          MLA      r1,r3,r2,r0
00094a  eb060141          ADD      r1,r6,r1,LSL #1
00094e  f9b112e0          LDRSH    r1,[r1,#0x2e0]
000952  ea4f0cc1          LSL      r12,r1,#3
000956  eb060140          ADD      r1,r6,r0,LSL #1
00095a  f9b17e50          LDRSH    r7,[r1,#0xe50]
00095e  fadcfc17          QSUB16   r12,r12,r7
000962  f8b17e20          LDRH     r7,[r1,#0xe20]
000966  fa0ffc8c          SXTH     r12,r12
00096a  fb0cfc07          MUL      r12,r12,r7
00096e  ea4f3cec          ASR      r12,r12,#15
000972  1c40              ADDS     r0,r0,#1
000974  f8a1c380          STRH     r12,[r1,#0x380]
000978  4290              CMP      r0,r2
00097a  dbe4              BLT      |L1.2374|
;;;1574   		NormExtADC(16, i);
00097c  2210              MOVS     r2,#0x10
00097e  2000              MOVS     r0,#0
                  |L1.2432|
000980  fb030102          MLA      r1,r3,r2,r0
000984  eb060141          ADD      r1,r6,r1,LSL #1
000988  f44f5c18          MOV      r12,#0x2600
00098c  f931c00c          LDRSH    r12,[r1,r12]
000990  eb060140          ADD      r1,r6,r0,LSL #1
000994  f9b17e30          LDRSH    r7,[r1,#0xe30]
000998  fadcfc17          QSUB16   r12,r12,r7
00099c  f8b17e00          LDRH     r7,[r1,#0xe00]
0009a0  fa0ffc8c          SXTH     r12,r12
0009a4  fb0cfc07          MUL      r12,r12,r7
0009a8  ea4f4c2c          ASR      r12,r12,#16
0009ac  1c40              ADDS     r0,r0,#1
0009ae  f8a1c360          STRH     r12,[r1,#0x360]
0009b2  4290              CMP      r0,r2
0009b4  dbe4              BLT      |L1.2432|
0009b6  f8b60360          LDRH     r0,[r6,#0x360]  ; Metro
0009ba  4240              RSBS     r0,r0,#0
0009bc  b201              SXTH     r1,r0
0009be  f8b60eae          LDRH     r0,[r6,#0xeae]  ; Metro
0009c2  08c3              LSRS     r3,r0,#3
0009c4  980d              LDR      r0,[sp,#0x34]
0009c6  6802              LDR      r2,[r0,#0]
0009c8  eba14c22          SUB      r12,r1,r2,ASR #16
0009cc  fb0c2203          MLA      r2,r12,r3,r2
0009d0  6002              STR      r2,[r0,#0]
0009d2  1410              ASRS     r0,r2,#16
0009d4  8670              STRH     r0,[r6,#0x32]
0009d6  f2400000          MOVW     r0,#:LOWER16: ||.data||
0009da  f2c00000          MOVT     r0,#:UPPER16: ||.data||
0009de  6802              LDR      r2,[r0,#0]  ; SummUdc1
0009e0  1853              ADDS     r3,r2,r1
0009e2  6003              STR      r3,[r0,#0]  ; SummUdc1
0009e4  f8b62eae          LDRH     r2,[r6,#0xeae]  ; Metro
0009e8  f9b61362          LDRSH    r1,[r6,#0x362]  ; Metro
0009ec  08d7              LSRS     r7,r2,#3
0009ee  9a0c              LDR      r2,[sp,#0x30]
0009f0  2d07              CMP      r5,#7
0009f2  f8d2c000          LDR      r12,[r2,#0]
0009f6  eba1482c          SUB      r8,r1,r12,ASR #16
0009fa  fb08cc07          MLA      r12,r8,r7,r12
0009fe  f8c2c000          STR      r12,[r2,#0]
000a02  ea4f422c          ASR      r2,r12,#16
000a06  86b2              STRH     r2,[r6,#0x34]
000a08  6842              LDR      r2,[r0,#4]  ; SummUdc2
000a0a  4411              ADD      r1,r1,r2
000a0c  6041              STR      r1,[r0,#4]  ; SummUdc2
000a0e  d10e              BNE      |L1.2606|
000a10  17da              ASRS     r2,r3,#31
000a12  eb037252          ADD      r2,r3,r2,LSR #29
000a16  10d2              ASRS     r2,r2,#3
000a18  f8a620f4          STRH     r2,[r6,#0xf4]
000a1c  17ca              ASRS     r2,r1,#31
000a1e  eb017152          ADD      r1,r1,r2,LSR #29
000a22  10c9              ASRS     r1,r1,#3
000a24  f8a610f6          STRH     r1,[r6,#0xf6]
000a28  2100              MOVS     r1,#0
000a2a  6041              STR      r1,[r0,#4]  ; SummUdc2
000a2c  6001              STR      r1,[r0,#0]  ; SummUdc1
                  |L1.2606|
000a2e  f8b61380          LDRH     r1,[r6,#0x380]  ; Metro
000a32  4249              RSBS     r1,r1,#0
000a34  b20a              SXTH     r2,r1
000a36  82b2              STRH     r2,[r6,#0x14]
000a38  f8b61382          LDRH     r1,[r6,#0x382]  ; Metro
000a3c  4249              RSBS     r1,r1,#0
000a3e  b209              SXTH     r1,r1
000a40  82f1              STRH     r1,[r6,#0x16]
000a42  f8b63384          LDRH     r3,[r6,#0x384]  ; Metro
000a46  425b              RSBS     r3,r3,#0
000a48  8333              STRH     r3,[r6,#0x18]
000a4a  1853              ADDS     r3,r2,r1
000a4c  435a              MULS     r2,r3,r2
000a4e  fb112101          SMLABB   r1,r1,r1,r2
000a52  f64a2cab          MOV      r12,#0xaaab
000a56  f6ca2caa          MOVT     r12,#0xaaaa
000a5a  fbac2101          UMULL    r2,r1,r12,r1
000a5e  0849              LSRS     r1,r1,#1
000a60  0049              LSLS     r1,r1,#1
000a62  ee001a10          VMOV     s0,r1
000a66  eeb80a40          VCVT.F32.U32 s0,s0
000a6a  ee700a08          VADD.F32 s1,s0,s16
000a6e  eeb10ae0          VSQRT.F32 s0,s1
000a72  eebd0ac0          VCVT.S32.F32 s0,s0
000a76  ee101a10          VMOV     r1,s0
000a7a  f301020f          SSAT     r2,#16,r1
000a7e  f8a6204e          STRH     r2,[r6,#0x4e]
000a82  f8b61ea0          LDRH     r1,[r6,#0xea0]  ; Metro
000a86  08cf              LSRS     r7,r1,#3
000a88  990b              LDR      r1,[sp,#0x2c]
000a8a  680b              LDR      r3,[r1,#0]
000a8c  eba24223          SUB      r2,r2,r3,ASR #16
000a90  fb023207          MLA      r2,r2,r7,r3
000a94  600a              STR      r2,[r1,#0]
000a96  1411              ASRS     r1,r2,#16
000a98  8631              STRH     r1,[r6,#0x30]
000a9a  f9b62016          LDRSH    r2,[r6,#0x16]  ; Metro
000a9e  f9b61014          LDRSH    r1,[r6,#0x14]  ; Metro
000aa2  ea4f074c          LSL      r7,r12,#1
000aa6  eb020341          ADD      r3,r2,r1,LSL #1
000aaa  fb878303          SMULL    r8,r3,r7,r3
000aae  eba373e3          SUB      r3,r3,r3,ASR #31
000ab2  f303030f          SSAT     r3,#16,r3
000ab6  8373              STRH     r3,[r6,#0x1a]
000ab8  1a53              SUBS     r3,r2,r1
000aba  4252              RSBS     r2,r2,#0
000abc  ebc10142          RSB      r1,r1,r2,LSL #1
000ac0  fb878303          SMULL    r8,r3,r7,r3
000ac4  fb872101          SMULL    r2,r1,r7,r1
000ac8  eba373e3          SUB      r3,r3,r3,ASR #31
000acc  eba171e1          SUB      r1,r1,r1,ASR #31
000ad0  83b3              STRH     r3,[r6,#0x1c]
000ad2  f301010f          SSAT     r1,#16,r1
000ad6  83f1              STRH     r1,[r6,#0x1e]
000ad8  f9b6836a          LDRSH    r8,[r6,#0x36a]  ; Metro
000adc  f9b61368          LDRSH    r1,[r6,#0x368]  ; Metro
000ae0  fa98f111          QADD16   r1,r8,r1
000ae4  b209              SXTH     r1,r1
000ae6  f8a61080          STRH     r1,[r6,#0x80]
000aea  f9b62372          LDRSH    r2,[r6,#0x372]  ; Metro
000aee  f9b63370          LDRSH    r3,[r6,#0x370]  ; Metro
000af2  fa92f213          QADD16   r2,r2,r3
000af6  f8a62082          STRH     r2,[r6,#0x82]
000afa  f9b6737a          LDRSH    r7,[r6,#0x37a]  ; Metro
000afe  f9b62378          LDRSH    r2,[r6,#0x378]  ; Metro
000b02  fa97f212          QADD16   r2,r7,r2
000b06  b212              SXTH     r2,r2
000b08  f8a62084          STRH     r2,[r6,#0x84]
000b0c  f2400000          MOVW     r0,#:LOWER16: ||.data||
000b10  f2c00000          MOVT     r0,#:UPPER16: ||.data||
000b14  6883              LDR      r3,[r0,#8]  ; SummI12
000b16  4413              ADD      r3,r3,r2
000b18  6083              STR      r3,[r0,#8]  ; SummI12
000b1a  f8d09010          LDR      r9,[r0,#0x10]  ; SummIa12
000b1e  eb010b09          ADD      r11,r1,r9
000b22  f8c0b010          STR      r11,[r0,#0x10]  ; SummIa12
000b26  6941              LDR      r1,[r0,#0x14]  ; SummIc12
000b28  eb020e01          ADD      lr,r2,r1
000b2c  f8c0e014          STR      lr,[r0,#0x14]  ; SummIc12
000b30  f9b6136e          LDRSH    r1,[r6,#0x36e]  ; Metro
000b34  f9b6236c          LDRSH    r2,[r6,#0x36c]  ; Metro
000b38  fa91f112          QADD16   r1,r1,r2
000b3c  fa0ff981          SXTH     r9,r1
000b40  f8a69086          STRH     r9,[r6,#0x86]
000b44  f9b61376          LDRSH    r1,[r6,#0x376]  ; Metro
000b48  f9b62374          LDRSH    r2,[r6,#0x374]  ; Metro
000b4c  fa91f112          QADD16   r1,r1,r2
000b50  f8a61088          STRH     r1,[r6,#0x88]
000b54  f9b6137e          LDRSH    r1,[r6,#0x37e]  ; Metro
000b58  f9b6237c          LDRSH    r2,[r6,#0x37c]  ; Metro
000b5c  fa91f112          QADD16   r1,r1,r2
000b60  b20a              SXTH     r2,r1
000b62  f8a6208a          STRH     r2,[r6,#0x8a]
000b66  68c1              LDR      r1,[r0,#0xc]  ; SummI34
000b68  4411              ADD      r1,r1,r2
000b6a  60c1              STR      r1,[r0,#0xc]  ; SummI34
000b6c  f8d0a018          LDR      r10,[r0,#0x18]  ; SummIa34
000b70  44ca              ADD      r10,r10,r9
000b72  f8c0a018          STR      r10,[r0,#0x18]  ; SummIa34
000b76  f8d0901c          LDR      r9,[r0,#0x1c]  ; SummIc34
000b7a  4491              ADD      r9,r9,r2
000b7c  f8c0901c          STR      r9,[r0,#0x1c]  ; SummIc34
000b80  eb080007          ADD      r0,r8,r7
000b84  fb00f008          MUL      r0,r0,r8
000b88  fb170007          SMLABB   r0,r7,r7,r0
000b8c  fbac2000          UMULL    r2,r0,r12,r0
000b90  0840              LSRS     r0,r0,#1
000b92  0040              LSLS     r0,r0,#1
000b94  ee000a10          VMOV     s0,r0
000b98  eeb80a40          VCVT.F32.U32 s0,s0
000b9c  ee700a08          VADD.F32 s1,s0,s16
000ba0  eeb10ae0          VSQRT.F32 s0,s1
000ba4  eebd0ac0          VCVT.S32.F32 s0,s0
000ba8  ee100a10          VMOV     r0,s0
000bac  f300080f          SSAT     r8,#16,r0
000bb0  f8b60ea2          LDRH     r0,[r6,#0xea2]  ; Metro
000bb4  08c7              LSRS     r7,r0,#3
000bb6  980a              LDR      r0,[sp,#0x28]
000bb8  6802              LDR      r2,[r0,#0]
000bba  eba84822          SUB      r8,r8,r2,ASR #16
000bbe  fb082207          MLA      r2,r8,r7,r2
000bc2  6002              STR      r2,[r0,#0]
000bc4  1410              ASRS     r0,r2,#16
000bc6  86f0              STRH     r0,[r6,#0x36]
000bc8  f9b62368          LDRSH    r2,[r6,#0x368]  ; Metro
000bcc  f9b60378          LDRSH    r0,[r6,#0x378]  ; Metro
000bd0  1817              ADDS     r7,r2,r0
000bd2  437a              MULS     r2,r7,r2
000bd4  fb102000          SMLABB   r0,r0,r0,r2
000bd8  fbac2000          UMULL    r2,r0,r12,r0
000bdc  0840              LSRS     r0,r0,#1
000bde  0040              LSLS     r0,r0,#1
000be0  ee000a10          VMOV     s0,r0
000be4  eeb80a40          VCVT.F32.U32 s0,s0
000be8  ee700a08          VADD.F32 s1,s0,s16
000bec  eeb10ae0          VSQRT.F32 s0,s1
000bf0  eebd0ac0          VCVT.S32.F32 s0,s0
000bf4  ee100a10          VMOV     r0,s0
000bf8  f300080f          SSAT     r8,#16,r0
000bfc  f8b60ea4          LDRH     r0,[r6,#0xea4]  ; Metro
000c00  08c7              LSRS     r7,r0,#3
000c02  9809              LDR      r0,[sp,#0x24]
000c04  6802              LDR      r2,[r0,#0]
000c06  eba84822          SUB      r8,r8,r2,ASR #16
000c0a  fb082207          MLA      r2,r8,r7,r2
000c0e  6002              STR      r2,[r0,#0]
000c10  1410              ASRS     r0,r2,#16
000c12  8730              STRH     r0,[r6,#0x38]
000c14  f9b6236e          LDRSH    r2,[r6,#0x36e]  ; Metro
000c18  f9b6037e          LDRSH    r0,[r6,#0x37e]  ; Metro
000c1c  1817              ADDS     r7,r2,r0
000c1e  437a              MULS     r2,r7,r2
000c20  fb102000          SMLABB   r0,r0,r0,r2
000c24  fbac2000          UMULL    r2,r0,r12,r0
000c28  0840              LSRS     r0,r0,#1
000c2a  0040              LSLS     r0,r0,#1
000c2c  ee000a10          VMOV     s0,r0
000c30  eeb80a40          VCVT.F32.U32 s0,s0
000c34  ee700a08          VADD.F32 s1,s0,s16
000c38  eeb10ae0          VSQRT.F32 s0,s1
000c3c  eebd0ac0          VCVT.S32.F32 s0,s0
000c40  ee100a10          VMOV     r0,s0
000c44  f300080f          SSAT     r8,#16,r0
000c48  f8b60ea2          LDRH     r0,[r6,#0xea2]  ; Metro
000c4c  08c7              LSRS     r7,r0,#3
000c4e  9808              LDR      r0,[sp,#0x20]
000c50  6802              LDR      r2,[r0,#0]
000c52  eba84822          SUB      r8,r8,r2,ASR #16
000c56  fb082207          MLA      r2,r8,r7,r2
000c5a  6002              STR      r2,[r0,#0]
000c5c  1410              ASRS     r0,r2,#16
000c5e  8770              STRH     r0,[r6,#0x3a]
000c60  f9b6236c          LDRSH    r2,[r6,#0x36c]  ; Metro
000c64  f9b6037c          LDRSH    r0,[r6,#0x37c]  ; Metro
000c68  1817              ADDS     r7,r2,r0
000c6a  437a              MULS     r2,r7,r2
000c6c  fb102000          SMLABB   r0,r0,r0,r2
000c70  fbac2000          UMULL    r2,r0,r12,r0
000c74  0840              LSRS     r0,r0,#1
000c76  0040              LSLS     r0,r0,#1
000c78  ee000a10          VMOV     s0,r0
000c7c  eeb80a40          VCVT.F32.U32 s0,s0
000c80  ee700a08          VADD.F32 s1,s0,s16
000c84  eeb10ae0          VSQRT.F32 s0,s1
000c88  eebd0ac0          VCVT.S32.F32 s0,s0
000c8c  ee100a10          VMOV     r0,s0
000c90  f3000c0f          SSAT     r12,#16,r0
000c94  f8b60ea4          LDRH     r0,[r6,#0xea4]  ; Metro
000c98  08c2              LSRS     r2,r0,#3
000c9a  9807              LDR      r0,[sp,#0x1c]
000c9c  6807              LDR      r7,[r0,#0]
000c9e  ebac4c27          SUB      r12,r12,r7,ASR #16
000ca2  fb0c7202          MLA      r2,r12,r2,r7
000ca6  6002              STR      r2,[r0,#0]
000ca8  1410              ASRS     r0,r2,#16
000caa  87b0              STRH     r0,[r6,#0x3c]
000cac  2d07              CMP      r5,#7
000cae  d112              BNE      |L1.3286|
000cb0  f2400200          MOVW     r2,#:LOWER16: ||.data||
000cb4  f2c00200          MOVT     r2,#:UPPER16: ||.data||
000cb8  17d8              ASRS     r0,r3,#31
000cba  eb037050          ADD      r0,r3,r0,LSR #29
000cbe  10c0              ASRS     r0,r0,#3
000cc0  f8a600fc          STRH     r0,[r6,#0xfc]
000cc4  17c8              ASRS     r0,r1,#31
000cc6  eb017050          ADD      r0,r1,r0,LSR #29
000cca  10c0              ASRS     r0,r0,#3
000ccc  f8a600fe          STRH     r0,[r6,#0xfe]
000cd0  2000              MOVS     r0,#0
000cd2  60d0              STR      r0,[r2,#0xc]  ; SummI34
000cd4  6090              STR      r0,[r2,#8]  ; SummI12
                  |L1.3286|
000cd6  f2400100          MOVW     r1,#:LOWER16: ||.data||
000cda  f2c00100          MOVT     r1,#:UPPER16: ||.data||
000cde  6a08              LDR      r0,[r1,#0x20]  ; Count
000ce0  1c40              ADDS     r0,r0,#1
000ce2  6208              STR      r0,[r1,#0x20]  ; Count
000ce4  f5b07fa0          CMP      r0,#0x140
000ce8  d17a              BNE      |L1.3552|
000cea  f44f70a0          MOV      r0,#0x140
000cee  468c              MOV      r12,r1
000cf0  fb9bf1f0          SDIV     r1,r11,r0
000cf4  fb9ef2f0          SDIV     r2,lr,r0
000cf8  fb9af3f0          SDIV     r3,r10,r0
000cfc  fb99f0f0          SDIV     r0,r9,r0
000d00  b209              SXTH     r1,r1
000d02  f8a41804          STRH     r1,[r4,#0x804]
000d06  b212              SXTH     r2,r2
000d08  f8a42806          STRH     r2,[r4,#0x806]
000d0c  b21b              SXTH     r3,r3
000d0e  b207              SXTH     r7,r0
000d10  f8a43808          STRH     r3,[r4,#0x808]
000d14  f8a4780a          STRH     r7,[r4,#0x80a]
000d18  2000              MOVS     r0,#0
000d1a  f8cc001c          STR      r0,[r12,#0x1c]  ; SummIc34
000d1e  f8cc0014          STR      r0,[r12,#0x14]  ; SummIc12
000d22  f8cc0018          STR      r0,[r12,#0x18]  ; SummIa34
000d26  f8cc0010          STR      r0,[r12,#0x10]  ; SummIa12
000d2a  f8cc0020          STR      r0,[r12,#0x20]  ; Count
000d2e  f8b6ce6e          LDRH     r12,[r6,#0xe6e]  ; Metro
000d32  f1bc0f00          CMP      r12,#0
000d36  d07d              BEQ      |L1.3636|
000d38  2905              CMP      r1,#5
000d3a  dd04              BLE      |L1.3398|
000d3c  f8b4080e          LDRH     r0,[r4,#0x80e]  ; Metro
000d40  1c40              ADDS     r0,r0,#1
000d42  f8a4080e          STRH     r0,[r4,#0x80e]
                  |L1.3398|
000d46  f1110f05          CMN      r1,#5
000d4a  da04              BGE      |L1.3414|
000d4c  f8b4080e          LDRH     r0,[r4,#0x80e]  ; Metro
000d50  1e40              SUBS     r0,r0,#1
000d52  f8a4080e          STRH     r0,[r4,#0x80e]
                  |L1.3414|
000d56  2a05              CMP      r2,#5
000d58  dd04              BLE      |L1.3428|
000d5a  f8b4080c          LDRH     r0,[r4,#0x80c]  ; Metro
000d5e  1c40              ADDS     r0,r0,#1
000d60  f8a4080c          STRH     r0,[r4,#0x80c]
                  |L1.3428|
000d64  f1120f05          CMN      r2,#5
000d68  da04              BGE      |L1.3444|
000d6a  f8b4080c          LDRH     r0,[r4,#0x80c]  ; Metro
000d6e  1e40              SUBS     r0,r0,#1
000d70  f8a4080c          STRH     r0,[r4,#0x80c]
                  |L1.3444|
000d74  2b05              CMP      r3,#5
000d76  dd04              BLE      |L1.3458|
000d78  f8b40812          LDRH     r0,[r4,#0x812]  ; Metro
000d7c  1c40              ADDS     r0,r0,#1
000d7e  f8a40812          STRH     r0,[r4,#0x812]
                  |L1.3458|
000d82  f1130f05          CMN      r3,#5
000d86  da04              BGE      |L1.3474|
000d88  f8b40812          LDRH     r0,[r4,#0x812]  ; Metro
000d8c  1e40              SUBS     r0,r0,#1
000d8e  f8a40812          STRH     r0,[r4,#0x812]
                  |L1.3474|
000d92  2f05              CMP      r7,#5
000d94  dd04              BLE      |L1.3488|
000d96  f8b40810          LDRH     r0,[r4,#0x810]  ; Metro
000d9a  1c40              ADDS     r0,r0,#1
000d9c  f8a40810          STRH     r0,[r4,#0x810]
                  |L1.3488|
000da0  f1170f05          CMN      r7,#5
000da4  da04              BGE      |L1.3504|
000da6  f8b40810          LDRH     r0,[r4,#0x810]  ; Metro
000daa  1e40              SUBS     r0,r0,#1
000dac  f8a40810          STRH     r0,[r4,#0x810]
                  |L1.3504|
000db0  f9b4080c          LDRSH    r0,[r4,#0x80c]  ; Metro
000db4  f3000008          SSAT     r0,#9,r0
000db8  f8a4080c          STRH     r0,[r4,#0x80c]
000dbc  f9b4080e          LDRSH    r0,[r4,#0x80e]  ; Metro
000dc0  f3000008          SSAT     r0,#9,r0
000dc4  f8a4080e          STRH     r0,[r4,#0x80e]
000dc8  f9b40810          LDRSH    r0,[r4,#0x810]  ; Metro
000dcc  f3000008          SSAT     r0,#9,r0
000dd0  f8a40810          STRH     r0,[r4,#0x810]
000dd4  f9b40812          LDRSH    r0,[r4,#0x812]  ; Metro
000dd8  f3000008          SSAT     r0,#9,r0
000ddc  f8a40812          STRH     r0,[r4,#0x812]
                  |L1.3552|
000de0  f9b67014          LDRSH    r7,[r6,#0x14]  ; Metro
000de4  f9b61084          LDRSH    r1,[r6,#0x84]  ; Metro
000de8  f9b63016          LDRSH    r3,[r6,#0x16]  ; Metro
000dec  fb872101          SMULL    r2,r1,r7,r1
000df0  f9b6c018          LDRSH    r12,[r6,#0x18]  ; Metro
000df4  f9b68080          LDRSH    r8,[r6,#0x80]  ; Metro
000df8  f9b6a082          LDRSH    r10,[r6,#0x82]  ; Metro
000dfc  46b6              MOV      lr,r6
000dfe  4630              MOV      r0,r6
000e00  fbc32188          SMLALBB  r2,r1,r3,r8
000e04  fbcc218a          SMLALBB  r2,r1,r12,r10
000e08  0b12              LSRS     r2,r2,#12
000e0a  ea425101          ORR      r1,r2,r1,LSL #20
000e0e  f2455256          MOV      r2,#0x5556
000e12  f2c55255          MOVT     r2,#0x5555
000e16  fb822101          SMULL    r2,r1,r2,r1
000e1a  eba171e1          SUB      r1,r1,r1,ASR #31
000e1e  f301020f          SSAT     r2,#16,r1
000e22  f2400100          MOVW     r1,#:LOWER16: ||.data||
000e26  f2c00100          MOVT     r1,#:UPPER16: ||.data||
000e2a  f8d18024          LDR      r8,[r1,#0x24]  ; SummQ12
000e2e  4442              ADD      r2,r2,r8
000e30  624a              STR      r2,[r1,#0x24]  ; SummQ12
000e32  e000              B        |L1.3638|
                  |L1.3636|
000e34  e027              B        |L1.3718|
                  |L1.3638|
000e36  f9b0a086          LDRSH    r10,[r0,#0x86]  ; Metro
000e3a  f9b08088          LDRSH    r8,[r0,#0x88]  ; Metro
000e3e  f9be008a          LDRSH    r0,[lr,#0x8a]  ; Metro
000e42  fb87b000          SMULL    r11,r0,r7,r0
000e46  fbc3b08a          SMLALBB  r11,r0,r3,r10
000e4a  fbccb088          SMLALBB  r11,r0,r12,r8
000e4e  ea4f3c1b          LSR      r12,r11,#12
000e52  ea4c5000          ORR      r0,r12,r0,LSL #20
000e56  f2455c56          MOV      r12,#0x5556
000e5a  f2c55c55          MOVT     r12,#0x5555
000e5e  fb8cc000          SMULL    r12,r0,r12,r0
000e62  eba070e0          SUB      r0,r0,r0,ASR #31
000e66  f8d1c028          LDR      r12,[r1,#0x28]  ; SummQ34
000e6a  f300000f          SSAT     r0,#16,r0
000e6e  4460              ADD      r0,r0,r12
000e70  6288              STR      r0,[r1,#0x28]  ; SummQ34
000e72  f8d1c02c          LDR      r12,[r1,#0x2c]  ; QCount
000e76  f10c0c01          ADD      r12,r12,#1
000e7a  f8c1c02c          STR      r12,[r1,#0x2c]  ; QCount
000e7e  f5bc7fa0          CMP      r12,#0x140
000e82  d117              BNE      |L1.3764|
000e84  e008              B        |L1.3736|
                  |L1.3718|
000e86  f8a4080e          STRH     r0,[r4,#0x80e]
000e8a  f8a4080c          STRH     r0,[r4,#0x80c]
000e8e  f8a40812          STRH     r0,[r4,#0x812]
000e92  f8a40810          STRH     r0,[r4,#0x810]
000e96  e7a3              B        |L1.3552|
                  |L1.3736|
000e98  f44f7ca0          MOV      r12,#0x140
000e9c  fb92f2fc          SDIV     r2,r2,r12
000ea0  fb90f0fc          SDIV     r0,r0,r12
000ea4  f8ae20f8          STRH     r2,[lr,#0xf8]
000ea8  f8ae00fa          STRH     r0,[lr,#0xfa]
000eac  2000              MOVS     r0,#0
000eae  6288              STR      r0,[r1,#0x28]  ; SummQ34
000eb0  6248              STR      r0,[r1,#0x24]  ; SummQ12
000eb2  62c8              STR      r0,[r1,#0x2c]  ; QCount
                  |L1.3764|
000eb4  f8be136a          LDRH     r1,[lr,#0x36a]  ; Metro
000eb8  f9be037a          LDRSH    r0,[lr,#0x37a]  ; Metro
000ebc  fb17f101          SMULBB   r1,r7,r1
000ec0  fb031010          MLS      r0,r3,r0,r1
000ec4  f64342d4          MOV      r2,#0x3cd4
000ec8  f2c00209          MOVT     r2,#9
000ecc  fb801002          SMULL    r1,r0,r0,r2
000ed0  f300030f          SSAT     r3,#16,r0
000ed4  9806              LDR      r0,[sp,#0x18]
000ed6  f8becea6          LDRH     r12,[lr,#0xea6]  ; Metro
000eda  6801              LDR      r1,[r0,#0]
000edc  eba34321          SUB      r3,r3,r1,ASR #16
000ee0  fb03110c          MLA      r1,r3,r12,r1
000ee4  6001              STR      r1,[r0,#0]
000ee6  1408              ASRS     r0,r1,#16
000ee8  f8ae003e          STRH     r0,[lr,#0x3e]
000eec  f9be136a          LDRSH    r1,[lr,#0x36a]  ; Metro
000ef0  f9be037a          LDRSH    r0,[lr,#0x37a]  ; Metro
000ef4  f9bec016          LDRSH    r12,[lr,#0x16]  ; Metro
000ef8  eb010740          ADD      r7,r1,r0,LSL #1
000efc  eb000041          ADD      r0,r0,r1,LSL #1
000f00  fb8c0100          SMULL    r0,r1,r12,r0
000f04  f9be3014          LDRSH    r3,[lr,#0x14]  ; Metro
000f08  fbc30107          SMLAL    r0,r1,r3,r7
000f0c  0b00              LSRS     r0,r0,#12
000f0e  f2455356          MOV      r3,#0x5556
000f12  ea405001          ORR      r0,r0,r1,LSL #20
000f16  f2c55355          MOVT     r3,#0x5555
000f1a  fb831000          SMULL    r1,r0,r3,r0
000f1e  eba070e0          SUB      r0,r0,r0,ASR #31
000f22  f3000c0f          SSAT     r12,#16,r0
000f26  9805              LDR      r0,[sp,#0x14]
000f28  f8be7eaa          LDRH     r7,[lr,#0xeaa]  ; Metro
000f2c  6801              LDR      r1,[r0,#0]
000f2e  ebac4c21          SUB      r12,r12,r1,ASR #16
000f32  fb0c1107          MLA      r1,r12,r7,r1
000f36  6001              STR      r1,[r0,#0]
000f38  1408              ASRS     r0,r1,#16
000f3a  f8ae0046          STRH     r0,[lr,#0x46]
000f3e  f8be7014          LDRH     r7,[lr,#0x14]  ; Metro
000f42  f9be0016          LDRSH    r0,[lr,#0x16]  ; Metro
000f46  f8bec368          LDRH     r12,[lr,#0x368]  ; Metro
000f4a  f9be1378          LDRSH    r1,[lr,#0x378]  ; Metro
000f4e  fb17fc0c          SMULBB   r12,r7,r12
000f52  fb00c011          MLS      r0,r0,r1,r12
000f56  fb801002          SMULL    r1,r0,r0,r2
000f5a  f3000c0f          SSAT     r12,#16,r0
000f5e  9804              LDR      r0,[sp,#0x10]
000f60  f8be7ea8          LDRH     r7,[lr,#0xea8]  ; Metro
000f64  6801              LDR      r1,[r0,#0]
000f66  ebac4c21          SUB      r12,r12,r1,ASR #16
000f6a  fb0c1107          MLA      r1,r12,r7,r1
000f6e  6001              STR      r1,[r0,#0]
000f70  1408              ASRS     r0,r1,#16
000f72  f8ae0040          STRH     r0,[lr,#0x40]
000f76  f9be1368          LDRSH    r1,[lr,#0x368]  ; Metro
000f7a  f9be0378          LDRSH    r0,[lr,#0x378]  ; Metro
000f7e  f9be7016          LDRSH    r7,[lr,#0x16]  ; Metro
000f82  eb010840          ADD      r8,r1,r0,LSL #1
000f86  eb000041          ADD      r0,r0,r1,LSL #1
000f8a  fb870100          SMULL    r0,r1,r7,r0
000f8e  f9bec014          LDRSH    r12,[lr,#0x14]  ; Metro
000f92  f8be7eac          LDRH     r7,[lr,#0xeac]  ; Metro
000f96  fbcc0108          SMLAL    r0,r1,r12,r8
000f9a  0b00              LSRS     r0,r0,#12
000f9c  ea405001          ORR      r0,r0,r1,LSL #20
000fa0  fb831000          SMULL    r1,r0,r3,r0
000fa4  eba070e0          SUB      r0,r0,r0,ASR #31
000fa8  f3000c0f          SSAT     r12,#16,r0
000fac  9803              LDR      r0,[sp,#0xc]
000fae  6801              LDR      r1,[r0,#0]
000fb0  ebac4c21          SUB      r12,r12,r1,ASR #16
000fb4  fb0c1107          MLA      r1,r12,r7,r1
000fb8  6001              STR      r1,[r0,#0]
000fba  1408              ASRS     r0,r1,#16
000fbc  f8ae0048          STRH     r0,[lr,#0x48]
000fc0  f8be7014          LDRH     r7,[lr,#0x14]  ; Metro
000fc4  f9bec016          LDRSH    r12,[lr,#0x16]  ; Metro
000fc8  f8be136e          LDRH     r1,[lr,#0x36e]  ; Metro
000fcc  f9be037e          LDRSH    r0,[lr,#0x37e]  ; Metro
000fd0  fb17f101          SMULBB   r1,r7,r1
000fd4  fb0c1010          MLS      r0,r12,r0,r1
000fd8  fb801002          SMULL    r1,r0,r0,r2
000fdc  f3000c0f          SSAT     r12,#16,r0
000fe0  9802              LDR      r0,[sp,#8]
000fe2  f8be7ea8          LDRH     r7,[lr,#0xea8]  ; Metro
000fe6  6801              LDR      r1,[r0,#0]
000fe8  ebac4c21          SUB      r12,r12,r1,ASR #16
000fec  fb0c1107          MLA      r1,r12,r7,r1
000ff0  6001              STR      r1,[r0,#0]
000ff2  1408              ASRS     r0,r1,#16
000ff4  f8ae0042          STRH     r0,[lr,#0x42]
000ff8  f9be136e          LDRSH    r1,[lr,#0x36e]  ; Metro
000ffc  f9be037e          LDRSH    r0,[lr,#0x37e]  ; Metro
001000  f9be7016          LDRSH    r7,[lr,#0x16]  ; Metro
001004  eb010840          ADD      r8,r1,r0,LSL #1
001008  eb000041          ADD      r0,r0,r1,LSL #1
00100c  fb870100          SMULL    r0,r1,r7,r0
001010  f9bec014          LDRSH    r12,[lr,#0x14]  ; Metro
001014  f8be7eac          LDRH     r7,[lr,#0xeac]  ; Metro
001018  fbcc0108          SMLAL    r0,r1,r12,r8
00101c  0b00              LSRS     r0,r0,#12
00101e  ea405001          ORR      r0,r0,r1,LSL #20
001022  fb831000          SMULL    r1,r0,r3,r0
001026  eba070e0          SUB      r0,r0,r0,ASR #31
00102a  f3000c0f          SSAT     r12,#16,r0
00102e  9801              LDR      r0,[sp,#4]
001030  6801              LDR      r1,[r0,#0]
001032  ebac4c21          SUB      r12,r12,r1,ASR #16
001036  fb0c1107          MLA      r1,r12,r7,r1
00103a  6001              STR      r1,[r0,#0]
00103c  1408              ASRS     r0,r1,#16
00103e  f8ae004a          STRH     r0,[lr,#0x4a]
001042  f8be7014          LDRH     r7,[lr,#0x14]  ; Metro
001046  f9bec016          LDRSH    r12,[lr,#0x16]  ; Metro
00104a  f8be136c          LDRH     r1,[lr,#0x36c]  ; Metro
00104e  f9be037c          LDRSH    r0,[lr,#0x37c]  ; Metro
001052  fb17f101          SMULBB   r1,r7,r1
001056  fb0c1010          MLS      r0,r12,r0,r1
00105a  fb801002          SMULL    r1,r0,r0,r2
00105e  f300020f          SSAT     r2,#16,r0
001062  f50e500e          ADD      r0,lr,#0x2380
001066  f8becea8          LDRH     r12,[lr,#0xea8]  ; Metro
00106a  6801              LDR      r1,[r0,#0]
00106c  eba24221          SUB      r2,r2,r1,ASR #16
001070  fb02110c          MLA      r1,r2,r12,r1
001074  6001              STR      r1,[r0,#0]
001076  1408              ASRS     r0,r1,#16
001078  f8ae0044          STRH     r0,[lr,#0x44]
00107c  f9be136c          LDRSH    r1,[lr,#0x36c]  ; Metro
001080  f9be037c          LDRSH    r0,[lr,#0x37c]  ; Metro
001084  f9bec016          LDRSH    r12,[lr,#0x16]  ; Metro
001088  eb010740          ADD      r7,r1,r0,LSL #1
00108c  eb000041          ADD      r0,r0,r1,LSL #1
001090  fb8c0100          SMULL    r0,r1,r12,r0
001094  f9be2014          LDRSH    r2,[lr,#0x14]  ; Metro
001098  fbc20107          SMLAL    r0,r1,r2,r7
00109c  0b00              LSRS     r0,r0,#12
00109e  ea405001          ORR      r0,r0,r1,LSL #20
0010a2  fb831000          SMULL    r1,r0,r3,r0
0010a6  eba070e0          SUB      r0,r0,r0,ASR #31
0010aa  f300020f          SSAT     r2,#16,r0
0010ae  9800              LDR      r0,[sp,#0]
0010b0  f8be3eac          LDRH     r3,[lr,#0xeac]  ; Metro
0010b4  6801              LDR      r1,[r0,#0]
0010b6  eba24221          SUB      r2,r2,r1,ASR #16
0010ba  fb021103          MLA      r1,r2,r3,r1
0010be  6001              STR      r1,[r0,#0]
0010c0  1408              ASRS     r0,r1,#16
0010c2  f8ae004c          STRH     r0,[lr,#0x4c]
;;;1575   
;;;1576   		CalcSensUdc(i);														/* Расчет усредненного Udc на периоде ШИМ														*/
;;;1577   		CalcSensU(i);															/* Расчет напряжения																								*/
;;;1578   		CalcSensI(i);															/* Расчет токов																											*/
;;;1579   
;;;1580   		/* Расчитываем величины -----	*/
;;;1581   		CalcSensPQ();
;;;1582   		
;;;1583   		/* Встроенный осциллограф ---	*/
;;;1584   		Oscil();
0010c6  f7fffffe          BL       Oscil
0010ca  1c6d              ADDS     r5,r5,#1
0010cc  2d08              CMP      r5,#8                 ;1571
0010ce  f6ffac36          BLT      |L1.2366|
0010d2  f2400200          MOVW     r2,#:LOWER16: ||.data||;1571
0010d6  f2c00200          MOVT     r2,#:UPPER16: ||.data||;1571
0010da  f8d433f8          LDR      r3,[r4,#0x3f8]        ;1571  ; Metro
0010de  f9b33000          LDRSH    r3,[r3,#0]            ;1571
0010e2  e9d20114          LDRD     r0,r1,[r2,#0x50]      ;1571
0010e6  fbc30183          SMLALBB  r0,r1,r3,r3           ;1571
0010ea  e9c20114          STRD     r0,r1,[r2,#0x50]      ;1571
0010ee  6b13              LDR      r3,[r2,#0x30]         ;1571  ; Counter
0010f0  1e5b              SUBS     r3,r3,#1              ;1571
0010f2  6313              STR      r3,[r2,#0x30]         ;1571  ; Counter
0010f4  bf18              IT       NE                    ;1571
0010f6  6b50              LDRNE    r0,[r2,#0x34]         ;1571  ; Result
0010f8  d117              BNE      |L1.4394|
0010fa  0980              LSRS     r0,r0,#6              ;1571
0010fc  ea406081          ORR      r0,r0,r1,LSL #26      ;1571
001100  ee000a10          VMOV     s0,r0                 ;1571
001104  eeb80ac0          VCVT.F32.S32 s0,s0                 ;1571
001108  eddf0afb          VLDR     s1,|L1.5368|
00110c  2150              MOVS     r1,#0x50              ;1571
00110e  ee600a20          VMUL.F32 s1,s0,s1              ;1571
001112  eeb10ae0          VSQRT.F32 s0,s1                 ;1571
001116  eebd0ac0          VCVT.S32.F32 s0,s0                 ;1571
00111a  ee100a10          VMOV     r0,s0                 ;1571
00111e  f300000f          SSAT     r0,#16,r0             ;1571
001122  e9c2100c          STRD     r1,r0,[r2,#0x30]      ;1571
001126  e9c23314          STRD     r3,r3,[r2,#0x50]      ;1571
                  |L1.4394|
00112a  f04f0800          MOV      r8,#0                 ;1571
00112e  f2c42841          MOVT     r8,#0x4241            ;1571
001132  2700              MOVS     r7,#0                 ;1571
001134  f8c403fc          STR      r0,[r4,#0x3fc]        ;1571  ; Metro
001138  f8c8728c          STR      r7,[r8,#0x28c]        ;1571
00113c  f8b60240          LDRH     r0,[r6,#0x240]        ;1571  ; Metro
001140  f8b61242          LDRH     r1,[r6,#0x242]        ;1571  ; Metro
001144  f24072ff          MOV      r2,#0x7ff             ;1571
001148  4308              ORRS     r0,r0,r1              ;1571
00114a  f8b61244          LDRH     r1,[r6,#0x244]        ;1571  ; Metro
00114e  4008              ANDS     r0,r0,r1              ;1571
001150  8270              STRH     r0,[r6,#0x12]         ;1571
001152  43c0              MVNS     r0,r0                 ;1571
001154  b280              UXTH     r0,r0                 ;1571
001156  0541              LSLS     r1,r0,#21             ;1571
001158  0cc9              LSRS     r1,r1,#19             ;1571
00115a  4382              BICS     r2,r2,r0              ;1571
00115c  ea414182          ORR      r1,r1,r2,LSL #18      ;1571
001160  f6414218          MOV      r2,#0x1c18            ;1571
001164  f2c40202          MOVT     r2,#0x4002            ;1571
001168  f8a60246          STRH     r0,[r6,#0x246]        ;1571
00116c  6011              STR      r1,[r2,#0]            ;1571
00116e  f44f52c0          MOV      r2,#0x1800            ;1571
001172  f3c021c1          UBFX     r1,r0,#11,#2          ;1571
001176  4382              BICS     r2,r2,r0              ;1571
001178  ea411142          ORR      r1,r1,r2,LSL #5       ;1571
00117c  2200              MOVS     r2,#0                 ;1571
00117e  f2c40202          MOVT     r2,#0x4002            ;1571
001182  6191              STR      r1,[r2,#0x18]         ;1571
001184  14d1              ASRS     r1,r2,#19             ;1571
001186  ea010290          AND      r2,r1,r0,LSR #2       ;1571
00118a  0089              LSLS     r1,r1,#2              ;1571
00118c  4381              BICS     r1,r1,r0              ;1571
00118e  ea423181          ORR      r1,r2,r1,LSL #14      ;1571
001192  f2414218          MOV      r2,#0x1418            ;1571
001196  f2c40202          MOVT     r2,#0x4002            ;1571
00119a  6011              STR      r1,[r2,#0]            ;1571
00119c  0b81              LSRS     r1,r0,#14             ;1571
00119e  f44f4240          MOV      r2,#0xc000            ;1571
0011a2  ea220000          BIC      r0,r2,r0              ;1571
0011a6  ea410080          ORR      r0,r1,r0,LSL #2       ;1571
0011aa  f6400118          MOV      r1,#0x818             ;1571
0011ae  f2c40102          MOVT     r1,#0x4002            ;1571
0011b2  6008              STR      r0,[r1,#0]            ;1571
;;;1585   		
;;;1586   	}
;;;1587   	
;;;1588   	Metro.RMSData = CalcRMS(Metro.CalibrData);
;;;1589   	/*Входы / выходы	-----------	*/
;;;1590   	DigInOut();
;;;1591   	CalcDigIn();
;;;1592   	
;;;1593   	/* Защиты	-------------------	*/
;;;1594   	EvPrms.AlarmWord1 |= Alarms(EvPrms.AlarmWord1);
;;;1595   	/* --------------------------	*/
;;;1596   	switch (StdPrms.Status)	{
;;;1597   		case  1:	NotReady(); break;
;;;1598   		case  2:	OffReady(); break;
;;;1599   		case  5:	Working();	break;
;;;1600   //	case  6:  StandBy();	break;
;;;1601   //	case  7:  DiodeMode();break;
;;;1602   		default:	StdPrms.Status = 1;	break;
;;;1603   	} //switch (StdPrms.Status)
;;;1604   
;;;1605   	/* Светодиоды пульта --------	*/
;;;1606   	Leds = CalcLeds();
;;;1607   	
;;;1608   	CalcStatus();
;;;1609   	
;;;1610   	/* Расчет длительностей ШИМ-а	*/
;;;1611   	CalcPWM();
;;;1612   
;;;1613   	/* Выходы	-------------------	*/
;;;1614   	CalcDigOut();
;;;1615   	
;;;1616   	/* Сохранение параметров и журнал событий	*/
;;;1617     SaveParamsProc();
;;;1618   //	/* Встроенный осциллограф ---	*/
;;;1619   //	Oscil();
;;;1620   	
;;;1621   	LedToggle(); 
;;;1622   
;;;1623   }
0011b4  2009              MOVS     r0,#9
                  |L1.4534|
0011b6  bf00              NOP      
0011b8  1e40              SUBS     r0,r0,#1
0011ba  d2fc              BCS      |L1.4534|
0011bc  f44f5000          MOV      r0,#0x2000
0011c0  f2c40002          MOVT     r0,#0x4002
0011c4  6900              LDR      r0,[r0,#0x10]
0011c6  f2414110          MOV      r1,#0x1410
0011ca  f2c40102          MOVT     r1,#0x4002
0011ce  f3c0000b          UBFX     r0,r0,#0,#12
0011d2  6809              LDR      r1,[r1,#0]
0011d4  2501              MOVS     r5,#1
0011d6  f4017170          AND      r1,r1,#0x3c0
0011da  ea401081          ORR      r0,r0,r1,LSL #6
0011de  f8a60220          STRH     r0,[r6,#0x220]
0011e2  f8c8528c          STR      r5,[r8,#0x28c]
0011e6  f8b61222          LDRH     r1,[r6,#0x222]  ; Metro
0011ea  2313              MOVS     r3,#0x13
0011ec  4308              ORRS     r0,r0,r1
0011ee  f8b61224          LDRH     r1,[r6,#0x224]  ; Metro
0011f2  f5067218          ADD      r2,r6,#0x260
0011f6  4008              ANDS     r0,r0,r1
0011f8  f8b61226          LDRH     r1,[r6,#0x226]  ; Metro
0011fc  ea414000          ORR      r0,r1,r0,LSL #16
001200  f5067128          ADD      r1,r6,#0x2a0
001204  f7fffffe          BL       FiltDigIn
001208  b280              UXTH     r0,r0
00120a  f8a60226          STRH     r0,[r6,#0x226]
00120e  8230              STRH     r0,[r6,#0x10]
001210  f8c87288          STR      r7,[r8,#0x288]
001214  f0100101          ANDS     r1,r0,#1
001218  bf1c              ITT      NE
00121a  f9b413dc          LDRSHNE  r1,[r4,#0x3dc]  ; Metro
00121e  fa91f115          QADD16NE r1,r1,r5
001222  f8a413dc          STRH     r1,[r4,#0x3dc]
001226  f0100108          ANDS     r1,r0,#8
00122a  bf1c              ITT      NE
00122c  f9b413d0          LDRSHNE  r1,[r4,#0x3d0]  ; Metro
001230  fa91f115          QADD16NE r1,r1,r5
001234  f8a413d0          STRH     r1,[r4,#0x3d0]
001238  f0100110          ANDS     r1,r0,#0x10
00123c  bf1c              ITT      NE
00123e  f9b413d2          LDRSHNE  r1,[r4,#0x3d2]  ; Metro
001242  fa91f115          QADD16NE r1,r1,r5
001246  f8a413d2          STRH     r1,[r4,#0x3d2]
00124a  f0100102          ANDS     r1,r0,#2
00124e  bf1c              ITT      NE
001250  f9b413d4          LDRSHNE  r1,[r4,#0x3d4]  ; Metro
001254  fa91f115          QADD16NE r1,r1,r5
001258  f8a413d4          STRH     r1,[r4,#0x3d4]
00125c  f0100104          ANDS     r1,r0,#4
001260  bf1c              ITT      NE
001262  f9b413d6          LDRSHNE  r1,[r4,#0x3d6]  ; Metro
001266  fa91f115          QADD16NE r1,r1,r5
00126a  f8a413d6          STRH     r1,[r4,#0x3d6]
00126e  f4105180          ANDS     r1,r0,#0x1000
001272  bf1c              ITT      NE
001274  f8d413e8          LDRNE    r1,[r4,#0x3e8]  ; Metro
001278  fa85f181          QADDNE   r1,r1,r5
00127c  f8c413e8          STR      r1,[r4,#0x3e8]  ; Metro
001280  f4106080          ANDS     r0,r0,#0x400
001284  bf1c              ITT      NE
001286  f9b403de          LDRSHNE  r0,[r4,#0x3de]  ; Metro
00128a  fa90f015          QADD16NE r0,r0,r5
00128e  f8a403de          STRH     r0,[r4,#0x3de]
001292  6ab0              LDR      r0,[r6,#0x28]         ;1594  ; Metro
001294  f7fffffe          BL       Alarms
001298  6ab1              LDR      r1,[r6,#0x28]         ;1594  ; Metro
00129a  f04f0800          MOV      r8,#0                 ;1594
00129e  4308              ORRS     r0,r0,r1              ;1594
0012a0  62b0              STR      r0,[r6,#0x28]         ;1596  ; Metro
0012a2  f9b61218          LDRSH    r1,[r6,#0x218]        ;1596  ; Metro
0012a6  f44f4900          MOV      r9,#0x8000            ;1596
0012aa  f2c42820          MOVT     r8,#0x4220            ;1596
0012ae  f2c42920          MOVT     r9,#0x4220            ;1596
0012b2  f44f6afa          MOV      r10,#0x7d0            ;1596
0012b6  2901              CMP      r1,#1                 ;1596
0012b8  d005              BEQ      |L1.4806|
0012ba  2902              CMP      r1,#2                 ;1596
0012bc  d07d              BEQ      |L1.5050|
0012be  2905              CMP      r1,#5                 ;1596
0012c0  f0008144          BEQ.W    |L1.5452|
0012c4  e0aa              B        |L1.5148|
                  |L1.4806|
0012c6  f8c47344          STR      r7,[r4,#0x344]        ;1596  ; Metro
0012ca  f8c8721c          STR      r7,[r8,#0x21c]        ;1596
0012ce  f8c47348          STR      r7,[r4,#0x348]        ;1596  ; Metro
0012d2  f8c9721c          STR      r7,[r9,#0x21c]        ;1596
0012d6  f8b413d6          LDRH     r1,[r4,#0x3d6]        ;1596  ; Metro
0012da  f04f0802          MOV      r8,#2                 ;1596
0012de  2901              CMP      r1,#1                 ;1596
0012e0  d003              BEQ      |L1.4842|
0012e2  f8b413da          LDRH     r1,[r4,#0x3da]        ;1596  ; Metro
0012e6  b179              CBZ      r1,|L1.4872|
0012e8  e077              B        |L1.5082|
                  |L1.4842|
0012ea  f8b403da          LDRH     r0,[r4,#0x3da]        ;1596  ; Metro
0012ee  2800              CMP      r0,#0                 ;1596
0012f0  d173              BNE      |L1.5082|
0012f2  f8a4a3da          STRH     r10,[r4,#0x3da]       ;1596
0012f6  f8a473d8          STRH     r7,[r4,#0x3d8]        ;1596
0012fa  f8a473f0          STRH     r7,[r4,#0x3f0]        ;1596
0012fe  f8a473f2          STRH     r7,[r4,#0x3f2]        ;1596
001302  f8c473ec          STR      r7,[r4,#0x3ec]        ;1596  ; Metro
001306  e068              B        |L1.5082|
                  |L1.4872|
001308  f8b413d4          LDRH     r1,[r4,#0x3d4]        ;1596  ; Metro
00130c  2901              CMP      r1,#1                 ;1596
00130e  d108              BNE      |L1.4898|
001310  f9b61030          LDRSH    r1,[r6,#0x30]         ;1596  ; Metro
001314  f9b62ee2          LDRSH    r2,[r6,#0xee2]        ;1596  ; Metro
001318  4291              CMP      r1,r2                 ;1596
00131a  da02              BGE      |L1.4898|
00131c  f8d413e8          LDR      r1,[r4,#0x3e8]        ;1596  ; Metro
001320  b1a9              CBZ      r1,|L1.4942|
                  |L1.4898|
001322  f8d413ec          LDR      r1,[r4,#0x3ec]        ;1596  ; Metro
001326  b319              CBZ      r1,|L1.4976|
                  |L1.4904|
001328  f9b63032          LDRSH    r3,[r6,#0x32]         ;1596  ; Metro
00132c  f9b61ee0          LDRSH    r1,[r6,#0xee0]        ;1596  ; Metro
001330  428b              CMP      r3,r1                 ;1596
001332  bfc4              ITT      GT                    ;1596
001334  f9b62034          LDRSHGT  r2,[r6,#0x34]         ;1596  ; Metro
001338  428a              CMPGT    r2,r1                 ;1596
00133a  dd19              BLE      |L1.4976|
00133c  f8b413d8          LDRH     r1,[r4,#0x3d8]        ;1596  ; Metro
001340  2900              CMP      r1,#0                 ;1596
001342  bf04              ITT      EQ                    ;1596
001344  f8c473ec          STREQ    r7,[r4,#0x3ec]        ;1596  ; Metro
001348  f8a453d8          STRHEQ   r5,[r4,#0x3d8]        ;1596
00134c  e010              B        |L1.4976|
                  |L1.4942|
00134e  f8d413ec          LDR      r1,[r4,#0x3ec]        ;1596  ; Metro
001352  2900              CMP      r1,#0                 ;1596
001354  d1e8              BNE      |L1.4904|
001356  2800              CMP      r0,#0                 ;1596
001358  bf04              ITT      EQ                    ;1596
00135a  f8b413d8          LDRHEQ   r1,[r4,#0x3d8]        ;1596  ; Metro
00135e  2900              CMPEQ    r1,#0                 ;1596
001360  d106              BNE      |L1.4976|
001362  f8b413de          LDRH     r1,[r4,#0x3de]        ;1596  ; Metro
001366  2900              CMP      r1,#0                 ;1596
001368  bf08              IT       EQ                    ;1596
00136a  f8c453ec          STREQ    r5,[r4,#0x3ec]        ;1596  ; Metro
00136e  d0db              BEQ      |L1.4904|
                  |L1.4976|
001370  f8b413d8          LDRH     r1,[r4,#0x3d8]        ;1596  ; Metro
001374  2901              CMP      r1,#1                 ;1596
001376  bf04              ITT      EQ                    ;1596
001378  f8d413e8          LDREQ    r1,[r4,#0x3e8]        ;1596  ; Metro
00137c  2900              CMPEQ    r1,#0                 ;1596
00137e  d108              BNE      |L1.5010|
001380  f8d413ec          LDR      r1,[r4,#0x3ec]        ;1596  ; Metro
001384  2900              CMP      r1,#0                 ;1596
001386  bf02              ITTT     EQ                    ;1596
001388  2800              CMPEQ    r0,#0                 ;1596
00138a  f8a453f2          STRHEQ   r5,[r4,#0x3f2]        ;1596
00138e  f8a483d8          STRHEQ   r8,[r4,#0x3d8]        ;1596
                  |L1.5010|
001392  f8b413d8          LDRH     r1,[r4,#0x3d8]        ;1596  ; Metro
001396  2902              CMP      r1,#2                 ;1596
001398  d114              BNE      |L1.5060|
00139a  f9b413f2          LDRSH    r1,[r4,#0x3f2]        ;1596  ; Metro
00139e  f5b16ffa          CMP      r1,#0x7d0             ;1596
0013a2  dd0f              BLE      |L1.5060|
0013a4  f9b61030          LDRSH    r1,[r6,#0x30]         ;1596  ; Metro
0013a8  f9b62ee2          LDRSH    r2,[r6,#0xee2]        ;1596  ; Metro
0013ac  428a              CMP      r2,r1                 ;1596
0013ae  bfd8              IT       LE                    ;1596
0013b0  2800              CMPLE    r0,#0                 ;1596
0013b2  d107              BNE      |L1.5060|
0013b4  f8a453f0          STRH     r5,[r4,#0x3f0]        ;1596
0013b8  e000              B        |L1.5052|
                  |L1.5050|
0013ba  e02a              B        |L1.5138|
                  |L1.5052|
0013bc  f04f0003          MOV      r0,#3                 ;1596
0013c0  f8a403d8          STRH     r0,[r4,#0x3d8]        ;1596
                  |L1.5060|
0013c4  f9b403f0          LDRSH    r0,[r4,#0x3f0]        ;1596  ; Metro
0013c8  f5b06ffa          CMP      r0,#0x7d0             ;1596
0013cc  dd05              BLE      |L1.5082|
0013ce  f8a473d8          STRH     r7,[r4,#0x3d8]        ;1596
0013d2  f8a473f2          STRH     r7,[r4,#0x3f2]        ;1596
0013d6  f8a473f0          STRH     r7,[r4,#0x3f0]        ;1596
                  |L1.5082|
0013da  f8a47302          STRH     r7,[r4,#0x302]        ;1596
0013de  f8b40300          LDRH     r0,[r4,#0x300]        ;1596  ; Metro
0013e2  b918              CBNZ     r0,|L1.5100|
0013e4  f8b403d2          LDRH     r0,[r4,#0x3d2]        ;1596  ; Metro
0013e8  2801              CMP      r0,#1                 ;1596
0013ea  d10a              BNE      |L1.5122|
                  |L1.5100|
0013ec  62b7              STR      r7,[r6,#0x28]         ;1596  ; Metro
0013ee  f8a47300          STRH     r7,[r4,#0x300]        ;1596
0013f2  f8a670e6          STRH     r7,[r6,#0xe6]         ;1596
0013f6  f8a670a8          STRH     r7,[r6,#0xa8]         ;1596
0013fa  f8a6709a          STRH     r7,[r6,#0x9a]         ;1596
0013fe  f8a6708c          STRH     r7,[r6,#0x8c]         ;1596
                  |L1.5122|
001402  f7fffffe          BL       CheckReady
001406  6230              STR      r0,[r6,#0x20]         ;1596  ; Metro
001408  2800              CMP      r0,#0                 ;1596
00140a  bf08              IT       EQ                    ;1596
00140c  f8a68218          STRHEQ   r8,[r6,#0x218]        ;1596
001410  e09e              B        |L1.5456|
                  |L1.5138|
001412  f7fffffe          BL       CheckReady
001416  4632              MOV      r2,r6                 ;1596
001418  6230              STR      r0,[r6,#0x20]         ;1596  ; Metro
00141a  b110              CBZ      r0,|L1.5154|
                  |L1.5148|
00141c  f8a65218          STRH     r5,[r6,#0x218]        ;1596
001420  e096              B        |L1.5456|
                  |L1.5154|
001422  f9b23032          LDRSH    r3,[r2,#0x32]         ;1596  ; Metro
001426  f24b5005          MOV      r0,#0xb505            ;1596
00142a  4358              MULS     r0,r3,r0              ;1596
00142c  1401              ASRS     r1,r0,#16             ;1596
00142e  f9b2c030          LDRSH    r12,[r2,#0x30]        ;1596  ; Metro
001432  f8d4034c          LDR      r0,[r4,#0x34c]        ;1596  ; Metro
001436  fb00fc0c          MUL      r12,r0,r12            ;1596
00143a  fb9cf1f1          SDIV     r1,r12,r1             ;1596
00143e  4288              CMP      r0,r1                 ;1596
001440  bfb8              IT       LT                    ;1596
001442  4601              MOVLT    r1,r0                 ;1596
001444  ebb11f20          CMP      r1,r0,ASR #4          ;1596
001448  bfb8              IT       LT                    ;1596
00144a  1101              ASRLT    r1,r0,#4              ;1596
00144c  f8c4131c          STR      r1,[r4,#0x31c]        ;1596  ; Metro
001450  03c9              LSLS     r1,r1,#15             ;1596
001452  f8c4139c          STR      r1,[r4,#0x39c]        ;1596  ; Metro
001456  f9b2b034          LDRSH    r11,[r2,#0x34]        ;1596  ; Metro
00145a  f24b5105          MOV      r1,#0xb505            ;1596
00145e  fb0bf101          MUL      r1,r11,r1             ;1596
001462  1409              ASRS     r1,r1,#16             ;1596
001464  fb9cf1f1          SDIV     r1,r12,r1             ;1596
001468  4288              CMP      r0,r1                 ;1596
00146a  bfb8              IT       LT                    ;1596
00146c  4601              MOVLT    r1,r0                 ;1596
00146e  ebb11f20          CMP      r1,r0,ASR #4          ;1596
001472  bfb8              IT       LT                    ;1596
001474  1101              ASRLT    r1,r0,#4              ;1596
001476  03c8              LSLS     r0,r1,#15             ;1596
001478  f8c41334          STR      r1,[r4,#0x334]        ;1596  ; Metro
00147c  f8c403a0          STR      r0,[r4,#0x3a0]        ;1596  ; Metro
001480  0418              LSLS     r0,r3,#16             ;1596
001482  f8c40404          STR      r0,[r4,#0x404]        ;1596  ; Metro
001486  ea4f400b          LSL      r0,r11,#16            ;1596
00148a  f8c40408          STR      r0,[r4,#0x408]        ;1596  ; Metro
00148e  f9b20ef6          LDRSH    r0,[r2,#0xef6]        ;1596  ; Metro
001492  f8c40330          STR      r0,[r4,#0x330]        ;1596  ; Metro
001496  f9b21efe          LDRSH    r1,[r2,#0xefe]        ;1596  ; Metro
00149a  2902              CMP      r1,#2                 ;1596
00149c  d007              BEQ      |L1.5294|
00149e  2904              CMP      r1,#4                 ;1596
0014a0  4601              MOV      r1,r0                 ;1596
0014a2  bf08              IT       EQ                    ;1596
0014a4  f2a11199          SUBEQ    r1,r1,#0x199          ;1596
0014a8  f8c41318          STR      r1,[r4,#0x318]        ;1596  ; Metro
0014ac  e003              B        |L1.5302|
                  |L1.5294|
0014ae  f2a03133          SUB      r1,r0,#0x333          ;1596
0014b2  f8c41318          STR      r1,[r4,#0x318]        ;1596  ; Metro
                  |L1.5302|
0014b6  f8b41318          LDRH     r1,[r4,#0x318]        ;1596  ; Metro
0014ba  0409              LSLS     r1,r1,#16             ;1596
0014bc  0400              LSLS     r0,r0,#16             ;1596
0014be  e9c410e5          STRD     r1,r0,[r4,#0x394]     ;1596
0014c2  f8b40302          LDRH     r0,[r4,#0x302]        ;1596  ; Metro
0014c6  b918              CBNZ     r0,|L1.5328|
0014c8  f8b403d0          LDRH     r0,[r4,#0x3d0]        ;1596  ; Metro
0014cc  2801              CMP      r0,#1                 ;1596
0014ce  d105              BNE      |L1.5340|
                  |L1.5328|
0014d0  f9b403d2          LDRSH    r0,[r4,#0x3d2]        ;1596  ; Metro
0014d4  f9b41300          LDRSH    r1,[r4,#0x300]        ;1596  ; Metro
0014d8  4308              ORRS     r0,r0,r1              ;1596
0014da  d00f              BEQ      |L1.5372|
                  |L1.5340|
0014dc  f8a47302          STRH     r7,[r4,#0x302]        ;1596
0014e0  f8a47300          STRH     r7,[r4,#0x300]        ;1596
0014e4  f8b403d6          LDRH     r0,[r4,#0x3d6]        ;1596  ; Metro
0014e8  2801              CMP      r0,#1                 ;1596
0014ea  bf04              ITT      EQ                    ;1596
0014ec  f8b403da          LDRHEQ   r0,[r4,#0x3da]        ;1596  ; Metro
0014f0  2800              CMPEQ    r0,#0                 ;1596
0014f2  d12d              BNE      |L1.5456|
0014f4  e01f              B        |L1.5430|
0014f6  0000              DCW      0x0000
                  |L1.5368|
0014f8  3f4ccccd          DCFS     0x3f4ccccd ; 0.80000001192092896
                  |L1.5372|
0014fc  f04f0007          MOV      r0,#7                 ;1596
001500  f8a4030a          STRH     r0,[r4,#0x30a]        ;1596
001504  f8a4030c          STRH     r0,[r4,#0x30c]        ;1596
001508  f04f0305          MOV      r3,#5                 ;1596
00150c  f8a23218          STRH     r3,[r2,#0x218]        ;1596
001510  f04f0101          MOV      r1,#1                 ;1596
001514  f8c87200          STR      r7,[r8,#0x200]        ;1596
001518  f8c81180          STR      r1,[r8,#0x180]        ;1596
00151c  f8c97200          STR      r7,[r9,#0x200]        ;1596
001520  f8c91180          STR      r1,[r9,#0x180]        ;1596
001524  f8a47302          STRH     r7,[r4,#0x302]        ;1596
001528  f8a47300          STRH     r7,[r4,#0x300]        ;1596
00152c  8125              STRH     r5,[r4,#8]            ;1596
00152e  f2401053          MOV      r0,#0x153             ;1596
001532  6030              STR      r0,[r6,#0]            ;1596  ; Metro
001534  e00c              B        |L1.5456|
                  |L1.5430|
001536  f8a4a3da          STRH     r10,[r4,#0x3da]       ;1596
00153a  f8a473d8          STRH     r7,[r4,#0x3d8]        ;1596
00153e  f8a473f0          STRH     r7,[r4,#0x3f0]        ;1596
001542  f8a473f2          STRH     r7,[r4,#0x3f2]        ;1596
001546  f8c473ec          STR      r7,[r4,#0x3ec]        ;1596  ; Metro
00154a  e001              B        |L1.5456|
                  |L1.5452|
00154c  f7fffffe          BL       Working
                  |L1.5456|
001550  6ab2              LDR      r2,[r6,#0x28]         ;1599  ; Metro
001552  203f              MOVS     r0,#0x3f              ;1599
001554  2a00              CMP      r2,#0                 ;1599
001556  bf18              IT       NE                    ;1599
001558  203b              MOVNE    r0,#0x3b              ;1599
00155a  f9b61218          LDRSH    r1,[r6,#0x218]        ;1599  ; Metro
00155e  2905              CMP      r1,#5                 ;1599
001560  bf1a              ITTE     NE                    ;1599
001562  2906              CMPNE    r1,#6                 ;1599
001564  2907              CMPNE    r1,#7                 ;1599
001566  f0200008          BICEQ    r0,r0,#8              ;1599
00156a  f8b4330e          LDRH     r3,[r4,#0x30e]        ;1599  ; Metro
00156e  2b00              CMP      r3,#0                 ;1599
001570  bf18              IT       NE                    ;1599
001572  f0200001          BICNE    r0,r0,#1              ;1599
001576  f2400300          MOVW     r3,#:LOWER16: Leds
00157a  f2c00300          MOVT     r3,#:UPPER16: Leds
00157e  6018              STR      r0,[r3,#0]            ;1606  ; Leds
001580  6a70              LDR      r0,[r6,#0x24]         ;1606  ; Metro
001582  2a00              CMP      r2,#0                 ;1606
001584  bf14              ITE      NE                    ;1606
001586  f0400008          ORRNE    r0,r0,#8              ;1606
00158a  f0200008          BICEQ    r0,r0,#8              ;1606
00158e  6270              STR      r0,[r6,#0x24]         ;1606  ; Metro
001590  2905              CMP      r1,#5                 ;1606
001592  bf04              ITT      EQ                    ;1606
001594  f0400002          ORREQ    r0,r0,#2              ;1606
001598  6270              STREQ    r0,[r6,#0x24]         ;1606  ; Metro
00159a  d007              BEQ      |L1.5548|
00159c  f0200002          BIC      r0,r0,#2              ;1606
0015a0  6270              STR      r0,[r6,#0x24]         ;1606  ; Metro
0015a2  2902              CMP      r1,#2                 ;1606
0015a4  bf08              IT       EQ                    ;1606
0015a6  f0400001          ORREQ    r0,r0,#1              ;1606
0015aa  d001              BEQ      |L1.5552|
                  |L1.5548|
0015ac  f0200001          BIC      r0,r0,#1              ;1606
                  |L1.5552|
0015b0  6270              STR      r0,[r6,#0x24]         ;1611  ; Metro
0015b2  f7fffffe          BL       CalcPWM
0015b6  f8d413ec          LDR      r1,[r4,#0x3ec]        ;1611  ; Metro
0015ba  2000              MOVS     r0,#0                 ;1611
0015bc  b119              CBZ      r1,|L1.5574|
0015be  fa85f181          QADD     r1,r1,r5              ;1611
0015c2  f8c413ec          STR      r1,[r4,#0x3ec]        ;1611  ; Metro
                  |L1.5574|
0015c6  f9b413f2          LDRSH    r1,[r4,#0x3f2]        ;1611  ; Metro
0015ca  2900              CMP      r1,#0                 ;1611
0015cc  bf1c              ITT      NE                    ;1611
0015ce  fa91f115          QADD16NE r1,r1,r5              ;1611
0015d2  f8a413f2          STRHNE   r1,[r4,#0x3f2]        ;1611
0015d6  f9b413f0          LDRSH    r1,[r4,#0x3f0]        ;1611  ; Metro
0015da  2900              CMP      r1,#0                 ;1611
0015dc  bf1c              ITT      NE                    ;1611
0015de  fa91f115          QADD16NE r1,r1,r5              ;1611
0015e2  f8a413f0          STRHNE   r1,[r4,#0x3f0]        ;1611
0015e6  f9b61218          LDRSH    r1,[r6,#0x218]        ;1611  ; Metro
0015ea  2902              CMP      r1,#2                 ;1611
0015ec  bf08              IT       EQ                    ;1611
0015ee  2001              MOVEQ    r0,#1                 ;1611
0015f0  d003              BEQ      |L1.5626|
0015f2  2905              CMP      r1,#5                 ;1611
0015f4  bf08              IT       EQ                    ;1611
0015f6  f0400008          ORREQ    r0,r0,#8              ;1611
                  |L1.5626|
0015fa  6ab1              LDR      r1,[r6,#0x28]         ;1611  ; Metro
0015fc  2900              CMP      r1,#0                 ;1611
0015fe  bf18              IT       NE                    ;1611
001600  f4407001          ORRNE    r0,r0,#0x204          ;1611
001604  f8d413ec          LDR      r1,[r4,#0x3ec]        ;1611  ; Metro
001608  2900              CMP      r1,#0                 ;1611
00160a  bf18              IT       NE                    ;1611
00160c  f0400080          ORRNE    r0,r0,#0x80           ;1611
001610  f8b413f2          LDRH     r1,[r4,#0x3f2]        ;1611  ; Metro
001614  2900              CMP      r1,#0                 ;1611
001616  bf18              IT       NE                    ;1611
001618  f0400040          ORRNE    r0,r0,#0x40           ;1611
00161c  f8b413f0          LDRH     r1,[r4,#0x3f0]        ;1611  ; Metro
001620  2900              CMP      r1,#0                 ;1611
001622  bf18              IT       NE                    ;1611
001624  f0400020          ORRNE    r0,r0,#0x20           ;1611
001628  f9b413da          LDRSH    r1,[r4,#0x3da]        ;1611  ; Metro
00162c  b121              CBZ      r1,|L1.5688|
00162e  1e49              SUBS     r1,r1,#1              ;1611
001630  f8a413da          STRH     r1,[r4,#0x3da]        ;1611
001634  f0400004          ORR      r0,r0,#4              ;1611
                  |L1.5688|
001638  f8a60240          STRH     r0,[r6,#0x240]        ;1611
00163c  f7fffffe          BL       SaveParamsProc
001640  2000              MOVS     r0,#0                 ;1621
001642  f2c42043          MOVT     r0,#0x4243            ;1621
001646  f8d012a0          LDR      r1,[r0,#0x2a0]        ;1621
00164a  f0810101          EOR      r1,r1,#1              ;1621
00164e  f8c012a0          STR      r1,[r0,#0x2a0]        ;1621
001652  b00f              ADD      sp,sp,#0x3c
001654  ecbd8b02          VPOP     {d8}
001658  e8bd8ff0          POP      {r4-r11,pc}
;;;1624   
                          ENDP

                  InitParams PROC
;;;1627   
;;;1628   void InitParams(int ParamsLoaded)	{
00165c  e92d0ff0          PUSH     {r4-r11}
;;;1629   int i;
;;;1630   	Metro.Mode = 1;
001660  f04f0801          MOV      r8,#1
001664  f2400200          MOVW     r2,#:LOWER16: ||.bss||+8276
001668  f2c00200          MOVT     r2,#:UPPER16: ||.bss||+8276
;;;1631   	Metro.TestAMP	= 100;
00166c  2364              MOVS     r3,#0x64
00166e  f8a2830a          STRH     r8,[r2,#0x30a]        ;1630
;;;1632   	
;;;1633   	StdPrms.DigIn1Or 	 = StdPrms.DigIn2Or 	= StdPrms.DigIn3Or   = StdPrms.DigIn4Or   = 0x0000;
001672  2400              MOVS     r4,#0
001674  f5a25100          SUB      r1,r2,#0x2000
001678  f8c23350          STR      r3,[r2,#0x350]  ; Metro
00167c  f8a1423a          STRH     r4,[r1,#0x23a]
001680  f8a14232          STRH     r4,[r1,#0x232]
001684  f8a1422a          STRH     r4,[r1,#0x22a]
001688  f8a14222          STRH     r4,[r1,#0x222]
;;;1634   	StdPrms.DigOut1Or  = StdPrms.DigOut2Or  = StdPrms.DigOut3Or  = StdPrms.DigOut4Or  = 0x0000;
00168c  f8a1425a          STRH     r4,[r1,#0x25a]
001690  f8a14252          STRH     r4,[r1,#0x252]
001694  f8a1424a          STRH     r4,[r1,#0x24a]
001698  f8a14242          STRH     r4,[r1,#0x242]
;;;1635   	
;;;1636   	StdPrms.DigIn1And  = StdPrms.DigIn2And	= StdPrms.DigIn3And  = StdPrms.DigIn4And  = 0xFFFF;
00169c  f64f75ff          MOV      r5,#0xffff
0016a0  f8a1523c          STRH     r5,[r1,#0x23c]
0016a4  f8a15234          STRH     r5,[r1,#0x234]
0016a8  f8a1522c          STRH     r5,[r1,#0x22c]
0016ac  f8a15224          STRH     r5,[r1,#0x224]
;;;1637   	StdPrms.DigOut1And = StdPrms.DigOut2And = StdPrms.DigOut3And = StdPrms.DigOut4And = 0xFFFF;
0016b0  f8a1525c          STRH     r5,[r1,#0x25c]
0016b4  f8a15254          STRH     r5,[r1,#0x254]
0016b8  f8a1524c          STRH     r5,[r1,#0x24c]
0016bc  f8a15244          STRH     r5,[r1,#0x244]
;;;1638   
;;;1639   	Metro.CalibrData = &StdPrms.ADCDataNorm[_Ia1];
0016c0  f2013c6a          ADD      r12,r1,#0x36a
;;;1640   	
;;;1641   //	for (i = 0; i < 6; i++) {Metro.T[i] = 35900;}					/* 25 °C */
;;;1642   	
;;;1643   	if (ParamsLoaded) {
0016c4  f8c2c3f8          STR      r12,[r2,#0x3f8]  ; Metro
0016c8  2800              CMP      r0,#0
0016ca  f0008171          BEQ.W    |L1.6576|
;;;1644   		for (i = 0; i < 8; i++) {
0016ce  2000              MOVS     r0,#0
;;;1645   			/* Внутренний АЦП	*/
;;;1646   			SavePrms.ADCOffs[i+16] = 0x4000;
0016d0  f44f4680          MOV      r6,#0x4000
;;;1647   			SavePrms.ADCK[i+16]    = 0xFFFF;
;;;1648   			/* Внешний АЦП		*/
;;;1649   			((unsigned int *)SavePrms.ADCOffs)[i] = 0;
;;;1650   			((unsigned int *)SavePrms.ADCK)[i]    = 0xFFFFFFFF;
0016d4  1e47              SUBS     r7,r0,#1
                  |L1.5846|
0016d6  eb010c40          ADD      r12,r1,r0,LSL #1      ;1646
0016da  f8ac6e50          STRH     r6,[r12,#0xe50]       ;1646
0016de  f8ac5e20          STRH     r5,[r12,#0xe20]       ;1647
0016e2  eb010c80          ADD      r12,r1,r0,LSL #2      ;1649
0016e6  1c40              ADDS     r0,r0,#1
0016e8  f8cc7e00          STR      r7,[r12,#0xe00]       ;1644
0016ec  f8cc4e30          STR      r4,[r12,#0xe30]       ;1644
0016f0  2808              CMP      r0,#8                 ;1644
0016f2  dbf0              BLT      |L1.5846|
;;;1651   		}
;;;1652   		
;;;1653   		SavePrms.ADCK[_Uab]  = SavePrms.ADCK[_Ubc]  = SavePrms.ADCK[_Uca]  = 13333ul * 220 / 52.3; /*R1 = 220 / Rn = 200*/
0016f4  f64d3015          MOV      r0,#0xdb15
0016f8  f8a10e24          STRH     r0,[r1,#0xe24]
0016fc  f8a10e22          STRH     r0,[r1,#0xe22]
001700  f8a10e20          STRH     r0,[r1,#0xe20]
;;;1654   		SavePrms.ADCK[_Udc1] = SavePrms.ADCK[_Udc2] = 40000ul * 220 / 200;
001704  f64a30e0          MOV      r0,#0xabe0
001708  f8a10e02          STRH     r0,[r1,#0xe02]
00170c  f8a10e00          STRH     r0,[r1,#0xe00]
;;;1655   
;;;1656   		SavePrms.ADCK[_Ia1]  = SavePrms.ADCK[_Ib1]  = SavePrms.ADCK[_Ic1] = 10 * 4000 / 5.1;			/* 100 * Ksens = 5000 / Rn = 30.1	*/
001710  f64160a3          MOV      r0,#0x1ea3
001714  f8a10e1a          STRH     r0,[r1,#0xe1a]
001718  f8a10e12          STRH     r0,[r1,#0xe12]
00171c  f8a10e0a          STRH     r0,[r1,#0xe0a]
;;;1657   		SavePrms.ADCK[_Ia2]  = SavePrms.ADCK[_Ib2]  = SavePrms.ADCK[_Ic2] = 10 * 4000 / 5.1;			/* 100 * Ksens / Rn	*/
001720  f8a10e18          STRH     r0,[r1,#0xe18]
001724  f8a10e10          STRH     r0,[r1,#0xe10]
001728  f8a10e08          STRH     r0,[r1,#0xe08]
;;;1658   		SavePrms.ADCK[_Ia3]  = SavePrms.ADCK[_Ib3]  = SavePrms.ADCK[_Ic3] = 10 * 4000 / 5.1;			/* 100 * Ksens = 5000 / Rn = 30.1	*/
00172c  f8a10e1e          STRH     r0,[r1,#0xe1e]
001730  f8a10e16          STRH     r0,[r1,#0xe16]
001734  f8a10e0e          STRH     r0,[r1,#0xe0e]
;;;1659   		SavePrms.ADCK[_Ia4]  = SavePrms.ADCK[_Ib4]  = SavePrms.ADCK[_Ic4] = 10 * 4000 / 5.1;			/* 100 * Ksens / Rn	*/
001738  f8a10e1c          STRH     r0,[r1,#0xe1c]
00173c  f8a10e14          STRH     r0,[r1,#0xe14]
001740  f8a10e0c          STRH     r0,[r1,#0xe0c]
;;;1660   		
;;;1661   		SavePrms.RefMtzI = 8000;
001744  f44f59fa          MOV      r9,#0x1f40
001748  f8a19ec0          STRH     r9,[r1,#0xec0]
;;;1662   		SavePrms.RefMtzT = 4;
00174c  2504              MOVS     r5,#4
00174e  f8a15ec2          STRH     r5,[r1,#0xec2]
;;;1663   
;;;1664   		SavePrms.RefUdcmaxU = 5000;
001752  f2413088          MOV      r0,#0x1388
001756  f8a10ec4          STRH     r0,[r1,#0xec4]
;;;1665   		SavePrms.RefUdcmaxT = 4;
00175a  f8a15ec6          STRH     r5,[r1,#0xec6]
;;;1666   
;;;1667   		SavePrms.RefUdcminU = 1000;
00175e  f44f777a          MOV      r7,#0x3e8
001762  f8a17ec8          STRH     r7,[r1,#0xec8]
;;;1668   		SavePrms.RefUdcminT = 4;
001766  f8a15eca          STRH     r5,[r1,#0xeca]
;;;1669   		
;;;1670   		SavePrms.RefUdcRazrad = 7000;		//700 B
00176a  f6413c58          MOV      r12,#0x1b58
00176e  f8a1cecc          STRH     r12,[r1,#0xecc]
;;;1671   
;;;1672   		SavePrms.RefSUminU 	= 3000;
001772  f6403cb8          MOV      r12,#0xbb8
001776  f8a1cece          STRH     r12,[r1,#0xece]
;;;1673   		SavePrms.RefSUminT 	= 4;
00177a  f8a15ed0          STRH     r5,[r1,#0xed0]
;;;1674   
;;;1675   		SavePrms.RefSUmaxU 	= 5000;
00177e  f8a10ed4          STRH     r0,[r1,#0xed4]
;;;1676   		SavePrms.RefSUmaxT 	= 4;
001782  f8a15ed6          STRH     r5,[r1,#0xed6]
;;;1677   		
;;;1678   		SavePrms.RefMtzIVD = 1000;
001786  f8a17ed8          STRH     r7,[r1,#0xed8]
;;;1679   		SavePrms.RefMtzTVD = 40000;		
00178a  f6494a40          MOV      r10,#0x9c40
00178e  f8a1aeda          STRH     r10,[r1,#0xeda]
;;;1680   		
;;;1681   		SavePrms.RefTempr		= 800;
001792  f44f7b48          MOV      r11,#0x320
001796  f8a1bed2          STRH     r11,[r1,#0xed2]
;;;1682   		
;;;1683   		SavePrms.ParamFiltSU  = ((0x3E80000 / MainCycle) / 40);
00179a  f2403c33          MOV      r12,#0x333
00179e  f8a1cea0          STRH     r12,[r1,#0xea0]
;;;1684   		SavePrms.ParamFiltI1  = ((0x3E80000 / MainCycle) / 40);
0017a2  f8a1cea2          STRH     r12,[r1,#0xea2]
;;;1685   		SavePrms.ParamFiltI2  = ((0x3E80000 / MainCycle) / 40);
0017a6  f8a1cea4          STRH     r12,[r1,#0xea4]
;;;1686   		SavePrms.ParamFiltP1  = ((0x3E80000 / MainCycle) / 5);
0017aa  f6411c99          MOV      r12,#0x1999
0017ae  f8a1cea6          STRH     r12,[r1,#0xea6]
;;;1687   		SavePrms.ParamFiltP2  = ((0x3E80000 / MainCycle) / 5);
0017b2  f8a1cea8          STRH     r12,[r1,#0xea8]
;;;1688   		SavePrms.ParamFiltQ1  = ((0x3E80000 / MainCycle) / 5);
0017b6  f8a1ceaa          STRH     r12,[r1,#0xeaa]
;;;1689   		SavePrms.ParamFiltQ2  = ((0x3E80000 / MainCycle) / 5);
0017ba  f8a1ceac          STRH     r12,[r1,#0xeac]
;;;1690   		SavePrms.ParamFiltUdc = ((0x3E80000 / MainCycle) / 5);
0017be  f8a1ceae          STRH     r12,[r1,#0xeae]
;;;1691   		
;;;1692   		SavePrms.RefUdcZarad	= 5000;			//500 В
0017c2  f8a10ee0          STRH     r0,[r1,#0xee0]
;;;1693   		SavePrms.RefSUZarad		= 3500;			//350 В
0017c6  f64050ac          MOV      r0,#0xdac
0017ca  f8a10ee2          STRH     r0,[r1,#0xee2]
;;;1694   		SavePrms.KM3Active		= 4000;			//1 сек
0017ce  00b8              LSLS     r0,r7,#2
0017d0  f8a10ee4          STRH     r0,[r1,#0xee4]
;;;1695   		SavePrms.KM3Pause			= 6*4000;		//6 сек
0017d4  f64550c0          MOV      r0,#0x5dc0
0017d8  f8a10ee6          STRH     r0,[r1,#0xee6]
;;;1696   		SavePrms.RefDeltaUdc	= 100;			//10 В
0017dc  f8a13eea          STRH     r3,[r1,#0xeea]
;;;1697   		SavePrms.RefUdcZero		= 50;				//5 В
0017e0  2032              MOVS     r0,#0x32
0017e2  f8a10ee8          STRH     r0,[r1,#0xee8]
;;;1698   		SavePrms.RefWorkKM1		= 60 * MainCycle;  //60 секунд
0017e6  f24d40c0          MOV      r0,#0xd4c0
0017ea  f2c00001          MOVT     r0,#1
;;;1699   		SavePrms.RefCountRazrad	=	100*4;	//100 мс
0017ee  f8c10eec          STR      r0,[r1,#0xeec]  ; Metro
0017f2  f44f76c8          MOV      r6,#0x190
0017f6  f8a16ef0          STRH     r6,[r1,#0xef0]
;;;1700   		
;;;1701   		SavePrms.RefUdc	= 750;//6500;						//650 В
0017fa  f24020ee          MOV      r0,#0x2ee
0017fe  f8a10ef2          STRH     r0,[r1,#0xef2]
;;;1702   		SavePrms.RefQ		= 0;
001802  f8a14ef4          STRH     r4,[r1,#0xef4]
;;;1703   		SavePrms.RefFi1	= 0xF666;								//	-13.5 град				//0xFB32;					//-6.75 град
001806  f24f6066          MOV      r0,#0xf666
00180a  f8a10ef6          STRH     r0,[r1,#0xef6]
;;;1704   		
;;;1705   		SavePrms.SoftStartUdc = 0x1000;		//25 B/c
00180e  02a8              LSLS     r0,r5,#10
;;;1706   		
;;;1707   		SavePrms.RegUdc.Kp = 0x0200;
001810  f8c10ef8          STR      r0,[r1,#0xef8]  ; Metro
001814  10c0              ASRS     r0,r0,#3
001816  f8a10eb0          STRH     r0,[r1,#0xeb0]
;;;1708   		SavePrms.RegUdc.Ti = 0x0129;
00181a  f2401029          MOV      r0,#0x129
00181e  f8a10eb2          STRH     r0,[r1,#0xeb2]
;;;1709   		SavePrms.RegQ.Kp   = 0x0500;
001822  f44f60a0          MOV      r0,#0x500
001826  f8a10eb4          STRH     r0,[r1,#0xeb4]
;;;1710   		SavePrms.RegQ.Ti   = 0x0010;
00182a  2010              MOVS     r0,#0x10
00182c  f8a10eb6          STRH     r0,[r1,#0xeb6]
;;;1711   		
;;;1712   		
;;;1713   		for (i=0; i<8; i++) {SavePrms.UartParams[i] = 0x01010400;}	/* Addr = 1, 115200, odd, 1 stop-bit	*/
001830  f44f6380          MOV      r3,#0x400
001834  2000              MOVS     r0,#0
001836  f2c01301          MOVT     r3,#0x101
                  |L1.6202|
00183a  eb010c80          ADD      r12,r1,r0,LSL #2
00183e  1c40              ADDS     r0,r0,#1
001840  f8cc3e80          STR      r3,[r12,#0xe80]
001844  2808              CMP      r0,#8
001846  dbf8              BLT      |L1.6202|
;;;1714   		
;;;1715   		SavePrms.Xn[0] = 300;							SavePrms.Tn[0] = 1100;
001848  f240434c          MOV      r3,#0x44c
;;;1716   		SavePrms.Xn[1] = 500;							SavePrms.Tn[1] = 1080;
00184c  f8c13f40          STR      r3,[r1,#0xf40]  ; Metro
001850  f44f7096          MOV      r0,#0x12c             ;1715
001854  f8c10f00          STR      r0,[r1,#0xf00]  ; Metro
001858  f44f6c87          MOV      r12,#0x438
;;;1717   		SavePrms.Xn[2] = 1300;						SavePrms.Tn[2] = 1030;
00185c  f8c1cf44          STR      r12,[r1,#0xf44]  ; Metro
001860  f44f73fa          MOV      r3,#0x1f4             ;1716
001864  f8c13f04          STR      r3,[r1,#0xf04]  ; Metro
001868  f2405c14          MOV      r12,#0x514
00186c  f8c1cf08          STR      r12,[r1,#0xf08]  ; Metro
001870  f2404c06          MOV      r12,#0x406
;;;1718   		SavePrms.Xn[3] = 2700;						SavePrms.Tn[3] = 980;
001874  f8c1cf48          STR      r12,[r1,#0xf48]  ; Metro
001878  f6402c8c          MOV      r12,#0xa8c
00187c  f8c1cf0c          STR      r12,[r1,#0xf0c]  ; Metro
001880  f44f7c75          MOV      r12,#0x3d4
;;;1719   		SavePrms.Xn[4] = 10300;						SavePrms.Tn[4] = 780;
001884  f8c1cf4c          STR      r12,[r1,#0xf4c]  ; Metro
001888  f6420c3c          MOV      r12,#0x283c
00188c  f8c1cf10          STR      r12,[r1,#0xf10]  ; Metro
001890  f44f7c43          MOV      r12,#0x30c
;;;1720   		SavePrms.Xn[5] = 11700;						SavePrms.Tn[5] = 720;
001894  f8c1cf50          STR      r12,[r1,#0xf50]  ; Metro
001898  f6425cb4          MOV      r12,#0x2db4
00189c  f8c1cf14          STR      r12,[r1,#0xf14]  ; Metro
0018a0  f44f7c34          MOV      r12,#0x2d0
;;;1721   		SavePrms.Xn[6] = 19500;						SavePrms.Tn[6] = 600;
0018a4  f8c1cf54          STR      r12,[r1,#0xf54]  ; Metro
0018a8  f6444c2c          MOV      r12,#0x4c2c
0018ac  f8c1cf18          STR      r12,[r1,#0xf18]  ; Metro
0018b0  f44f7c16          MOV      r12,#0x258
;;;1722   		SavePrms.Xn[7] = 22400;						SavePrms.Tn[7] = 500;
0018b4  f8c1cf58          STR      r12,[r1,#0xf58]  ; Metro
0018b8  f44f4caf          MOV      r12,#0x5780
;;;1723   		SavePrms.Xn[8] = 28100;						SavePrms.Tn[8] = 400;
0018bc  f8c1cf1c          STR      r12,[r1,#0xf1c]  ; Metro
0018c0  f8c13f5c          STR      r3,[r1,#0xf5c]  ; Metro
0018c4  f64653c4          MOV      r3,#0x6dc4
;;;1724   		SavePrms.Xn[9] = 33000;						SavePrms.Tn[9] = 300;
0018c8  f8c16f60          STR      r6,[r1,#0xf60]  ; Metro
0018cc  f8c13f20          STR      r3,[r1,#0xf20]  ; Metro
0018d0  f24803e8          MOV      r3,#0x80e8
;;;1725   		SavePrms.Xn[10] = 35900;					SavePrms.Tn[10] = 250;
0018d4  f8c13f24          STR      r3,[r1,#0xf24]  ; Metro
0018d8  f8c10f64          STR      r0,[r1,#0xf64]  ; Metro
0018dc  f648403c          MOV      r0,#0x8c3c
0018e0  f8c10f28          STR      r0,[r1,#0xf28]  ; Metro
0018e4  20fa              MOVS     r0,#0xfa
;;;1726   		SavePrms.Xn[11] = 40400;					SavePrms.Tn[11] = 130;
0018e6  f8c10f68          STR      r0,[r1,#0xf68]  ; Metro
0018ea  f64950d0          MOV      r0,#0x9dd0
0018ee  f8c10f2c          STR      r0,[r1,#0xf2c]  ; Metro
0018f2  2082              MOVS     r0,#0x82
;;;1727   		SavePrms.Xn[12] = 43000;					SavePrms.Tn[12] = 80;
0018f4  f8c10f6c          STR      r0,[r1,#0xf6c]  ; Metro
0018f8  f24a70f8          MOV      r0,#0xa7f8
0018fc  f8c10f30          STR      r0,[r1,#0xf30]  ; Metro
001900  2050              MOVS     r0,#0x50
;;;1728   		SavePrms.Xn[13] = 45800;					SavePrms.Tn[13] = 0;
001902  f8c10f70          STR      r0,[r1,#0xf70]  ; Metro
001906  f24b20e8          MOV      r0,#0xb2e8
;;;1729   		
;;;1730   		SavePrms.RefWorkRazrad  =  5 * 4000;
00190a  f8c14f74          STR      r4,[r1,#0xf74]  ; Metro
00190e  f8c10f34          STR      r0,[r1,#0xf34]  ; Metro
;;;1731   		SavePrms.RefPauseRazrad	= 60 * 4000;
001912  f64a1380          MOV      r3,#0xa980
001916  f2c00303          MOVT     r3,#3
;;;1732   		
;;;1733   		SavePrms.RefStandByEnaT = 120 * 4000;
00191a  f8c13f84          STR      r3,[r1,#0xf84]  ; Metro
00191e  f6446020          MOV      r0,#0x4e20            ;1730
001922  f8c10f80          STR      r0,[r1,#0xf80]  ; Metro
001926  005b              LSLS     r3,r3,#1
;;;1734   		SavePrms.RefStandByIvdI = 20 * 10;
001928  f8c13e74          STR      r3,[r1,#0xe74]  ; Metro
00192c  23c8              MOVS     r3,#0xc8
00192e  f8a13e70          STRH     r3,[r1,#0xe70]
;;;1735   		SavePrms.RefStandByIvdT = 800;
001932  f8a1be72          STRH     r11,[r1,#0xe72]
;;;1736   		
;;;1737   		SavePrms.RefAlarmAutoClear = 5 * 4000;
;;;1738   		SavePrms.RefAlarmAutoPause = 15 * 4000;
001936  f8c10f90          STR      r0,[r1,#0xf90]  ; Metro
00193a  f64e2060          MOV      r0,#0xea60
;;;1739   		
;;;1740   		SavePrms.DefMode = 0x01;
00193e  f8c10f94          STR      r0,[r1,#0xf94]  ; Metro
001942  f8a18e7e          STRH     r8,[r1,#0xe7e]
;;;1741   		SavePrms.EnaAuto2ndBridge = 0;
001946  f8a14e7c          STRH     r4,[r1,#0xe7c]
;;;1742   		SavePrms.RefTEna2ndBridge =  2 * 4000;
;;;1743   		SavePrms.RefTDis2ndBridge	= 10 * 4000;
;;;1744   		
;;;1745   		SavePrms.RefPEna2ndBridge = 200 * 14.095465572f + 0.5f;
00194a  f8c1af9c          STR      r10,[r1,#0xf9c]  ; Metro
00194e  f6403003          MOV      r0,#0xb03
001952  f8c19f98          STR      r9,[r1,#0xf98]  ; Metro
001956  f8a10e78          STRH     r0,[r1,#0xe78]
;;;1746   		SavePrms.RefPDis2ndBridge = 100 * 14.095465572f + 0.5f;
00195a  f2405082          MOV      r0,#0x582
00195e  f8a10e7a          STRH     r0,[r1,#0xe7a]
;;;1747   		
;;;1748   		SavePrms.BridgeUgolCorrect = 0x1555;
001962  f2415055          MOV      r0,#0x1555
001966  f8a10fa0          STRH     r0,[r1,#0xfa0]
;;;1749   		SavePrms.EnaRegParamsCorrect = 0;
;;;1750   		
;;;1751   		SavePrms.MaskAlarmKMsOffReady = 0x003F6E8C;
00196a  f646608c          MOV      r0,#0x6e8c
00196e  f8a14fa2          STRH     r4,[r1,#0xfa2]        ;1749
001972  f2c0003f          MOVT     r0,#0x3f
;;;1752   		SavePrms.MaskAlarmKMsOffWork  = 0x003F6C00;
001976  f8c10f88          STR      r0,[r1,#0xf88]  ; Metro
00197a  f44f40d8          MOV      r0,#0x6c00
00197e  f2c0003f          MOVT     r0,#0x3f
;;;1753   		
;;;1754   		SavePrms.RefPEnaDiodeMode = 50 * 14.095465572f + 0.5f;		/* Уставка P включения диодного режима													*/
001982  f8c10f8c          STR      r0,[r1,#0xf8c]  ; Metro
001986  f24020c1          MOV      r0,#0x2c1
00198a  f8a10fa4          STRH     r0,[r1,#0xfa4]
;;;1755   		SavePrms.RefPDisDiodeMode = 10 * 14.095465572f + 0.5f;		/* Уставка P отключения диодного режима													*/
00198e  208d              MOVS     r0,#0x8d
001990  f8a10fa6          STRH     r0,[r1,#0xfa6]
;;;1756   		SavePrms.RefTEnaDiodeMode = 400;													/* Выдержка времени на включение диодного режима								*/
001994  f8a16fa8          STRH     r6,[r1,#0xfa8]
;;;1757   		SavePrms.RefTDisDiodeMode = 400;													/* Выдержка времени на отключение диодного режима								*/
001998  f8a16faa          STRH     r6,[r1,#0xfaa]
;;;1758   		SavePrms.RefUdcDisDiodeMode = 6000;												/* Уставка Udc отключения диодного режима												*/
00199c  f2417070          MOV      r0,#0x1770
0019a0  f8a10fac          STRH     r0,[r1,#0xfac]
;;;1759   		SavePrms.EnaDiodeMode = 0;																/* Разрешение диодного режима																		*/
0019a4  f8a14fae          STRH     r4,[r1,#0xfae]
;;;1760   
;;;1761   		SavePrms.RefIHighFreq = 1000;
0019a8  f8a17fb0          STRH     r7,[r1,#0xfb0]
;;;1762   		SavePrms.RefTHighFreq = 4;
0019ac  f8a15fb2          STRH     r5,[r1,#0xfb2]
                  |L1.6576|
;;;1763   	}
;;;1764   	
;;;1765   	Metro.MTZIa1Counter = Metro.MTZIb1Counter = Metro.MTZIc1Counter = SavePrms.RefMtzT;
0019b0  f8b10ec2          LDRH     r0,[r1,#0xec2]  ; Metro
0019b4  f8a203a8          STRH     r0,[r2,#0x3a8]
0019b8  f8a203a6          STRH     r0,[r2,#0x3a6]
0019bc  f8a203a4          STRH     r0,[r2,#0x3a4]
;;;1766   	Metro.MTZIa2Counter = Metro.MTZIb2Counter = Metro.MTZIc2Counter = SavePrms.RefMtzT;
0019c0  f8a203ae          STRH     r0,[r2,#0x3ae]
0019c4  f8a203ac          STRH     r0,[r2,#0x3ac]
0019c8  f8a203aa          STRH     r0,[r2,#0x3aa]
;;;1767   	Metro.Udc1MaxCounter = Metro.Udc2MaxCounter = SavePrms.RefUdcmaxT;
0019cc  f8b10ec6          LDRH     r0,[r1,#0xec6]  ; Metro
0019d0  f8a203be          STRH     r0,[r2,#0x3be]
0019d4  f8a203bc          STRH     r0,[r2,#0x3bc]
;;;1768   	Metro.Udc1MinCounter = Metro.Udc2MinCounter = SavePrms.RefUdcminT;
0019d8  f8b10eca          LDRH     r0,[r1,#0xeca]  ; Metro
0019dc  f8a203c2          STRH     r0,[r2,#0x3c2]
0019e0  f8a203c0          STRH     r0,[r2,#0x3c0]
;;;1769   	Metro.SUMinCounter = SavePrms.RefSUminT;
0019e4  f8b10ed0          LDRH     r0,[r1,#0xed0]  ; Metro
0019e8  f8a203c4          STRH     r0,[r2,#0x3c4]
;;;1770   	Metro.SUMaxCounter = SavePrms.RefSUmaxT;
0019ec  f8b10ed6          LDRH     r0,[r1,#0xed6]  ; Metro
0019f0  f8a203c6          STRH     r0,[r2,#0x3c6]
;;;1771   
;;;1772   	Metro.MTZI1CounterVD = Metro.MTZI2CounterVD = SavePrms.RefMtzTVD;
0019f4  f8b10eda          LDRH     r0,[r1,#0xeda]  ; Metro
0019f8  f8a203ca          STRH     r0,[r2,#0x3ca]
0019fc  f8a203c8          STRH     r0,[r2,#0x3c8]
;;;1773   	
;;;1774   }
001a00  e8bd0ff0          POP      {r4-r11}
001a04  4770              BX       lr
;;;1775   
                          ENDP

                  TIM1_Init PROC
;;;1777   
;;;1778   void TIM1_Init(int freq) {
001a06  f6430244          MOV      r2,#0x3844
;;;1779   TIM_TypeDef	*TIM = TIM1;	
;;;1780   
;;;1781   	/*Включаем такстирование таймера TIM1	*/
;;;1782   	RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;
001a0a  f2c40202          MOVT     r2,#0x4002
001a0e  2100              MOVS     r1,#0                 ;1779
001a10  6813              LDR      r3,[r2,#0]
001a12  f2c40101          MOVT     r1,#0x4001            ;1779
001a16  f0430301          ORR      r3,r3,#1
001a1a  6013              STR      r3,[r2,#0]
;;;1783   	
;;;1784   	TIM->PSC 		= 0;
001a1c  2200              MOVS     r2,#0
001a1e  850a              STRH     r2,[r1,#0x28]
;;;1785   	/* Таймер считает от 0 до TIM->ARR (срабатывает overflow),																				*/
;;;1786   	/* и потом обратно до 0 (срабатывает underflow)	=> Период тайиера = (ARR - 1) * 2									*/
;;;1787   	/* freq = (APB2CLK * 2) / (ARR * 2) => ARR = APB2CLK / freq																				*/
;;;1788   	TIM->ARR 		= APB2CLK / freq;																												
001a20  f2400300          MOVW     r3,#:LOWER16: SystemCoreClock
001a24  f2c00300          MOVT     r3,#:UPPER16: SystemCoreClock
001a28  681b              LDR      r3,[r3,#0]  ; SystemCoreClock
001a2a  085b              LSRS     r3,r3,#1
001a2c  fbb3f0f0          UDIV     r0,r3,r0
001a30  62c8              STR      r0,[r1,#0x2c]
;;;1789   
;;;1790   	/* Регистры сравнения																																							*/
;;;1791   	TIM->CCR1		= TIM->ARR + 1;
001a32  6ac8              LDR      r0,[r1,#0x2c]
001a34  1c40              ADDS     r0,r0,#1
001a36  6348              STR      r0,[r1,#0x34]
;;;1792   	TIM->CCR2		= TIM->ARR + 1;
001a38  6ac8              LDR      r0,[r1,#0x2c]
001a3a  1c40              ADDS     r0,r0,#1
001a3c  6388              STR      r0,[r1,#0x38]
;;;1793   	TIM->CCR3		= TIM->ARR + 1;
001a3e  6ac8              LDR      r0,[r1,#0x2c]
001a40  1c40              ADDS     r0,r0,#1
001a42  63c8              STR      r0,[r1,#0x3c]
;;;1794   	TIM->CCR4 	= TIM->ARR + 1;
001a44  6ac8              LDR      r0,[r1,#0x2c]
001a46  1c40              ADDS     r0,r0,#1
001a48  6408              STR      r0,[r1,#0x40]
;;;1795   
;;;1796     /*Для всех четырех каналов используются режим PWM2:																								*/
;;;1797   	/*PWM mode 2 - In upcounting, channel x is inactive as long as TIMx_CNT < TIMx_CCRx else active. 	*/
;;;1798   	/*In downcounting, channel x is active as long as TIMx_CNT>TIMx_CCRx else inactive.								*/
;;;1799   	TIM->CCMR1	= TIM_CCMR1_OC1M_PWM2 | TIM_CCMR1_OC1PE | TIM_CCMR1_OC2M_PWM2 | TIM_CCMR1_OC2PE;
001a4a  f6470078          MOV      r0,#0x7878
001a4e  8308              STRH     r0,[r1,#0x18]
;;;1800   	TIM->CCMR2	= TIM_CCMR2_OC3M_PWM2 | TIM_CCMR2_OC3PE | TIM_CCMR2_OC4M_PWM2 | TIM_CCMR2_OC4PE;
001a50  8388              STRH     r0,[r1,#0x1c]
;;;1801   	/*Регистры CCRx - буферированы (биты TIM_CCMRy_OCxPE установлены),																*/
;;;1802   	/*Данные в рабочие регистры CCRx записываются во время undeflow и overflow (два раза за период)		*/
;;;1803   	/*Чтобы обновлялись через раз (фактически 1 раз за период), устанавливаем TIMx_RCR= 1							*/
;;;1804   	/*Непосредственно в счетчик данные из TIM->RCR записываются по событию UPDATE											*/
;;;1805   	TIM->RCR		= 1;
001a52  2001              MOVS     r0,#1
001a54  8608              STRH     r0,[r1,#0x30]
;;;1806   
;;;1807   	/*Для канала CH4 аварийный уровень - высокий, для остальных каналов (CH1,CH1N...CH3,CH3N)-высокий	*/
;;;1808   	/*TIM1 - включает TIM8																																						*/
;;;1809   	TIM->CR2		= TIM_CR2_OIS4 | 
001a56  f6477310          MOV      r3,#0x7f10
001a5a  808b              STRH     r3,[r1,#4]
;;;1810   								TIM_CR2_OIS3 |
;;;1811   								TIM_CR2_OIS3N|
;;;1812   								TIM_CR2_OIS2 |
;;;1813   								TIM_CR2_OIS2N|
;;;1814   								TIM_CR2_OIS1 |
;;;1815   								TIM_CR2_OIS1N|
;;;1816   								TIM_CR2_MMS_Enable;			
;;;1817   
;;;1818   	/*DeadTime	= 5 us; OSSR, OSSI = 0 - выходы в Z-состоянии (не выдаются), когда выключены					*/
;;;1819   	TIM->BDTR		= SetDB | TIM_BDTR_BKE | TIM_BDTR_BKP;
001a5c  f24303f4          MOV      r3,#0x30f4
001a60  f8a13044          STRH     r3,[r1,#0x44]
;;;1820   
;;;1821   	/*Включаем каналы: CH1,CH1N...CH3,CH3N - активны низким уровнем, CH4 - активен низким уровнем			*/
;;;1822   	TIM->CCER		=	0x3FFF;
001a64  f64373ff          MOV      r3,#0x3fff
001a68  840b              STRH     r3,[r1,#0x20]
;;;1823   
;;;1824   	/*Вызываем событие UPDATE																																					*/
;;;1825   	TIM->EGR		= TIM_EGR_UG;
001a6a  8288              STRH     r0,[r1,#0x14]
;;;1826   
;;;1827   	/*Прерывание Update																																								*/
;;;1828   //TIM->DIER 	= TIM_DIER_UIE;
;;;1829   	TIM->DIER 	= TIM_DIER_BIE;
001a6c  2080              MOVS     r0,#0x80
001a6e  8188              STRH     r0,[r1,#0xc]
;;;1830   											
;;;1831   //TIM->BDTR	 |= TIM_BDTR_MOE;
;;;1832   	TIM->CR1		= (TIM_CR1_CEN | TIM_CR1_ARPE | TIM_CR1_CMS_Center3);	
001a70  20e1              MOVS     r0,#0xe1
001a72  8008              STRH     r0,[r1,#0]
001a74  f24e0119          MOV      r1,#0xe019
001a78  f2ce0100          MOVT     r1,#0xe000
001a7c  2010              MOVS     r0,#0x10
001a7e  f8810400          STRB     r0,[r1,#0x400]
001a82  0541              LSLS     r1,r0,#21
001a84  f04f20e0          MOV      r0,#0xe000e000
001a88  f8c01100          STR      r1,[r0,#0x100]
001a8c  f24e0118          MOV      r1,#0xe018
001a90  f2ce0100          MOVT     r1,#0xe000
001a94  f8812400          STRB     r2,[r1,#0x400]
001a98  f04f7180          MOV      r1,#0x1000000
001a9c  f8c01100          STR      r1,[r0,#0x100]
;;;1833   
;;;1834   	NVIC_SetPriority(TIM1_UP_TIM10_IRQn, TIM1_UP_TIM10_Prty);
;;;1835   	NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
;;;1836   
;;;1837   	NVIC_SetPriority(TIM1_BRK_TIM9_IRQn, TIM1_BRK_TIM9_Prty);
;;;1838   	NVIC_EnableIRQ(TIM1_BRK_TIM9_IRQn);
;;;1839   
;;;1840   	/* ACT245 OE	PG6	*/
;;;1841   	PeriphBB(GPIOG->ODR, 6) = 0;
001aa0  2000              MOVS     r0,#0
001aa2  f2c42043          MOVT     r0,#0x4243
001aa6  f8c02298          STR      r2,[r0,#0x298]
;;;1842   }	
001aaa  4770              BX       lr
;;;1843   
                          ENDP

                  TIM8_Init PROC
;;;1844   void TIM8_Init(int freq) {
001aac  f6430244          MOV      r2,#0x3844
;;;1845   TIM_TypeDef	*TIM = TIM8;	
;;;1846   
;;;1847   	/*Включаем такстирование таймера TIM8	*/
;;;1848   	RCC->APB2ENR |= RCC_APB2ENR_TIM8EN;
001ab0  f2c40202          MOVT     r2,#0x4002
001ab4  f44f6180          MOV      r1,#0x400             ;1845
001ab8  6813              LDR      r3,[r2,#0]
001aba  f2c40101          MOVT     r1,#0x4001            ;1845
001abe  f0430302          ORR      r3,r3,#2
001ac2  6013              STR      r3,[r2,#0]
;;;1849   	
;;;1850   	TIM->PSC 		= 0;
001ac4  2200              MOVS     r2,#0
001ac6  850a              STRH     r2,[r1,#0x28]
;;;1851   	/* Таймер считает от 0 до TIM->ARR (срабатывает overflow),																				*/
;;;1852   	/* и потом обратно до 0 (срабатывает underflow)	=> Период тайиера = (ARR - 1) * 2									*/
;;;1853   	/* freq = (APB2CLK * 2) / (ARR * 2) => ARR = APB2CLK / freq																				*/
;;;1854   	TIM->ARR 		= APB2CLK / freq;																												
001ac8  f2400300          MOVW     r3,#:LOWER16: SystemCoreClock
001acc  f2c00300          MOVT     r3,#:UPPER16: SystemCoreClock
001ad0  681b              LDR      r3,[r3,#0]  ; SystemCoreClock
001ad2  085b              LSRS     r3,r3,#1
001ad4  fbb3f0f0          UDIV     r0,r3,r0
001ad8  62c8              STR      r0,[r1,#0x2c]
;;;1855   
;;;1856   	/* Регистры сравнения																																							*/
;;;1857   	TIM->CCR1		= TIM->ARR + 1;
001ada  6ac8              LDR      r0,[r1,#0x2c]
001adc  1c40              ADDS     r0,r0,#1
001ade  6348              STR      r0,[r1,#0x34]
;;;1858   	TIM->CCR2		= TIM->ARR + 1;
001ae0  6ac8              LDR      r0,[r1,#0x2c]
001ae2  1c40              ADDS     r0,r0,#1
001ae4  6388              STR      r0,[r1,#0x38]
;;;1859   	TIM->CCR3		= TIM->ARR + 1;
001ae6  6ac8              LDR      r0,[r1,#0x2c]
001ae8  1c40              ADDS     r0,r0,#1
001aea  63c8              STR      r0,[r1,#0x3c]
;;;1860   	TIM->CCR4 	= TIM->ARR + 1;
001aec  6ac8              LDR      r0,[r1,#0x2c]
001aee  1c40              ADDS     r0,r0,#1
001af0  6408              STR      r0,[r1,#0x40]
;;;1861   
;;;1862     /*Для всех четырех каналов используются режим PWM2:																								*/
;;;1863   	/*PWM mode 2 - In upcounting, channel x is inactive as long as TIMx_CNT < TIMx_CCRx else active. 	*/
;;;1864   	/*In downcounting, channel x is active as long as TIMx_CNT>TIMx_CCRx else inactive.								*/
;;;1865   	TIM->CCMR1	= TIM_CCMR1_OC1M_PWM2 | TIM_CCMR1_OC1PE | TIM_CCMR1_OC2M_PWM2 | TIM_CCMR1_OC2PE;
001af2  f6470078          MOV      r0,#0x7878
001af6  8308              STRH     r0,[r1,#0x18]
;;;1866   	TIM->CCMR2	= TIM_CCMR2_OC3M_PWM2 | TIM_CCMR2_OC3PE | TIM_CCMR2_OC4M_PWM2 | TIM_CCMR2_OC4PE;
001af8  8388              STRH     r0,[r1,#0x1c]
;;;1867   	/*Регистры CCRx - буферированы (биты TIM_CCMRy_OCxPE установлены),																*/
;;;1868   	/*Данные в рабочие регистры CCRx записываются во время undeflow и overflow (два раза за период)		*/
;;;1869   	/*Чтобы обновлялись через раз (фактически 1 раз за период), устанавливаем TIMx_RCR= 1							*/
;;;1870   	/*Непосредственно в счетчик данные из TIM->RCR записываются по событию UPDATE											*/
;;;1871   	TIM->RCR		= 1;
001afa  2001              MOVS     r0,#1
001afc  8608              STRH     r0,[r1,#0x30]
;;;1872   	
;;;1873   	/*Для канала CH4 аварийный уровень - высокий, для остальных каналов (CH1,CH1N...CH3,CH3N)-высокий	*/
;;;1874   	/*TIM8 запускает встроенное АЦП	*/
;;;1875   	TIM->CR2		= TIM_CR2_OIS4 | 
001afe  f6477320          MOV      r3,#0x7f20
001b02  808b              STRH     r3,[r1,#4]
;;;1876   								TIM_CR2_OIS3 |
;;;1877   								TIM_CR2_OIS3N|
;;;1878   								TIM_CR2_OIS2 |
;;;1879   								TIM_CR2_OIS2N|
;;;1880   								TIM_CR2_OIS1 |
;;;1881   								TIM_CR2_OIS1N|
;;;1882   								TIM_CR2_MMS_Update;
;;;1883   
;;;1884   	/*DeadTime	= 5 us; OSSR, OSSI = 0 - выходы в Z-состоянии (не выдаются), когда выключены					*/
;;;1885   	TIM->BDTR		= SetDB | TIM_BDTR_BKE | TIM_BDTR_BKP;
001b04  f24303f4          MOV      r3,#0x30f4
001b08  f8a13044          STRH     r3,[r1,#0x44]
;;;1886   
;;;1887   	/*Включаем каналы: CH1,CH1N...CH3,CH3N - активны низким уровнем, CH4 - активен низким уровнем			*/
;;;1888   	TIM->CCER		=	0x3FFF;
001b0c  f64373ff          MOV      r3,#0x3fff
001b10  840b              STRH     r3,[r1,#0x20]
;;;1889   
;;;1890   	/*Вызываем событие UPDATE																																					*/
;;;1891   	TIM->EGR		= TIM_EGR_UG;
001b12  8288              STRH     r0,[r1,#0x14]
;;;1892   	
;;;1893   	/*Прерывание Update																																								*/
;;;1894   //TIM->DIER 	= TIM_DIER_UIE;
;;;1895   	TIM->DIER 	= TIM_DIER_BIE;
001b14  2080              MOVS     r0,#0x80
001b16  8188              STRH     r0,[r1,#0xc]
;;;1896   
;;;1897   	/*TIM8 включается от TIM1																																					*/
;;;1898   	TIM->SMCR		= TIM_SMCR_SMS_Gate;
001b18  2005              MOVS     r0,#5
001b1a  8108              STRH     r0,[r1,#8]
;;;1899   
;;;1900   //TIM->BDTR	 |= TIM_BDTR_MOE;
;;;1901   
;;;1902   	//Смещение коммутации						/*160216*/
;;;1903   	if (ENATIMOffset == 2) {TIM->CNT 		= TIM->ARR -  1;} 
001b1c  f2400000          MOVW     r0,#:LOWER16: ||.bss||+84
001b20  f2c00000          MOVT     r0,#:UPPER16: ||.bss||+84
001b24  f9b00efe          LDRSH    r0,[r0,#0xefe]  ; Metro
001b28  2802              CMP      r0,#2
001b2a  bf04              ITT      EQ
001b2c  6ac8              LDREQ    r0,[r1,#0x2c]
001b2e  1e40              SUBEQ    r0,r0,#1
001b30  d004              BEQ      |L1.6972|
;;;1904   		else if (ENATIMOffset == 4) {TIM->CNT 		= TIM->ARR >> 1;}
001b32  2804              CMP      r0,#4
001b34  bf04              ITT      EQ
001b36  6ac8              LDREQ    r0,[r1,#0x2c]
001b38  0840              LSREQ    r0,r0,#1
001b3a  d100              BNE      |L1.6974|
                  |L1.6972|
001b3c  6248              STR      r0,[r1,#0x24]
                  |L1.6974|
;;;1905   	
;;;1906   	TIM->CR1		= (TIM_CR1_CEN | TIM_CR1_ARPE | TIM_CR1_CMS_Center3);	
001b3e  20e1              MOVS     r0,#0xe1
001b40  8008              STRH     r0,[r1,#0]
001b42  f24e032c          MOV      r3,#0xe02c
001b46  f2ce0300          MOVT     r3,#0xe000
001b4a  2010              MOVS     r0,#0x10
001b4c  f8830400          STRB     r0,[r3,#0x400]
001b50  0203              LSLS     r3,r0,#8
001b52  f24e0004          MOV      r0,#0xe004
001b56  f2ce0000          MOVT     r0,#0xe000
001b5a  f8c03100          STR      r3,[r0,#0x100]
001b5e  f24e032b          MOV      r3,#0xe02b
001b62  f2ce0300          MOVT     r3,#0xe000
001b66  f8832400          STRB     r2,[r3,#0x400]
001b6a  f44f6300          MOV      r3,#0x800
001b6e  f8c03100          STR      r3,[r0,#0x100]
;;;1907   
;;;1908   	NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TIM8_UP_TIM13_Prty);
;;;1909   	NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
;;;1910   	
;;;1911     NVIC_SetPriority(TIM8_BRK_TIM12_IRQn, TIM8_BRK_TIM12_Prty);
;;;1912     NVIC_EnableIRQ(TIM8_BRK_TIM12_IRQn);
;;;1913   
;;;1914   	/* ACT245 OE	PG7	*/	
;;;1915   	PeriphBB(GPIOG->ODR, 7) = 0;
001b72  2000              MOVS     r0,#0
001b74  f2c42043          MOVT     r0,#0x4243
001b78  f8c0229c          STR      r2,[r0,#0x29c]
;;;1916   	
;;;1917   	/*Временно*/
;;;1918   	Metro.AMP1 = Metro.ARR = TIM->ARR;
001b7c  6ac9              LDR      r1,[r1,#0x2c]
001b7e  f2400000          MOVW     r0,#:LOWER16: ||.bss||+8276
001b82  f2c00000          MOVT     r0,#:UPPER16: ||.bss||+8276
;;;1919   	Metro.Phase1 = 0;
001b86  f8c02314          STR      r2,[r0,#0x314]  ; Metro
001b8a  f8c0134c          STR      r1,[r0,#0x34c]  ; Metro
001b8e  e9c021c6          STRD     r2,r1,[r0,#0x318]
;;;1920   	Metro.IncPhase1 = 0;
;;;1921   
;;;1922   }
001b92  4770              BX       lr
;;;1923   
                          ENDP

                  TIM8_UP_TIM13_IRQHandler PROC
;;;1924   
;;;1925   void TIM8_UP_TIM13_IRQHandler() {
001b94  f44f4100          MOV      r1,#0x8000
;;;1926   	PeriphBB(TIM8->SR, TIM_SR_UIF_bit) = 0;
001b98  f2c42120          MOVT     r1,#0x4220
001b9c  2200              MOVS     r2,#0
001b9e  f8c12200          STR      r2,[r1,#0x200]
;;;1927   	PeriphBB(TIM8->DIER,TIM_DIER_BIE_bit) = ((Metro.Mode & 0x0002) >> 1);
001ba2  f2400000          MOVW     r0,#:LOWER16: ||.bss||+8276
001ba6  f2c00000          MOVT     r0,#:UPPER16: ||.bss||+8276
001baa  f890030a          LDRB     r0,[r0,#0x30a]  ; Metro
001bae  f3c00040          UBFX     r0,r0,#1,#1
001bb2  f8c1019c          STR      r0,[r1,#0x19c]
;;;1928   	PeriphBB(TIM8->BDTR,TIM_BDTR_MOE_bit) = ((Metro.Mode & 0x0002) >> 1);
001bb6  f64803bc          MOV      r3,#0x88bc
001bba  f2c42320          MOVT     r3,#0x4220
001bbe  6018              STR      r0,[r3,#0]
;;;1929   	PeriphBB(TIM8->DIER,TIM_DIER_UIE_bit) = 0;
001bc0  f8c12180          STR      r2,[r1,#0x180]
;;;1930   }
001bc4  4770              BX       lr
;;;1931   
                          ENDP

                  TIM1_UP_TIM10_IRQHandler PROC
;;;1932   void TIM1_UP_TIM10_IRQHandler() {
001bc6  2200              MOVS     r2,#0
;;;1933   	PeriphBB(TIM1->SR, TIM_SR_UIF_bit) = 0;	
001bc8  2100              MOVS     r1,#0
001bca  f2c42120          MOVT     r1,#0x4220
001bce  f8c12200          STR      r2,[r1,#0x200]
;;;1934   	PeriphBB(TIM1->DIER,TIM_DIER_BIE_bit) = ((Metro.Mode & 0x0001) >> 0);
001bd2  f2400000          MOVW     r0,#:LOWER16: ||.bss||+8276
001bd6  f2c00000          MOVT     r0,#:UPPER16: ||.bss||+8276
001bda  f890030a          LDRB     r0,[r0,#0x30a]  ; Metro
001bde  f0000001          AND      r0,r0,#1
001be2  f8c1019c          STR      r0,[r1,#0x19c]
;;;1935   	PeriphBB(TIM1->BDTR,TIM_BDTR_MOE_bit) = ((Metro.Mode & 0x0001) >> 0);
001be6  f64003bc          MOV      r3,#0x8bc
001bea  f2c42320          MOVT     r3,#0x4220
001bee  6018              STR      r0,[r3,#0]
;;;1936   	PeriphBB(TIM1->DIER,TIM_DIER_UIE_bit) = 0;
001bf0  f8c12180          STR      r2,[r1,#0x180]
;;;1937   }
001bf4  4770              BX       lr
;;;1938   
                          ENDP

                  TIM8_BRK_TIM12_IRQHandler PROC
;;;1939   
;;;1940   void TIM8_BRK_TIM12_IRQHandler() {
001bf6  f64001bc          MOV      r1,#0x8bc
;;;1941   	PeriphBB(TIM1->BDTR, TIM_BDTR_MOE_bit) = 0;
001bfa  f2c42120          MOVT     r1,#0x4220
001bfe  2000              MOVS     r0,#0
001c00  6008              STR      r0,[r1,#0]
;;;1942    	PeriphBB(TIM8->DIER, TIM_DIER_BIE_bit) = 0;
001c02  f44f4100          MOV      r1,#0x8000
001c06  f2c42120          MOVT     r1,#0x4220
001c0a  f8c1019c          STR      r0,[r1,#0x19c]
;;;1943   	PeriphBB(TIM8->SR, TIM_SR_BIF_bit) = 0;
001c0e  f8c1021c          STR      r0,[r1,#0x21c]
;;;1944   	Metro.ErrorTIM8Flag = 1;
001c12  2001              MOVS     r0,#1
001c14  f2400100          MOVW     r1,#:LOWER16: ||.bss||+8276
001c18  f2c00100          MOVT     r1,#:UPPER16: ||.bss||+8276
001c1c  f8c10348          STR      r0,[r1,#0x348]  ; Metro
;;;1945   }	
001c20  4770              BX       lr
;;;1946   
                          ENDP

                  TIM1_BRK_TIM9_IRQHandler PROC
;;;1947   void TIM1_BRK_TIM9_IRQHandler() {
001c22  f64801bc          MOV      r1,#0x88bc
;;;1948   	PeriphBB(TIM8->BDTR, TIM_BDTR_MOE_bit) = 0;
001c26  f2c42120          MOVT     r1,#0x4220
001c2a  2000              MOVS     r0,#0
001c2c  6008              STR      r0,[r1,#0]
;;;1949   	PeriphBB(TIM1->DIER,TIM_DIER_BIE_bit) = 0;
001c2e  2100              MOVS     r1,#0
001c30  f2c42120          MOVT     r1,#0x4220
001c34  f8c1019c          STR      r0,[r1,#0x19c]
;;;1950   	PeriphBB(TIM1->SR, TIM_SR_BIF_bit) = 0;
001c38  f8c1021c          STR      r0,[r1,#0x21c]
;;;1951   	Metro.ErrorTIM1Flag = 1;
001c3c  2001              MOVS     r0,#1
001c3e  f2400100          MOVW     r1,#:LOWER16: ||.bss||+8276
001c42  f2c00100          MOVT     r1,#:UPPER16: ||.bss||+8276
001c46  f8c10344          STR      r0,[r1,#0x344]  ; Metro
;;;1952   }
001c4a  4770              BX       lr
;;;1953   
                          ENDP

                  TIM2_TIM5_Init PROC
;;;1954   void TIM2_TIM5_Init(void) {
001c4c  b470              PUSH     {r4-r6}
;;;1955   	TIM_TypeDef	*TIM = TIM2;	
;;;1956   	
;;;1957   	RCC->APB1ENR |=	(RCC_APB1ENR_TIM2EN | RCC_APB1ENR_TIM5EN);
001c4e  f44f5161          MOV      r1,#0x3840
001c52  f2c40102          MOVT     r1,#0x4002
001c56  f04f4080          MOV      r0,#0x40000000        ;1955
001c5a  680a              LDR      r2,[r1,#0]
001c5c  f0420209          ORR      r2,r2,#9
001c60  600a              STR      r2,[r1,#0]
;;;1958   	/*	Частота T2 и T5 = APB1CLK * 2 = 84МГц 							*/
;;;1959   	TIM->CNT = 0;
001c62  2200              MOVS     r2,#0
001c64  6242              STR      r2,[r0,#0x24]
;;;1960   	TIM->PSC = 0;
001c66  8502              STRH     r2,[r0,#0x28]
;;;1961   	TIM->ARR = 0xFFFFFFFF;
001c68  1e53              SUBS     r3,r2,#1
001c6a  62c3              STR      r3,[r0,#0x2c]
;;;1962   	
;;;1963   	TIM->CCMR1 = TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0 | TIM_CCMR1_IC1F | TIM_CCMR1_IC2F;
001c6c  f24f11f1          MOV      r1,#0xf1f1
001c70  8301              STRH     r1,[r0,#0x18]
;;;1964   	TIM->CCMR2 = TIM_CCMR2_CC3S_0 | TIM_CCMR2_CC4S_0 | TIM_CCMR2_IC3F | TIM_CCMR2_IC4F;
001c72  8381              STRH     r1,[r0,#0x1c]
;;;1965   	
;;;1966   	TIM->CCER  = TIM_CCER_CC1E | TIM_CCER_CC2E | TIM_CCER_CC3E;
001c74  f2401c11          MOV      r12,#0x111
001c78  f8a0c020          STRH     r12,[r0,#0x20]
;;;1967   	TIM->DIER  = TIM_DIER_CC1IE | TIM_DIER_CC2IE | TIM_DIER_CC3IE;
001c7c  240e              MOVS     r4,#0xe
001c7e  8184              STRH     r4,[r0,#0xc]
;;;1968   
;;;1969   	TIM->CR1  |= TIM_CR1_CEN;
001c80  8805              LDRH     r5,[r0,#0]
001c82  f0450501          ORR      r5,r5,#1
001c86  8005              STRH     r5,[r0,#0]
001c88  f24e001c          MOV      r0,#0xe01c
001c8c  f2ce0000          MOVT     r0,#0xe000
001c90  2520              MOVS     r5,#0x20
001c92  f8805400          STRB     r5,[r0,#0x400]
001c96  f04f26e0          MOV      r6,#0xe000e000
001c9a  0708              LSLS     r0,r1,#28
001c9c  f8c60100          STR      r0,[r6,#0x100]
;;;1970   	
;;;1971   	NVIC_SetPriority(TIM2_IRQn, TIM2_Prty);
;;;1972   	NVIC_EnableIRQ(TIM2_IRQn);
;;;1973   
;;;1974   	/* Настраиваем таймер T5	------------------------------ */
;;;1975   	TIM = TIM5;
001ca0  f44f6040          MOV      r0,#0xc00
001ca4  f2c40000          MOVT     r0,#0x4000
;;;1976   
;;;1977   	TIM->CNT = 0;
001ca8  6242              STR      r2,[r0,#0x24]
;;;1978   	TIM->PSC = 0;
001caa  8502              STRH     r2,[r0,#0x28]
;;;1979   	TIM->ARR = 0xFFFFFFFF;
001cac  62c3              STR      r3,[r0,#0x2c]
;;;1980   	
;;;1981   	TIM->CCMR1 = TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0 | TIM_CCMR1_IC1F | TIM_CCMR1_IC2F;
001cae  8301              STRH     r1,[r0,#0x18]
;;;1982   	TIM->CCMR2 = TIM_CCMR2_CC3S_0 | TIM_CCMR2_CC4S_0 | TIM_CCMR2_IC3F | TIM_CCMR2_IC4F;
001cb0  8381              STRH     r1,[r0,#0x1c]
;;;1983   	
;;;1984   	TIM->CCER  = TIM_CCER_CC1E | TIM_CCER_CC2E | TIM_CCER_CC3E;
001cb2  f8a0c020          STRH     r12,[r0,#0x20]
;;;1985   	TIM->DIER  = TIM_DIER_CC1IE | TIM_DIER_CC2IE | TIM_DIER_CC3IE;
001cb6  8184              STRH     r4,[r0,#0xc]
;;;1986   
;;;1987   	TIM->CR1  |= TIM_CR1_CEN;
001cb8  8801              LDRH     r1,[r0,#0]
001cba  f0410101          ORR      r1,r1,#1
001cbe  8001              STRH     r1,[r0,#0]
001cc0  f24e0032          MOV      r0,#0xe032
001cc4  f2ce0000          MOVT     r0,#0xe000
001cc8  f8805400          STRB     r5,[r0,#0x400]
001ccc  0368              LSLS     r0,r5,#13
001cce  1d31              ADDS     r1,r6,#4
001cd0  f8c10100          STR      r0,[r1,#0x100]
;;;1988   	
;;;1989   	NVIC_SetPriority(TIM5_IRQn, TIM5_Prty);
;;;1990   	NVIC_EnableIRQ(TIM5_IRQn);
;;;1991   }
001cd4  bc70              POP      {r4-r6}
001cd6  4770              BX       lr
;;;1992   
                          ENDP

                  TIM2_IRQHandler PROC
;;;1993   void TIM2_IRQHandler(void) {
001cd8  f04f4280          MOV      r2,#0x40000000
;;;1994   static unsigned int Ch1, Ch2, Ch3;
;;;1995   	
;;;1996   	if (TIM2->SR & TIM_SR_CC1IF) {			/* Прерывание от первого канала захвата		*/
001cdc  8a10              LDRH     r0,[r2,#0x10]
001cde  f0100f02          TST      r0,#2
;;;1997   		TIM2->SR &= ~TIM_SR_CC1IF;				/* Сбрасываем бит 											*/
;;;1998   		if (TIM2->CCER & TIM_CCER_CC1P) {
;;;1999   			TIM2->CCER &= ~TIM_CCER_CC1P;
;;;2000   			Metro.T[0] = (unsigned int)TIM2->CCR1 - Ch1;
001ce2  f2400000          MOVW     r0,#:LOWER16: ||.bss||+8276
001ce6  f2c00000          MOVT     r0,#:UPPER16: ||.bss||+8276
001cea  f2400100          MOVW     r1,#:LOWER16: ||.data||
001cee  f2c00100          MOVT     r1,#:UPPER16: ||.data||
001cf2  d018              BEQ      |L1.7462|
001cf4  8a13              LDRH     r3,[r2,#0x10]         ;1997
001cf6  f0230302          BIC      r3,r3,#2              ;1997
001cfa  8213              STRH     r3,[r2,#0x10]         ;1997
001cfc  8c13              LDRH     r3,[r2,#0x20]         ;1998
001cfe  f0130f02          TST      r3,#2                 ;1998
;;;2001   		}	else {
;;;2002   			TIM2->CCER |= TIM_CCER_CC1P;
001d02  8c13              LDRH     r3,[r2,#0x20]
001d04  d00a              BEQ      |L1.7452|
001d06  f0230302          BIC      r3,r3,#2              ;1999
001d0a  8413              STRH     r3,[r2,#0x20]         ;1999
001d0c  f8d2c034          LDR      r12,[r2,#0x34]        ;2000
001d10  6b8b              LDR      r3,[r1,#0x38]         ;2000  ; Ch1
001d12  ebac0303          SUB      r3,r12,r3             ;2000
001d16  f8c03414          STR      r3,[r0,#0x414]        ;2000  ; Metro
001d1a  e004              B        |L1.7462|
                  |L1.7452|
001d1c  f0430302          ORR      r3,r3,#2
001d20  8413              STRH     r3,[r2,#0x20]
;;;2003   			Ch1 = TIM2->CCR1;
001d22  6b53              LDR      r3,[r2,#0x34]
001d24  638b              STR      r3,[r1,#0x38]  ; Ch1
                  |L1.7462|
;;;2004   		} //if (TIM2->CCER & TIM_CCER_CC1P)	
;;;2005   	} //if (TIM2->SR & TIM_SR_CC1IF)
;;;2006   	
;;;2007   	if (TIM2->SR & TIM_SR_CC2IF) {			/* Прерывание от второго канала захвата		*/
001d26  8a13              LDRH     r3,[r2,#0x10]
001d28  f0130f04          TST      r3,#4
001d2c  d018              BEQ      |L1.7520|
;;;2008   		TIM2->SR &= ~TIM_SR_CC2IF;				/* Сбрасываем бит 											*/
001d2e  8a13              LDRH     r3,[r2,#0x10]
001d30  f0230304          BIC      r3,r3,#4
001d34  8213              STRH     r3,[r2,#0x10]
;;;2009   		if (TIM2->CCER & TIM_CCER_CC2P) {
001d36  8c13              LDRH     r3,[r2,#0x20]
001d38  f0130f20          TST      r3,#0x20
;;;2010   			TIM2->CCER &= ~TIM_CCER_CC2P;
;;;2011   			Metro.T[1] = (unsigned int)TIM2->CCR2 - Ch2;
;;;2012   		}	else {
;;;2013   			TIM2->CCER |= TIM_CCER_CC2P;
001d3c  8c13              LDRH     r3,[r2,#0x20]
001d3e  d00a              BEQ      |L1.7510|
001d40  f0230320          BIC      r3,r3,#0x20           ;2010
001d44  8413              STRH     r3,[r2,#0x20]         ;2010
001d46  6b93              LDR      r3,[r2,#0x38]         ;2011
001d48  f8d1c03c          LDR      r12,[r1,#0x3c]        ;2011  ; Ch2
001d4c  eba3030c          SUB      r3,r3,r12             ;2011
001d50  f8c03418          STR      r3,[r0,#0x418]        ;2011  ; Metro
001d54  e004              B        |L1.7520|
                  |L1.7510|
001d56  f0430320          ORR      r3,r3,#0x20
001d5a  8413              STRH     r3,[r2,#0x20]
;;;2014   			Ch2 = TIM2->CCR2;
001d5c  6b93              LDR      r3,[r2,#0x38]
001d5e  63cb              STR      r3,[r1,#0x3c]  ; Ch2
                  |L1.7520|
;;;2015   		} //if (TIM2->CCER & TIM_CCER_CC2P)	
;;;2016   	}
;;;2017   	
;;;2018   	if (TIM2->SR & TIM_SR_CC3IF) {			/* Прерывание от третьего канала захвата	*/
001d60  8a13              LDRH     r3,[r2,#0x10]
001d62  f0130f08          TST      r3,#8
;;;2019   		TIM2->SR &= ~TIM_SR_CC3IF;				/* Сбрасываем бит 												*/
;;;2020   		if (TIM2->CCER & TIM_CCER_CC3P) {
;;;2021   			TIM2->CCER &= ~TIM_CCER_CC3P;
;;;2022   			Metro.T[2] = (unsigned int)TIM2->CCR3 - Ch3;
;;;2023   		}	else {
;;;2024   			TIM2->CCER |= TIM_CCER_CC3P;
;;;2025   			Ch3 = TIM2->CCR3;
;;;2026   		} //if (TIM2->CCER & TIM_CCER_CC3P)	
;;;2027   	}
;;;2028   } //void TIM2_IRQHandler
001d66  bf08              IT       EQ
001d68  4770              BXEQ     lr
001d6a  8a13              LDRH     r3,[r2,#0x10]         ;2019
001d6c  f0230308          BIC      r3,r3,#8              ;2019
001d70  8213              STRH     r3,[r2,#0x10]         ;2019
001d72  8c13              LDRH     r3,[r2,#0x20]         ;2020
001d74  f4137f00          TST      r3,#0x200             ;2020
001d78  d009              BEQ      |L1.7566|
001d7a  8c13              LDRH     r3,[r2,#0x20]         ;2021
001d7c  f4237300          BIC      r3,r3,#0x200          ;2021
001d80  8413              STRH     r3,[r2,#0x20]         ;2021
001d82  6bd2              LDR      r2,[r2,#0x3c]         ;2022
001d84  6c09              LDR      r1,[r1,#0x40]         ;2022  ; Ch3
001d86  1a51              SUBS     r1,r2,r1              ;2022
001d88  f8c0141c          STR      r1,[r0,#0x41c]        ;2022  ; Metro
001d8c  4770              BX       lr
                  |L1.7566|
001d8e  8c10              LDRH     r0,[r2,#0x20]         ;2024
001d90  f4407000          ORR      r0,r0,#0x200          ;2024
001d94  8410              STRH     r0,[r2,#0x20]         ;2024
001d96  6bd0              LDR      r0,[r2,#0x3c]         ;2025
001d98  6408              STR      r0,[r1,#0x40]         ;2025  ; Ch3
001d9a  4770              BX       lr
;;;2029   
                          ENDP

                  TIM5_IRQHandler PROC
;;;2030   void TIM5_IRQHandler(void) {
001d9c  f44f6341          MOV      r3,#0xc10
001da0  b410              PUSH     {r4}
;;;2031   static unsigned int Ch1, Ch2, Ch3;
;;;2032   	
;;;2033   	if (TIM5->SR & TIM_SR_CC1IF) {			/* Прерывание от первого канала захвата		*/
001da2  f2c40300          MOVT     r3,#0x4000
001da6  8818              LDRH     r0,[r3,#0]
001da8  f0100f02          TST      r0,#2
;;;2034   		TIM5->SR &= ~TIM_SR_CC1IF;				/* Сбрасываем бит 											*/
;;;2035   		if (TIM5->CCER & TIM_CCER_CC1P) {
;;;2036   			TIM5->CCER &= ~TIM_CCER_CC1P;
;;;2037   			Metro.T[3] = (unsigned int)TIM5->CCR1 - Ch1;
001dac  f2400000          MOVW     r0,#:LOWER16: ||.bss||+8276
001db0  f2c00000          MOVT     r0,#:UPPER16: ||.bss||+8276
001db4  f2400100          MOVW     r1,#:LOWER16: ||.data||
001db8  f2c00100          MOVT     r1,#:UPPER16: ||.data||
001dbc  f44f6242          MOV      r2,#0xc20             ;2035
001dc0  f2c40200          MOVT     r2,#0x4000            ;2035
001dc4  d021              BEQ      |L1.7690|
001dc6  f8b3c000          LDRH     r12,[r3,#0]           ;2034
001dca  f02c0c02          BIC      r12,r12,#2            ;2034
001dce  f8a3c000          STRH     r12,[r3,#0]           ;2034
001dd2  f8b2c000          LDRH     r12,[r2,#0]           ;2035
;;;2038   		}	else {
;;;2039   			TIM5->CCER |= TIM_CCER_CC1P;
001dd6  8814              LDRH     r4,[r2,#0]
001dd8  f01c0f02          TST      r12,#2                ;2035
001ddc  f6404c34          MOV      r12,#0xc34            ;2037
001de0  f2c40c00          MOVT     r12,#0x4000           ;2037
001de4  d00a              BEQ      |L1.7676|
001de6  f0240402          BIC      r4,r4,#2              ;2036
001dea  8014              STRH     r4,[r2,#0]            ;2036
001dec  f8dcc000          LDR      r12,[r12,#0]          ;2037
001df0  6c4c              LDR      r4,[r1,#0x44]         ;2037  ; Ch1
001df2  ebac0c04          SUB      r12,r12,r4            ;2037
001df6  f8c0c420          STR      r12,[r0,#0x420]       ;2037  ; Metro
001dfa  e006              B        |L1.7690|
                  |L1.7676|
001dfc  f0440402          ORR      r4,r4,#2
001e00  8014              STRH     r4,[r2,#0]
;;;2040   			Ch1 = TIM5->CCR1;
001e02  f8dcc000          LDR      r12,[r12,#0]
001e06  f8c1c044          STR      r12,[r1,#0x44]  ; Ch1
                  |L1.7690|
;;;2041   		} //if (TIM5->CCER & TIM_CCER_CC1P)	
;;;2042   	} //if (TIM5->SR & TIM_SR_CC1IF)
;;;2043   	
;;;2044   	if (TIM5->SR & TIM_SR_CC2IF) {			/* Прерывание от второго канала захвата		*/
001e0a  f8b3c000          LDRH     r12,[r3,#0]
001e0e  f01c0f04          TST      r12,#4
001e12  d021              BEQ      |L1.7768|
;;;2045   		TIM5->SR &= ~TIM_SR_CC2IF;				/* Сбрасываем бит 											*/
001e14  f8b3c000          LDRH     r12,[r3,#0]
001e18  f02c0c04          BIC      r12,r12,#4
001e1c  f8a3c000          STRH     r12,[r3,#0]
;;;2046   		if (TIM5->CCER & TIM_CCER_CC2P) {
001e20  f8b2c000          LDRH     r12,[r2,#0]
;;;2047   			TIM5->CCER &= ~TIM_CCER_CC2P;
;;;2048   			Metro.T[4] = (unsigned int)TIM5->CCR2 - Ch2;
;;;2049   		}	else {
;;;2050   			TIM5->CCER |= TIM_CCER_CC2P;
001e24  8814              LDRH     r4,[r2,#0]
001e26  f01c0f20          TST      r12,#0x20             ;2046
001e2a  f6404c38          MOV      r12,#0xc38            ;2048
001e2e  f2c40c00          MOVT     r12,#0x4000           ;2048
001e32  d00a              BEQ      |L1.7754|
001e34  f0240420          BIC      r4,r4,#0x20           ;2047
001e38  8014              STRH     r4,[r2,#0]            ;2047
001e3a  f8dcc000          LDR      r12,[r12,#0]          ;2048
001e3e  6c8c              LDR      r4,[r1,#0x48]         ;2048  ; Ch2
001e40  ebac0c04          SUB      r12,r12,r4            ;2048
001e44  f8c0c424          STR      r12,[r0,#0x424]       ;2048  ; Metro
001e48  e006              B        |L1.7768|
                  |L1.7754|
001e4a  f0440420          ORR      r4,r4,#0x20
001e4e  8014              STRH     r4,[r2,#0]
;;;2051   			Ch2 = TIM5->CCR2;
001e50  f8dcc000          LDR      r12,[r12,#0]
001e54  f8c1c048          STR      r12,[r1,#0x48]  ; Ch2
                  |L1.7768|
;;;2052   		} //if (TIM5->CCER & TIM_CCER_CC2P)	
;;;2053   	}
;;;2054   	
;;;2055   	if (TIM5->SR & TIM_SR_CC3IF) {			/* Прерывание от третьего канала захвата	*/
001e58  f8b3c000          LDRH     r12,[r3,#0]
001e5c  f01c0f08          TST      r12,#8
;;;2056   		TIM5->SR &= ~TIM_SR_CC3IF;				/* Сбрасываем бит 												*/
;;;2057   		if (TIM5->CCER & TIM_CCER_CC3P) {
;;;2058   			TIM5->CCER &= ~TIM_CCER_CC3P;
;;;2059   			Metro.T[5] = (unsigned int)TIM5->CCR3 - Ch3;
;;;2060   		}	else {
;;;2061   			TIM5->CCER |= TIM_CCER_CC3P;
;;;2062   			Ch3 = TIM5->CCR3;
;;;2063   		} //if (TIM5->CCER & TIM_CCER_CC3P)	
;;;2064   	}
;;;2065   } //void TIM5_IRQHandler
001e60  bf04              ITT      EQ
001e62  bc10              POPEQ    {r4}
001e64  4770              BXEQ     lr
001e66  f8b3c000          LDRH     r12,[r3,#0]           ;2056
001e6a  f02c0c08          BIC      r12,r12,#8            ;2056
001e6e  f8a3c000          STRH     r12,[r3,#0]           ;2056
001e72  8813              LDRH     r3,[r2,#0]            ;2057
001e74  f4137f00          TST      r3,#0x200             ;2057
001e78  f640433c          MOV      r3,#0xc3c             ;2059
001e7c  f2c40300          MOVT     r3,#0x4000            ;2059
001e80  d00c              BEQ      |L1.7836|
001e82  f8b2c000          LDRH     r12,[r2,#0]           ;2058
001e86  f42c7c00          BIC      r12,r12,#0x200        ;2058
001e8a  f8a2c000          STRH     r12,[r2,#0]           ;2058
001e8e  681a              LDR      r2,[r3,#0]            ;2059
001e90  6cc9              LDR      r1,[r1,#0x4c]         ;2059  ; Ch3
001e92  1a51              SUBS     r1,r2,r1              ;2059
001e94  f8c01428          STR      r1,[r0,#0x428]        ;2059  ; Metro
001e98  bc10              POP      {r4}
001e9a  4770              BX       lr
                  |L1.7836|
001e9c  8810              LDRH     r0,[r2,#0]            ;2061
001e9e  f4407000          ORR      r0,r0,#0x200          ;2061
001ea2  8010              STRH     r0,[r2,#0]            ;2061
001ea4  6818              LDR      r0,[r3,#0]            ;2062
001ea6  64c8              STR      r0,[r1,#0x4c]         ;2062  ; Ch3
001ea8  bc10              POP      {r4}
001eaa  4770              BX       lr
;;;2066   
                          ENDP

                  CheckReady PROC
;;;630    
;;;631    static __inline  int CheckReady(void) {						/* Проверка готовности к включению				*/
001eac  2000              MOVS     r0,#0
;;;632    int TempCode = 0;
;;;633    
;;;634    	if (EvPrms.AlarmWord1 != 0)	TempCode |= (1ul << 0);														/*	Не сквитирована авария	*/
001eae  f2400200          MOVW     r2,#:LOWER16: ||.bss||+84
001eb2  f2c00200          MOVT     r2,#:UPPER16: ||.bss||+84
001eb6  6a91              LDR      r1,[r2,#0x28]  ; Metro
001eb8  2900              CMP      r1,#0
001eba  bf18              IT       NE
001ebc  2001              MOVNE    r0,#1
;;;635    	
;;;636    	TempCode |= (PeriphBB(TIM1->SR, TIM_SR_BIF_bit) << 1);												/* Флаг TIM1 BKIN						*/
001ebe  2100              MOVS     r1,#0
001ec0  f2c42120          MOVT     r1,#0x4220
001ec4  f8d1121c          LDR      r1,[r1,#0x21c]
001ec8  ea400041          ORR      r0,r0,r1,LSL #1
;;;637    	TempCode |= (PeriphBB(TIM8->SR, TIM_SR_BIF_bit) << 2);												/* Флаг TIM8 BKIN						*/
001ecc  f44f4100          MOV      r1,#0x8000
001ed0  f2c42120          MOVT     r1,#0x4220
001ed4  f8d1121c          LDR      r1,[r1,#0x21c]
;;;638    
;;;639    	if (EvPrms.IGBTStat1[0] | EvPrms.IGBTStat2[0] | EvPrms.IGBTStat3[0] | EvPrms.IGBTStat4[0]) 	TempCode |= (1ul << 3);									/* Статус IGBT							*/
001ed8  f9b2309a          LDRSH    r3,[r2,#0x9a]  ; Metro
001edc  ea400081          ORR      r0,r0,r1,LSL #2       ;637
001ee0  f9b2108c          LDRSH    r1,[r2,#0x8c]  ; Metro
001ee4  f9b2c0e6          LDRSH    r12,[r2,#0xe6]  ; Metro
001ee8  4319              ORRS     r1,r1,r3
001eea  f9b230a8          LDRSH    r3,[r2,#0xa8]  ; Metro
001eee  ea43030c          ORR      r3,r3,r12
001ef2  4319              ORRS     r1,r1,r3
001ef4  bf18              IT       NE
001ef6  f0400008          ORRNE    r0,r0,#8
;;;640    
;;;641    	if ((EvPrms.Udc1Flt < SavePrms.RefUdcZarad) || (EvPrms.Udc2Flt < SavePrms.RefUdcZarad)) 		TempCode |= (1ul << 4);
001efa  f9b23032          LDRSH    r3,[r2,#0x32]  ; Metro
001efe  f9b21ee0          LDRSH    r1,[r2,#0xee0]  ; Metro
001f02  428b              CMP      r3,r1
001f04  db03              BLT      |L1.7950|
001f06  f9b23034          LDRSH    r3,[r2,#0x34]  ; Metro
001f0a  4299              CMP      r1,r3
001f0c  dd01              BLE      |L1.7954|
                  |L1.7950|
001f0e  f0400010          ORR      r0,r0,#0x10
                  |L1.7954|
;;;642    	if (EvPrms.SUFlt < SavePrms.RefSUZarad)																											TempCode |= (1ul << 5);
001f12  f9b21030          LDRSH    r1,[r2,#0x30]  ; Metro
001f16  f9b22ee2          LDRSH    r2,[r2,#0xee2]  ; Metro
001f1a  4291              CMP      r1,r2
001f1c  bfb8              IT       LT
001f1e  f0400020          ORRLT    r0,r0,#0x20
;;;643    	
;;;644    	if ((PrgData.KM1ENA) || (PrgData.KM1ON) || (PrgData.ACZaradENA) || (PrgData.AC_KM_ENA) || (PrgData.FlagNeedACZarad)) TempCode |= (1ul << 6);
001f22  f2400100          MOVW     r1,#:LOWER16: ||.bss||+8276
001f26  f2c00100          MOVT     r1,#:UPPER16: ||.bss||+8276
001f2a  f8d123ec          LDR      r2,[r1,#0x3ec]  ; Metro
001f2e  2a00              CMP      r2,#0
001f30  bf04              ITT      EQ
001f32  f8d123e8          LDREQ    r2,[r1,#0x3e8]  ; Metro
001f36  2a00              CMPEQ    r2,#0
001f38  d10a              BNE      |L1.8016|
001f3a  f8b123f2          LDRH     r2,[r1,#0x3f2]  ; Metro
001f3e  2a00              CMP      r2,#0
001f40  bf01              ITTTT    EQ
001f42  f8b123f0          LDRHEQ   r2,[r1,#0x3f0]  ; Metro
001f46  2a00              CMPEQ    r2,#0
001f48  f8b123d8          LDRHEQ   r2,[r1,#0x3d8]  ; Metro
001f4c  2a00              CMPEQ    r2,#0
001f4e  d001              BEQ      |L1.8020|
                  |L1.8016|
001f50  f0400040          ORR      r0,r0,#0x40
                  |L1.8020|
;;;645    
;;;646    	if (PrgData.AC_KM_ON == 0)  TempCode |= (1ul << 7);
001f54  f8b113de          LDRH     r1,[r1,#0x3de]  ; Metro
001f58  2900              CMP      r1,#0
001f5a  bf08              IT       EQ
001f5c  f0400080          ORREQ    r0,r0,#0x80
;;;647    	
;;;648    	return TempCode;
;;;649    }
001f60  4770              BX       lr
;;;650    
                          ENDP

                  Working PROC
;;;954    
;;;955    static __inline void Working(void) {							/* Состояние работы												*/
001f62  b570              PUSH     {r4-r6,lr}
;;;956    	/* Выключаем */
;;;957    	if  (EvPrms.AlarmWord1)	{/*Metro.CANCmndTx |= 0x0001; */Disable(1); } else										/* Отправляем команду на подхват	*/	
001f64  f2400600          MOVW     r6,#:LOWER16: ||.bss||+84
001f68  f2c00600          MOVT     r6,#:UPPER16: ||.bss||+84
001f6c  6ab3              LDR      r3,[r6,#0x28]  ; Metro
001f6e  2001              MOVS     r0,#1
001f70  f64801bc          MOV      r1,#0x88bc
001f74  f64002bc          MOV      r2,#0x8bc
001f78  2500              MOVS     r5,#0
001f7a  f2c42120          MOVT     r1,#0x4220
001f7e  f2c42220          MOVT     r2,#0x4220
001f82  f5065400          ADD      r4,r6,#0x2000
001f86  2b00              CMP      r3,#0
001f88  d040              BEQ      |L1.8204|
001f8a  600d              STR      r5,[r1,#0]            ;955
001f8c  6015              STR      r5,[r2,#0]            ;955
001f8e  f8a45300          STRH     r5,[r4,#0x300]        ;955
001f92  f8a60218          STRH     r0,[r6,#0x218]        ;955
                  |L1.8086|
001f96  f9b62ef2          LDRSH    r2,[r6,#0xef2]        ;955  ; Metro
001f9a  f2400000          MOVW     r0,#:LOWER16: ||.bss||+84
001f9e  f2c00000          MOVT     r0,#:UPPER16: ||.bss||+84
001fa2  f8d41404          LDR      r1,[r4,#0x404]  ; Metro
001fa6  f8d00ef8          LDR      r0,[r0,#0xef8]
001faa  ebb24f21          CMP      r2,r1,ASR #16
001fae  bfb8              IT       LT
001fb0  1a09              SUBLT    r1,r1,r0
001fb2  bfc8              IT       GT
001fb4  4401              ADDGT    r1,r0
001fb6  d001              BEQ      |L1.8124|
001fb8  f8c41404          STR      r1,[r4,#0x404]  ; Metro
                  |L1.8124|
001fbc  f8d41408          LDR      r1,[r4,#0x408]  ; Metro
001fc0  ebb24f21          CMP      r2,r1,ASR #16
001fc4  bfb8              IT       LT
001fc6  1a08              SUBLT    r0,r1,r0
001fc8  bfc8              IT       GT
001fca  4408              ADDGT    r0,r1
001fcc  d001              BEQ      |L1.8146|
001fce  f8c40408          STR      r0,[r4,#0x408]  ; Metro
                  |L1.8146|
001fd2  f8b4030e          LDRH     r0,[r4,#0x30e]  ; Metro
001fd6  b360              CBZ      r0,|L1.8242|
                  |L1.8152|
001fd8  f8d405e8          LDR      r0,[r4,#0x5e8]  ; Metro
001fdc  f8c40318          STR      r0,[r4,#0x318]  ; Metro
001fe0  f8d405f0          LDR      r0,[r4,#0x5f0]  ; Metro
001fe4  f8c40330          STR      r0,[r4,#0x330]  ; Metro
001fe8  f9b61032          LDRSH    r1,[r6,#0x32]  ; Metro
001fec  f8d42404          LDR      r2,[r4,#0x404]  ; Metro
001ff0  ebc14022          RSB      r0,r1,r2,ASR #16
001ff4  2800              CMP      r0,#0
001ff6  bf44              ITT      MI
001ff8  eb014022          ADDMI    r0,r1,r2,ASR #16
001ffc  4240              RSBMI    r0,r0,#0
001ffe  f9b61eea          LDRSH    r1,[r6,#0xeea]  ; Metro
002002  4288              CMP      r0,r1
002004  bfc8              IT       GT
002006  f8a4530e          STRHGT   r5,[r4,#0x30e]
;;;958    		if ((Metro.NeedDisable)||(Metro.K_Stop)) { EvPrms.EventCode = 0x0253; PrgData.OscilCmnd.OscilNeed = 1; Disable(1); return; }
;;;959    
;;;960    	/* Подгонка уставки Udc						*/
;;;961    	SoftChangeUdc();
;;;962    		
;;;963    	/* Расчитываем угол и апмлитуды		*/
;;;964    	CalcRegs();
;;;965    	
;;;966    }
00200a  bd70              POP      {r4-r6,pc}
                  |L1.8204|
00200c  f8b43300          LDRH     r3,[r4,#0x300]        ;958  ; Metro
002010  2b00              CMP      r3,#0                 ;958
002012  bf04              ITT      EQ                    ;958
002014  f8b433d2          LDRHEQ   r3,[r4,#0x3d2]        ;958  ; Metro
002018  2b00              CMPEQ    r3,#0                 ;958
00201a  d0bc              BEQ      |L1.8086|
00201c  f2402353          MOV      r3,#0x253             ;958
002020  6033              STR      r3,[r6,#0]            ;958  ; Metro
002022  8120              STRH     r0,[r4,#8]            ;958
002024  600d              STR      r5,[r1,#0]            ;958
002026  6015              STR      r5,[r2,#0]            ;958
002028  f8a45300          STRH     r5,[r4,#0x300]        ;958
00202c  f8a60218          STRH     r0,[r6,#0x218]        ;958
002030  bd70              POP      {r4-r6,pc}
                  |L1.8242|
002032  f9b610f8          LDRSH    r1,[r6,#0xf8]  ; Metro
002036  f9b60ef4          LDRSH    r0,[r6,#0xef4]  ; Metro
00203a  f60663b4          ADD      r3,r6,#0xeb4
00203e  f2400200          MOVW     r2,#:LOWER16: ||.bss||+9200
002042  f2c00200          MOVT     r2,#:UPPER16: ||.bss||+9200
002046  f7fffffe          BL       PI_REG
00204a  0041              LSLS     r1,r0,#1
00204c  f8c4131c          STR      r1,[r4,#0x31c]  ; Metro
002050  f8d4039c          LDR      r0,[r4,#0x39c]  ; Metro
002054  13c2              ASRS     r2,r0,#15
002056  f8d4034c          LDR      r0,[r4,#0x34c]  ; Metro
00205a  ebb20fe0          CMP      r2,r0,ASR #3
00205e  bfba              ITTE     LT
002060  0302              LSLLT    r2,r0,#12
002062  f8c4239c          STRLT    r2,[r4,#0x39c]  ; Metro
002066  f8d4239c          LDRGE    r2,[r4,#0x39c]  ; Metro
00206a  ebb03fe2          CMP      r0,r2,ASR #15
00206e  bfbc              ITT      LT
002070  03c2              LSLLT    r2,r0,#15
002072  f8c4239c          STRLT    r2,[r4,#0x39c]  ; Metro
002076  ebb10fe0          CMP      r1,r0,ASR #3
00207a  bfbc              ITT      LT
00207c  10c1              ASRLT    r1,r0,#3
00207e  f8c4131c          STRLT    r1,[r4,#0x31c]  ; Metro
002082  4281              CMP      r1,r0
002084  bfc8              IT       GT
002086  f8c4031c          STRGT    r0,[r4,#0x31c]  ; Metro
00208a  f9b610fa          LDRSH    r1,[r6,#0xfa]  ; Metro
00208e  f9b60ef4          LDRSH    r0,[r6,#0xef4]  ; Metro
002092  f60663b4          ADD      r3,r6,#0xeb4
002096  f2400200          MOVW     r2,#:LOWER16: ||.bss||+9204
00209a  f2c00200          MOVT     r2,#:UPPER16: ||.bss||+9204
00209e  f7fffffe          BL       PI_REG
0020a2  0041              LSLS     r1,r0,#1
0020a4  f8c41334          STR      r1,[r4,#0x334]  ; Metro
0020a8  f8d403a0          LDR      r0,[r4,#0x3a0]  ; Metro
0020ac  13c2              ASRS     r2,r0,#15
0020ae  f8d4034c          LDR      r0,[r4,#0x34c]  ; Metro
0020b2  ebb20fe0          CMP      r2,r0,ASR #3
0020b6  bfba              ITTE     LT
0020b8  0302              LSLLT    r2,r0,#12
0020ba  f8c423a0          STRLT    r2,[r4,#0x3a0]  ; Metro
0020be  f8d423a0          LDRGE    r2,[r4,#0x3a0]  ; Metro
0020c2  ebb03fe2          CMP      r0,r2,ASR #15
0020c6  bfbc              ITT      LT
0020c8  03c2              LSLLT    r2,r0,#15
0020ca  f8c423a0          STRLT    r2,[r4,#0x3a0]  ; Metro
0020ce  ebb10fe0          CMP      r1,r0,ASR #3
0020d2  bfbc              ITT      LT
0020d4  10c1              ASRLT    r1,r0,#3
0020d6  f8c41334          STRLT    r1,[r4,#0x334]  ; Metro
0020da  4281              CMP      r1,r0
0020dc  bfc8              IT       GT
0020de  f8c40334          STRGT    r0,[r4,#0x334]  ; Metro
0020e2  f8b4030e          LDRH     r0,[r4,#0x30e]  ; Metro
0020e6  2800              CMP      r0,#0
0020e8  f47faf76          BNE      |L1.8152|
0020ec  f8d40404          LDR      r0,[r4,#0x404]  ; Metro
0020f0  f9b610f4          LDRSH    r1,[r6,#0xf4]  ; Metro
0020f4  1400              ASRS     r0,r0,#16
0020f6  f506636b          ADD      r3,r6,#0xeb0
0020fa  f2400200          MOVW     r2,#:LOWER16: ||.bss||+9192
0020fe  f2c00200          MOVT     r2,#:UPPER16: ||.bss||+9192
002102  f7fffffe          BL       PI_REG
002106  f8c40318          STR      r0,[r4,#0x318]  ; Metro
00210a  f8d40408          LDR      r0,[r4,#0x408]  ; Metro
00210e  f9b610f6          LDRSH    r1,[r6,#0xf6]  ; Metro
002112  1400              ASRS     r0,r0,#16
002114  f506636b          ADD      r3,r6,#0xeb0
002118  f2400200          MOVW     r2,#:LOWER16: ||.bss||+9196
00211c  f2c00200          MOVT     r2,#:UPPER16: ||.bss||+9196
002120  f7fffffe          BL       PI_REG
002124  f8d41318          LDR      r1,[r4,#0x318]  ; Metro
002128  f300000d          SSAT     r0,#14,r0
00212c  f301010d          SSAT     r1,#14,r1
002130  f8c41318          STR      r1,[r4,#0x318]  ; Metro
002134  f8d42394          LDR      r2,[r4,#0x394]  ; Metro
002138  b20b              SXTH     r3,r1
00213a  f302021d          SSAT     r2,#30,r2
00213e  f8c42394          STR      r2,[r4,#0x394]  ; Metro
002142  f8c40330          STR      r0,[r4,#0x330]  ; Metro
002146  f8d40398          LDR      r0,[r4,#0x398]  ; Metro
00214a  2220              MOVS     r2,#0x20
00214c  f300001d          SSAT     r0,#30,r0
002150  f8c40398          STR      r0,[r4,#0x398]  ; Metro
002154  f2400000          MOVW     r0,#:LOWER16: ||.bss||+9792
002158  f2c00000          MOVT     r0,#:UPPER16: ||.bss||+9792
00215c  6801              LDR      r1,[r0,#0]
00215e  eba34321          SUB      r3,r3,r1,ASR #16
002162  fb031102          MLA      r1,r3,r2,r1
002166  6001              STR      r1,[r0,#0]
002168  1408              ASRS     r0,r1,#16
00216a  f8c405e8          STR      r0,[r4,#0x5e8]  ; Metro
00216e  f8b40330          LDRH     r0,[r4,#0x330]  ; Metro
002172  2320              MOVS     r3,#0x20
002174  b202              SXTH     r2,r0
002176  f2400000          MOVW     r0,#:LOWER16: ||.bss||+9800
00217a  f2c00000          MOVT     r0,#:UPPER16: ||.bss||+9800
00217e  6801              LDR      r1,[r0,#0]
002180  eba24221          SUB      r2,r2,r1,ASR #16
002184  fb021103          MLA      r1,r2,r3,r1
002188  6001              STR      r1,[r0,#0]
00218a  1408              ASRS     r0,r1,#16
00218c  f8c405f0          STR      r0,[r4,#0x5f0]  ; Metro
002190  f8b40340          LDRH     r0,[r4,#0x340]  ; Metro
002194  2220              MOVS     r2,#0x20
002196  b203              SXTH     r3,r0
002198  f2400000          MOVW     r0,#:LOWER16: ||.bss||+9808
00219c  f2c00000          MOVT     r0,#:UPPER16: ||.bss||+9808
0021a0  6801              LDR      r1,[r0,#0]
0021a2  eba34321          SUB      r3,r3,r1,ASR #16
0021a6  fb031102          MLA      r1,r3,r2,r1
0021aa  6001              STR      r1,[r0,#0]
0021ac  1408              ASRS     r0,r1,#16
0021ae  f8c405f8          STR      r0,[r4,#0x5f8]  ; Metro
0021b2  bd70              POP      {r4-r6,pc}
;;;967    
                          ENDP

                  CalcPWM PROC
;;;1388   
;;;1389   static __inline void CalcPWM(void) {							/* Расчет ШИМ-а														*/
0021b4  e92d41f0          PUSH     {r4-r8,lr}
0021b8  ed2d8b04          VPUSH    {d8-d9}
0021bc  b082              SUB      sp,sp,#8
0021be  f2400700          MOVW     r7,#:LOWER16: ||.bss||+84
0021c2  f2c00700          MOVT     r7,#:UPPER16: ||.bss||+84
0021c6  f9b70016          LDRSH    r0,[r7,#0x16]  ; Metro
0021ca  f9b71014          LDRSH    r1,[r7,#0x14]  ; Metro
0021ce  ee000a10          VMOV     s0,r0
0021d2  eb000141          ADD      r1,r0,r1,LSL #1
0021d6  eef80ac0          VCVT.F32.S32 s1,s0
0021da  ed9f0aa8          VLDR     s0,|L1.9340|
0021de  ee200a80          VMUL.F32 s0,s1,s0
0021e2  ee001a90          VMOV     s1,r1
0021e6  eef80ae0          VCVT.F32.S32 s1,s1
0021ea  f7fffffe          BL       __hardfp_atan2f
0021ee  ed9f8aa4          VLDR     s16,|L1.9344|
0021f2  eec00a08          VDIV.F32 s1,s0,s16
0021f6  ed9f0aa3          VLDR     s0,|L1.9348|
;;;1390   static TIM_TypeDef TIM8x;
;;;1391   
;;;1392   //	PrgData.Phase1 += 0x0667;
;;;1393   //	PrgData.Phase1 &= 0xFFFF;	
;;;1394   
;;;1395   //	Metro.AMP1 = Metro.ARR * PrgData.TestAMP / 5000;
;;;1396   //	if (PrgData.AMP1 > PrgData.ARR) PrgData.AMP1 = PrgData.ARR;		
;;;1397   //	
;;;1398   //	CalcGamma3(PrgData.Phase1, PrgData.AMP1, PrgData.ARR, TIM8);
;;;1399   
;;;1400   //	TIM1->CCR1 = TIM8->CCR1;
;;;1401   //	TIM1->CCR2 = TIM8->CCR2;
;;;1402   //	TIM1->CCR3 = TIM8->CCR3;	
;;;1403   
;;;1404   //	return;	
;;;1405   	
;;;1406   	/* Расчитываем текущий фазовый угол	по сети	*/
;;;1407     Metro.Ugol_n0	= PrgData.WorkUgol = CalcUgol();
0021fa  f5075400          ADD      r4,r7,#0x2000
0021fe  ee200a80          VMUL.F32 s0,s1,s0
002202  eebd0ac0          VCVT.S32.F32 s0,s0
002206  ee100a10          VMOV     r0,s0
00220a  f8c40354          STR      r0,[r4,#0x354]  ; Metro
;;;1408   	
;;;1409   	/* Подгоняем внутренний генератор к сети		*/
;;;1410   	if (SavePrms.EnaIntGen == 1)
00220e  f8c40310          STR      r0,[r4,#0x310]  ; Metro
002212  f9b71e6c          LDRSH    r1,[r7,#0xe6c]  ; Metro
002216  2901              CMP      r1,#1
002218  d002              BEQ      |L1.8736|
;;;1411   	{
;;;1412   		Metro.dPhaseFlt	 		= AP_REG(Metro.Ugol_n0 - (Metro.PhaseCalc >> 16), SavePrms.T1dPhase, &Metro.BufFiltdPhase);
;;;1413   		Metro.IncPhaseCalc += (Metro.dPhaseFlt * SavePrms.K1dPhase);
;;;1414   		Metro.PhaseCalc		 += (Metro.IncPhaseCalc + Metro.dPhaseFlt * SavePrms.K2dPhase);
;;;1415   		
;;;1416   		if (Metro.IncPhaseCalc > (0x03363333 << 1)) Metro.IncPhaseCalc = (0x03363333 << 1);
;;;1417   		if (Metro.IncPhaseCalc < (0x03300000 << 1)) Metro.IncPhaseCalc = (0x03300000 << 1);
;;;1418   		
;;;1419   		PrgData.WorkUgol  = (Metro.PhaseCalc >> 16);	
;;;1420   	}
;;;1421   	else if (SavePrms.EnaIntGen == 2)
00221a  2902              CMP      r1,#2
00221c  d036              BEQ      |L1.8844|
00221e  e092              B        |L1.9030|
                  |L1.8736|
002220  f8d4133c          LDR      r1,[r4,#0x33c]        ;1412  ; Metro
002224  f5075610          ADD      r6,r7,#0x2400         ;1412
002228  eba04021          SUB      r0,r0,r1,ASR #16      ;1412
00222c  b202              SXTH     r2,r0                 ;1412
00222e  f8b70e64          LDRH     r0,[r7,#0xe64]        ;1412  ; Metro
002232  b281              UXTH     r1,r0                 ;1412
002234  6830              LDR      r0,[r6,#0]            ;1412
002236  eba24220          SUB      r2,r2,r0,ASR #16      ;1412
00223a  fb020001          MLA      r0,r2,r1,r0           ;1412
00223e  1401              ASRS     r1,r0,#16             ;1412
002240  6030              STR      r0,[r6,#0]            ;1412
002242  f8c41338          STR      r1,[r4,#0x338]        ;1413  ; Metro
002246  f8d40340          LDR      r0,[r4,#0x340]        ;1413  ; Metro
00224a  f8d72e60          LDR      r2,[r7,#0xe60]        ;1413  ; Metro
00224e  fb010002          MLA      r0,r1,r2,r0           ;1413
002252  f8c40340          STR      r0,[r4,#0x340]        ;1414  ; Metro
002256  f8d72e68          LDR      r2,[r7,#0xe68]        ;1414  ; Metro
00225a  fb010102          MLA      r1,r1,r2,r0           ;1414
00225e  f8d4233c          LDR      r2,[r4,#0x33c]        ;1414  ; Metro
002262  4411              ADD      r1,r1,r2              ;1414
002264  f2466266          MOV      r2,#0x6666            ;1416
002268  f2c0626c          MOVT     r2,#0x66c             ;1416
00226c  f8c4133c          STR      r1,[r4,#0x33c]        ;1416  ; Metro
002270  4290              CMP      r0,r2                 ;1416
002272  bfc8              IT       GT                    ;1416
002274  f8c42340          STRGT    r2,[r4,#0x340]        ;1416  ; Metro
002278  dc06              BGT      |L1.8840|
00227a  f1b06fcc          CMP      r0,#0x6600000         ;1417
00227e  bfbc              ITT      LT                    ;1417
002280  f04f60cc          MOVLT    r0,#0x6600000         ;1417
002284  f8c40340          STRLT    r0,[r4,#0x340]        ;1417  ; Metro
                  |L1.8840|
002288  1408              ASRS     r0,r1,#16             ;1419
00228a  e05a              B        |L1.9026|
                  |L1.8844|
;;;1422   	{
;;;1423   		PrgData.PhaseCalc = (SoftwarePLL(EvPrms.Uab, EvPrms.Ubc, EvPrms.Uca, PrgData.PhaseCalc >> 16) << 16);
00228c  f9b73014          LDRSH    r3,[r7,#0x14]  ; Metro
002290  f9b71016          LDRSH    r1,[r7,#0x16]  ; Metro
002294  f9b70018          LDRSH    r0,[r7,#0x18]  ; Metro
002298  eba30361          SUB      r3,r3,r1,ASR #1
00229c  eba30360          SUB      r3,r3,r0,ASR #1
0022a0  1a08              SUBS     r0,r1,r0
0022a2  f24b5105          MOV      r1,#0xb505
0022a6  fb801001          SMULL    r1,r0,r0,r1
0022aa  0c09              LSRS     r1,r1,#16
0022ac  ea414800          ORR      r8,r1,r0,LSL #16
0022b0  f8b40340          LDRH     r0,[r4,#0x340]  ; Metro
0022b4  f8d4233c          LDR      r2,[r4,#0x33c]  ; Metro
0022b8  f24d1c06          MOV      r12,#0xd106
0022bc  eb004022          ADD      r0,r0,r2,ASR #16
0022c0  b285              UXTH     r5,r0
0022c2  ee005a10          VMOV     s0,r5
0022c6  fb83c30c          SMULL    r12,r3,r3,r12
0022ca  eeb80ac0          VCVT.F32.S32 s0,s0
0022ce  ea4f4c1c          LSR      r12,r12,#16
0022d2  ea4c4603          ORR      r6,r12,r3,LSL #16
0022d6  ee200a08          VMUL.F32 s0,s0,s16
0022da  eddf8a6b          VLDR     s17,|L1.9352|
0022de  ee200a28          VMUL.F32 s0,s0,s17
0022e2  f7fffffe          BL       __hardfp_cosf
0022e6  ee008a90          VMOV     s1,r8
0022ea  eef80ae0          VCVT.F32.S32 s1,s1
0022ee  ee209a20          VMUL.F32 s18,s0,s1
0022f2  ee005a10          VMOV     s0,r5
0022f6  eeb80ac0          VCVT.F32.S32 s0,s0
0022fa  ee200a08          VMUL.F32 s0,s0,s16
0022fe  ee200a28          VMUL.F32 s0,s0,s17
002302  f7fffffe          BL       __hardfp_sinf
002306  ee006a90          VMOV     s1,r6
00230a  f60763b8          ADD      r3,r7,#0xeb8
00230e  f5075210          ADD      r2,r7,#0x2400
002312  eef80ae0          VCVT.F32.S32 s1,s1
002316  2100              MOVS     r1,#0
002318  ee009a60          VMLS.F32 s18,s0,s1
00231c  eebd0ac9          VCVT.S32.F32 s0,s18
002320  ee100a10          VMOV     r0,s0
002324  f300000f          SSAT     r0,#16,r0
002328  f7fffffe          BL       PI_REG
00232c  f8c40340          STR      r0,[r4,#0x340]  ; Metro
002330  0428              LSLS     r0,r5,#16
;;;1424   		PrgData.WorkUgol  = (Metro.PhaseCalc >> 16) - 0x1555ul;
002332  f64e21ab          MOV      r1,#0xeaab
002336  f6cf71ff          MOVT     r1,#0xffff
00233a  f8c4033c          STR      r0,[r4,#0x33c]  ; Metro
00233e  eb014020          ADD      r0,r1,r0,ASR #16
                  |L1.9026|
002342  f8c40354          STR      r0,[r4,#0x354]  ; Metro
                  |L1.9030|
;;;1425   	}
;;;1426   	
;;;1427   	PrgData.Phase1  = PrgData.WorkUgol - Metro.IncPhase1;
002346  f8b41354          LDRH     r1,[r4,#0x354]  ; Metro
00234a  f8b40318          LDRH     r0,[r4,#0x318]  ; Metro
;;;1428   	PrgData.Phase1 &= 0xFFFF;
;;;1429   	
;;;1430   	PrgData.Phase2  = PrgData.WorkUgol - Metro.IncPhase2;
;;;1431   	PrgData.Phase2 &= 0xFFFF;	
;;;1432   	
;;;1433   	/* TIM8 - левый разъем - первый шкаф 																															*/
;;;1434   	if (ENATIMOffset > 0) 
;;;1435   	{
;;;1436   		CalcGamma3(PrgData.Phase1 , PrgData.AMP1, PrgData.ARR, &TIM8x, PrgData.GammaT8_1_fixcorrect, PrgData.GammaT8_3_fixcorrect);
;;;1437   		PrgData.TIM8_CCR1 = TIM8x.CCR1;
;;;1438   		PrgData.TIM8_CCR2 = TIM8x.CCR2;
;;;1439   		PrgData.TIM8_CCR3 = TIM8x.CCR3;
;;;1440   	} 
;;;1441   	else
;;;1442   	{	
;;;1443   		CalcGamma3(PrgData.Phase1 , PrgData.AMP1, PrgData.ARR, TIM8, PrgData.GammaT8_1_fixcorrect, PrgData.GammaT8_3_fixcorrect);
00234e  f44f6580          MOV      r5,#0x400
002352  1a08              SUBS     r0,r1,r0              ;1427
002354  b280              UXTH     r0,r0                 ;1428
002356  f8c40314          STR      r0,[r4,#0x314]        ;1430  ; Metro
00235a  f8b42330          LDRH     r2,[r4,#0x330]        ;1430  ; Metro
00235e  f2c40501          MOVT     r5,#0x4001
002362  1a89              SUBS     r1,r1,r2              ;1430
002364  b289              UXTH     r1,r1                 ;1431
002366  f8c4132c          STR      r1,[r4,#0x32c]        ;1434  ; Metro
00236a  f9b71efe          LDRSH    r1,[r7,#0xefe]        ;1434  ; Metro
00236e  f9b4280e          LDRSH    r2,[r4,#0x80e]  ; Metro
002372  2900              CMP      r1,#0                 ;1434
002374  f9b4180c          LDRSH    r1,[r4,#0x80c]  ; Metro
002378  e9cd1200          STRD     r1,r2,[sp,#0]
00237c  f8d4234c          LDR      r2,[r4,#0x34c]        ;1434  ; Metro
002380  f8d4131c          LDR      r1,[r4,#0x31c]        ;1434  ; Metro
002384  dd13              BLE      |L1.9134|
002386  f2400300          MOVW     r3,#:LOWER16: ||.bss||;1436
00238a  f2c00300          MOVT     r3,#:UPPER16: ||.bss||;1436
00238e  f7fffffe          BL       CalcGamma3
002392  f2400000          MOVW     r0,#:LOWER16: ||.bss||;1437
002396  f2c00000          MOVT     r0,#:UPPER16: ||.bss||;1437
00239a  6b41              LDR      r1,[r0,#0x34]         ;1437  ; TIM8x
00239c  f8a4157e          STRH     r1,[r4,#0x57e]        ;1437
0023a0  6b81              LDR      r1,[r0,#0x38]         ;1438  ; TIM8x
0023a2  f8a41580          STRH     r1,[r4,#0x580]        ;1438
0023a6  6bc0              LDR      r0,[r0,#0x3c]         ;1439  ; TIM8x
0023a8  f8a40582          STRH     r0,[r4,#0x582]        ;1439
0023ac  e002              B        |L1.9140|
                  |L1.9134|
0023ae  462b              MOV      r3,r5
0023b0  f7fffffe          BL       CalcGamma3
                  |L1.9140|
;;;1444   	}
;;;1445   	
;;;1446   	/* TIM1 - правый разъем	- второй шкаф																															*/
;;;1447   	CalcGamma3(PrgData.Phase2, PrgData.AMP2, PrgData.ARR, TIM1, PrgData.GammaT1_1_fixcorrect, PrgData.GammaT1_3_fixcorrect);
0023b4  f9b41812          LDRSH    r1,[r4,#0x812]  ; Metro
0023b8  f9b40810          LDRSH    r0,[r4,#0x810]  ; Metro
0023bc  e9cd0100          STRD     r0,r1,[sp,#0]
0023c0  2600              MOVS     r6,#0
0023c2  f2c40601          MOVT     r6,#0x4001
0023c6  4633              MOV      r3,r6
0023c8  f8d4234c          LDR      r2,[r4,#0x34c]  ; Metro
0023cc  f8d41334          LDR      r1,[r4,#0x334]  ; Metro
0023d0  f8d4032c          LDR      r0,[r4,#0x32c]  ; Metro
0023d4  f7fffffe          BL       CalcGamma3
;;;1448   
;;;1449   	//Для осциллографирования
;;;1450   	PrgData.TIM1_CCR1 = TIM1->CCR1;
0023d8  6b70              LDR      r0,[r6,#0x34]
0023da  f8a40578          STRH     r0,[r4,#0x578]
;;;1451   	PrgData.TIM1_CCR2 = TIM1->CCR2;
0023de  6bb0              LDR      r0,[r6,#0x38]
0023e0  f8a4057a          STRH     r0,[r4,#0x57a]
;;;1452   	PrgData.TIM1_CCR3 = TIM1->CCR3;
0023e4  6bf0              LDR      r0,[r6,#0x3c]
0023e6  f8a4057c          STRH     r0,[r4,#0x57c]
;;;1453   
;;;1454   	PrgData.OscilAMP1 = PrgData.AMP1 >> 1;
0023ea  f8d4031c          LDR      r0,[r4,#0x31c]  ; Metro
0023ee  1040              ASRS     r0,r0,#1
0023f0  f8a40584          STRH     r0,[r4,#0x584]
;;;1455   	PrgData.OscilAMP2 = PrgData.AMP2 >> 1;
0023f4  f8d40334          LDR      r0,[r4,#0x334]  ; Metro
0023f8  1040              ASRS     r0,r0,#1
0023fa  f8a40586          STRH     r0,[r4,#0x586]
;;;1456   	
;;;1457   	if (ENATIMOffset > 0) 
0023fe  f9b70efe          LDRSH    r0,[r7,#0xefe]  ; Metro
002402  2800              CMP      r0,#0
;;;1458   	{
;;;1459   		if ((TIM8->CR1 & TIM_CR1_DIR) == 0) 
;;;1460   		{
;;;1461   			TIM8->CCR1 = PrgData.TIM8_CCR1;
;;;1462   			TIM8->CCR2 = PrgData.TIM8_CCR2;
;;;1463   			TIM8->CCR3 = PrgData.TIM8_CCR3;
;;;1464   		}
;;;1465   	}
;;;1466   }
002404  bfde              ITTT     LE
002406  b002              ADDLE    sp,sp,#8
002408  ecbd8b04          VPOPLE   {d8-d9}
00240c  e8bd81f0          POPLE    {r4-r8,pc}
002410  8828              LDRH     r0,[r5,#0]            ;1459
002412  f0100f10          TST      r0,#0x10              ;1459
002416  d10e              BNE      |L1.9270|
002418  f2404134          MOV      r1,#0x434             ;1461
00241c  f2c40101          MOVT     r1,#0x4001            ;1461
002420  f9b4057e          LDRSH    r0,[r4,#0x57e]        ;1461  ; Metro
002424  6008              STR      r0,[r1,#0]            ;1461
002426  1d09              ADDS     r1,r1,#4              ;1462
002428  f9b40580          LDRSH    r0,[r4,#0x580]        ;1462  ; Metro
00242c  6008              STR      r0,[r1,#0]            ;1462
00242e  1d09              ADDS     r1,r1,#4              ;1463
002430  f9b40582          LDRSH    r0,[r4,#0x582]        ;1463  ; Metro
002434  6008              STR      r0,[r1,#0]            ;1463
                  |L1.9270|
002436  b002              ADD      sp,sp,#8
002438  ecbd8b04          VPOP     {d8-d9}
00243c  e8bd81f0          POP      {r4-r8,pc}
;;;1467   
                          ENDP

                  PI_REG PROC
;;;11     
;;;12     static __inline int PI_REG(short x, short os, int *Buffer, struct PI_params_type *Params) {
002440  fad0f011          QSUB16   r0,r0,r1
;;;13     short Err;
;;;14     	Err 		= __QSUB16(x,os);
;;;15     	if (Params->Ti == 0) {*Buffer = 0; return (__SSAT((Err * Params->Kp) >> 8, 16));}
002444  8859              LDRH     r1,[r3,#2]
002446  b200              SXTH     r0,r0                 ;14
002448  b179              CBZ      r1,|L1.9322|
;;;16     	*Buffer = __QADD(*Buffer, Err * Params->Ti);
00244a  f8d2c000          LDR      r12,[r2,#0]
00244e  4341              MULS     r1,r0,r1
002450  fa81f18c          QADD     r1,r12,r1
;;;17     	return 		__QADD(*Buffer, __SSAT(Err * Params->Kp, 24) << 8) >> 16;
002454  6011              STR      r1,[r2,#0]
002456  881a              LDRH     r2,[r3,#0]
002458  fb12f000          SMULBB   r0,r2,r0
00245c  f3000017          SSAT     r0,#24,r0
002460  0200              LSLS     r0,r0,#8
002462  fa80f081          QADD     r0,r1,r0
002466  1400              ASRS     r0,r0,#16
;;;18     }
002468  4770              BX       lr
                  |L1.9322|
00246a  2100              MOVS     r1,#0                 ;15
00246c  6011              STR      r1,[r2,#0]            ;15
00246e  8819              LDRH     r1,[r3,#0]            ;15
002470  fb11f000          SMULBB   r0,r1,r0              ;15
002474  f320200f          SSAT     r0,#16,r0,ASR #8      ;15
002478  4770              BX       lr
;;;19     
                          ENDP

00247a  0000              DCW      0x0000
                  |L1.9340|
00247c  3fddb3d7          DCFS     0x3fddb3d7 ; 1.7320507764816284
                  |L1.9344|
002480  40490fdb          DCFS     0x40490fdb ; 3.1415927410125732
                  |L1.9348|
002484  47000000          DCFS     0x47000000 ; 32768
                  |L1.9352|
002488  38000000          DCFS     0x38000000 ; 3.0517578125e-05

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  TIM8x
                          %        84
                  Metro
                          %        10260

                          AREA ||.data||, DATA, ALIGN=3

                  SummUdc1
                          DCD      0x00000000
                  SummUdc2
                          DCD      0x00000000
                  SummI12
                          DCD      0x00000000
                  SummI34
                          DCD      0x00000000
                  SummIa12
                          DCD      0x00000000
                  SummIc12
                          DCD      0x00000000
                  SummIa34
                          DCD      0x00000000
                  SummIc34
                          DCD      0x00000000
                  Count
                          DCD      0x00000000
                  SummQ12
                          DCD      0x00000000
                  SummQ34
                          DCD      0x00000000
                  QCount
                          DCD      0x00000000
                  Counter
                          DCD      0x00000050
                  Result
                          DCD      0x00000000
                  ||Ch1||
                          DCD      0x00000000
                  ||Ch2||
                          DCD      0x00000000
                  ||Ch3||
                          DCD      0x00000000
                  |symbol_number.30|
                          DCD      0x00000000
                  |symbol_number.31|
                          DCD      0x00000000
                  |symbol_number.32|
                          DCD      0x00000000
                  Summ
000050  00000000          DCQ      0x0000000000000000
000054  00000000

;*** Start embedded assembler ***

#line 1 "SOURCE\\Metro.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_Metro_c_8b66ac7e____REV16|
#line 129 ".\\STARTUP\\core_cmInstr.h"
|__asm___7_Metro_c_8b66ac7e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_Metro_c_8b66ac7e____REVSH|
#line 144
|__asm___7_Metro_c_8b66ac7e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
